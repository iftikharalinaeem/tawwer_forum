%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (ozan) ()%%Title: (uc_109-chef&moustache.eps)%%CreationDate: 6/2/09 5:54 PM%%Canvassize: 16383%%BoundingBox: -1 95 2801 2705%%HiResBoundingBox: -0.027344 95.9766 2800.0391 2704.0234%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1400.5 1399.5 1400.5 1399.5%AI3_TileBox: 1120.5 1020 1679.5 1803%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 2800 2800%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -2039.9502 3724.1729 0.1667 1210 681 26 0 0 6 169 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 120 8%%BeginData: 24252 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDB2FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFFAFFDE7FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFDD5FFAFFFFFFFAFFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFAEFFFFFFAFFFFFFFAFFDC3FFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFDB9FFAFFFFFFFAFFFFFFFA8FFFFFFA8%FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFFFFFA8FFFFFFAFFFFFFFAFFDAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFAFFFAFFFAFFFAEFFAFFFAEFFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFAEFFAFFFAEFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFF%FFAFFD44FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD3CFFAFFFFFFFA8FFFFFFA8FFAF%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFAFFFA9FFAFFFA9FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFAFFD42FFAF%FFFFFFAFFFFFFFA7CEADCEAEFFFFFFAFFFCFCFAEFD4CFFAFFFFFFFAFFFFF%FFAFFFAFFFAFFFAFFFAEFFAFFFA8FFAFFFA8FFAFFFA9FFAFFFA8FFAFFFA9%CFA6CEA7CEA7CEA7FFA7CEA6CEA6CEA6CEA7CFA9FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFAEFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFD34FFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFFA7CFADCEA7CFAECFA6CFCFCFADCFCECEA7CECE%CFADCFCECEA7CEA7CFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FD28FFAFFFFFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAEFFA8CEA6CEA6CEA7CEA7CEA7CEA7CEA7CEA7CEA7CEA7%CEA7CEA7CEA7CEA7CEA6CFA9FFAEFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFAFFD2EFFAFFFFFFFAF%FFFFFFAECEA6CEADCFCECFADCFCECFADCFCECEADCEADCEADCEADCEA7CEAD%CEA7CEADCEA6FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD2CFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFAFFFAEFFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%A7A6CEA7CEA7CEA7CEA7CEA7CEA7CEA7CEA6CEA7CEA6CEA6CEA6CEA6CEA6%CEA6CEA7FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFAEFFAF%FFAFFFFFFFAFFFFFFFAFFD24FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFAFFFAFCFA6CEA7CEADCEA7CEADCEA7CEADCEA6CEA7CEA6CEA7CEA6CEA7%CEA6CEA7CEA6CEA7CEAEFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFD1CFFAFFFFFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAEFFA8FFA8FFA8FFAFFFA6ADA6CEA6CEA6CEA6CEA6CEA6%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFAEFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFFFFFA8FFFFFFAFFD1EFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAECEA6%CEA7CEADCEA7CEADCEA7CEADCEA7CEADCEA7CEADCEA7CEADCEA7CEADCEA7%CEADCEAEFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFD24FFAFFFFF%FFAFFFFFFFAFFFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFCFA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6%CEA6CEA6CEA6CEA7FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFAFFFAFFFFFFFAFFFFFFFAFFD18FFAFFFFFFFAFFFFF%FFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAECDA6CEADCEA6CEA7CEA6%CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA7CEA6CFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD14FFA8%FFFFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA6A6A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFFFFFAEFD16FFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%CEA6CEA6CEA7CEADCEA7CEADCEA7CEADCEA7CEADCEA7CEADCEA7CEADCEA7%CEADCEAEFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFD14FFAFFFFFFFAFFFFFFFAFFFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFA8A6A6ADA6A7A6CEA6%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6ADA6CDA7AFA8FFAEAFA8%FFAEFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFAFFFFFFFAFFFFFFFAFFD0CFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAECDA6CEA6CEA6CEA6%CEA6CEA7CEA6CEA7CEA6CEA7CEA6CEA6CEA6CEA6CEA8FFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFF%FFAFFD0CFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8FD0EA6A7FD0CA6A7%AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFD10FFAFFFFFFFAF%FFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAECFA7%CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFF%FFAFFD10FFAFFFFFFFAFFFAFFFAEFFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFAEAFA8FFA8AFA8FFAEAFA8FFA8AFA9CFA6A6A6ADA6%A6A6ADA6A6A6CEA6ADA6CEA6CEA6CEA6CEA6CEA7AFA8FFA8AFA8FFA8AFA8%FFAEAFA8FFA8AFA8FFAEAFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFAEFFAFFFAFFD0CFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAEFFAFFFAEFFAFFFA7CEA6CEA6CEA6%CEA6CEA7CEA7CEADCEA6CEA7CEA6CEA7CEA6CEAFFFAEFFAFFFAEFFAFFFAE%FFAFFFAEFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFF%FFAFFFFFFFAFFD06FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFA8FFA8FFA8%FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA9AEFD%05A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FD0AFFAFFFFFFFAFFFFFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA8CEA6%CEA6CEADCEA7CEADCEA7CEADCEA7CEADCEA7CEADCEA6CEAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFFFFFAFFD0AFFAFFFAFFFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAEAFA8FFAEAFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA9AEA6%ADA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6CEA6AFAFAFA8AFA8%AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFAEAFA8FFAEAFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFAFFD04FFAFFFFFFFAFFFFFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAEFFAFFFAEFFAFFFAEFFAFFFA8%FFAFFFA8FFAECEA6CEADCEA6CEA7CEA6CEA7CEA6CEA7CEA6CEADCEC8CE83%60148585FFAEFFAFFFA8FFAFFFA8FFAFFFAEFFAFFFAEFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFD04FFA8FFAFFFA8FFAF%FFA8FFAEFFA8FFA8FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA6C8A6CEA6CEA6CEA6CEA6CEA6CEA6CEA6%CEA6CE835F13361460353C5AAFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8FFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFAEFFA8FFAFFFA8FFAF%FD08FFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFF60605FADA7CEA7CECECECDCECECEA7%CEA7AD5F60363D146160603C60606036AFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAF%FD04FFAEFFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAEAFA8FFAE%AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AF603D36361436143C35%6035603560353C14361414143C36603660363C3660363C3685AEAFA8AFA8%AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFAEAFA8FFAEAFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFAFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAEFFAFFFAEFFAFFFA8FFAFFFA8FFAFAFA8FFAFAFA8FF853D%36613661363D363D143D1437143D363D366136613661363D3661363D3661%363D36AFAFAFA8FFAFAFA8FFAFFFA8FFAFFFAEFFAFFFAEFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFAFFFA8FFAFFFA8FFA8FFA8%FFA8FFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8611436363D3636363D3636363D3636363D3636363D363636%3D3636363D3636363D36365AFFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFAFFFA8FFFFAFFF%FFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFFD04AF363D363D363D363D363D363D363D363D36%3D363D363D363D363D363D363D363D363D3661AFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFF%FFAFFFFFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAEAFA8FFAEAFA8FFA8AF%A8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF843D3637363D3637363D%3637363D3637363D3637363D3637363D3637363D3637363D363736AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFAEAFA8FFAEFFA8FF%AFFFA8FFAFFFA8FFAFFFA8FD04FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAEFFAFFFA8FFAFAFA8FFAFAFA8FFAFAFA8FFAFAFA8FFAF85143D%3737363D363D363D363D363D363D363D363D363D363D363D363D363D3737%363D363D84FFAFAFA8FFAFAFA8FFAFAFA8FFAFFFA8FFAFFFAEFFAFFFAEFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFA8FFAEFFA8FFA8FFA8FFA8%FFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8FF6037143505270D3D3637143736371437363714373637143736%3714373637142F00270D3D1485A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFAEFD04FFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFAFAEFFAFAFAEFFAF85153627522027363D363D363D363D363D36%3D363D363D363D363D363D37354B52F828373D84FFAFAFAEFFAFAFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFFFFFAFA8FFAFFFA8FFAFFFA8FFAFFFA8FFA8AFA8FFA8AFA8FFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FF60370D272727F8363637%363D363D363D3637363D3637363D3637363D363D0C262727F8371485A8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFAEAF%A8FFAFFFA8FFAFFFA8FFAFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAE%FFAFFFAEFFAFFFA8FFAFAFA8FFAFAFA8FFAFAFA8AFAFAFA8AFAFAFAE8537%36F827F827363D373D36373636363D373D363DFD05363D373D3735F827F8%27363D84FFA8AFAFAFA8AFAFAFA8FFAFAFA8FFAFAFA8FFAFFFA8FFAFFFAE%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFA8FFA8FFA8FFA8FFA8AFA8FF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AF5A37360DF8050C3D14362E280527272705353636282727270527%2835143D140CF8050D3D1485A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFA8FFA8FFA8FFA8FFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAE%FFAFAFAEFFAFAFAEFFAFAFAE61363D14130D3D3735FD09272EFD09272E36%3D14130D3D363D61FFAEFFAFAFAEFFAFAFAEFFAFAFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFAFFFA8FFAFFFA8FF%AFAFA8FFAEAFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AF363736371437362E20FD092726FD09272027353D1437%36371485A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8FFA8AFA8FFA8AFA8FFAFFFA8FFAFFFA8FFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAEFFAFFFA8FFAFAFA8FFAFAFA8FFAFAFA8AFAFAFA8AFAFAFA8AFAF%AFA8AFAF61143D363D372FFD1827363D363D363760FFAFAFA8AFAFAFA8AF%AFAFA8AFAFAFA8FFAFAFA8FFAFAFA8FFAFFFAEFFAFFFAEFFAFFFAFFFAFFF%AFFFAFFFAFA8FFA8FFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF36371437362F202727%270027272700272727002727270027272700272727F828363714371461A8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8FFA8AFA8FFA8AFA8FFA8FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFAFAFFFAFAFAEFFAFAFAEFD04AFFFA8AFA8AFAF6136%3D3D36FD1B272E373D363D60FFAFAFA8AFAFAFAEFFAFAFAEFFAFAFAEFFAF%AFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFA8FFAFFF%A8FFAEAFA8FFAEAFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AF2752A8AFA8AF36373636FD1C27202F363D1461A8AFAE7D27%84AFAFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFAE%AFA8FFAEFFA8FFAFFFFFAFFFAFFFAFFFAFFFAEFFAFFFAEFFAFFFA8FFAFAF%A8FFAFAFA8FFAFAFA8AFAFAFA8AFAFAFA8FF7D2784FFAFAFA8613736FD1F%272F363D60AFA8AFAF5227AFAFAFA8AFAFAFA8AFAFAFA8FFAFAFA8FFAFAF%A8FFAFFFAEFFAFFFAEFFAFFFAFFFAFFFAFFFAFA8FFA8FFA8AFA8FFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA884F8%7DA8AFAEAF362F2727F8272727F8272727F8272727F8272727F8272727F8%272727F8272727F827202E0D61AEAFA8A82752A8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAEFFAFAFAEFFAFAF%A8AFAFAFA8AFAE52F8525259522826FD212720272859525227277DFFAFAF%A8AFAFAFAEFFAFAFAEFFAFAFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFAFFFA8FFAEAFA8FFAEAFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7D27F827F827F827F827F827F827F8%27F827F827F827F8272E27F827F827F827F827F827F827F827F827F827F8%27F82052AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%FFA8AFA8FFAEAFA8FFAEFFA8FFFFAFFFAFFFAFFFAEFFAFFFAEFFAFFFA8FF%AFAFA8FFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8FF8427F8272727%F8272727F8272727F8272727F82720270D3D362EF8272027F8272727F827%2727F8272727F827202752AFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAFAF%A8FFAFAFA8FFAFFFA8FFAFFFAEFFAFFFAFFFAFFFAFA8FFA8AFA8FFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF84AFA8AF84AFA8%AF84AF84592727F820F827F826F827F820F820F827052F0C0D0C0D0D0D06%27F820F826F826F827F826F826F820F82E7DAFA8AFA8AF84AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFA8AFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAEFFAFAFAEAFAFAF%A8AFAFAFA8AFAFAFA8FD05AF362F2E2E272705282728272E2F35363D3736%0D130D36363D36362F2F282805282727052E282F2F3D376184FFAFAFA8AF%AFAFA8AFAFAFAEFFAFAFAEFFAFAFAEFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFA8FFAEAFA8FFAEAFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF84AFA885363D373D363D3636363736%37363D3737363D3637143D3637363D363D363D363636373637363D373D14%3D14375AAFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8FFA8AFA8FFAEAFA8FFAEFFFFAFFFAFFFAEFFAFFFAEFFAFFFA8FFAFAF%A8FFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAEAFA8AFAEAFA885363D363D%363D363D373D363D363D363D363D363D363D363D363D363D363D363D373D%363D373D363D6085363D363736AFAEAFA8AFAFAFA8AFAFAFA8AFAFAFA8AF%AFAFA8FFAFAFA8FFAFFFA8FFAFFFAEFFAFFFAFFFAFA8AFA8FFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF84AFA8AF84AFA8AF84%AF84611437143D3637363714373637143736371437363714373637143736%371437363714373637143736371461A88514373637368BA8AF84AFA8AF84%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAEFFAFAFAEAFAFAFA8AF%AFAFA8AFAFAFA8FFA961143D363D8461363D363D363D363D363D363D363D%363D363D363D363D363D363D363D363D363D363D363D36AFAE85363D363D%36AFAEAFAFAFA8AFAFAFA8AFAFAFAEFFAFAFAEFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFAEAFA8FFAEAFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AF84AFA8AF843D143736375AAF363D3637363D36%37363D3637363D3637363D3637363D3637363D3637143D1437363D363714%6184AFA8611437363736AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8FFA8AFA8FFAEAFA8FFFFAFFFAEFFAFFFAEFFAFFFA8FFAFAF%A8FFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAEAFA8FF843D143D363D148B%AE3D363D363D363D363D363D363D363D363D363D363D363D363D363D3660%7D84363D363D363D36AFAEAF843D363D363D60AFA8AFAEAFA8AFAFAFA8AF%AFAFA8AFAFAFA8FFAFAFA8FFAFFFA8FFAFFFAEFFAFFFAFA8FFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF84AFA8AF84AFA8AF84%3D14371437143784AF363714373637143736371437363714373637143736%371437363714377DA7833714371437143D84AFA8AF36373637143D84AF84%AFA8AF84AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAEFFAFAFAEAFAFAFA8AF%AFAFA8AFAFAF8461363D363D363D60AFA83D363D363D363D363D363D363D%363D363D363D363D363D373D36615A84A7A85A61363D373D36AFAEAFA861%363D363D3685AEAFAFAFA8AFAFAFA8AFAFAFAEFFAFAFAEFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFA8FFAEAFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AF84AFA861143D3637363D1461A8AF3637363D36%37363D3637363D3637363D3637363D363736607EA8A7CFA8A8A8CFA8A87D%60363D84AFA8AF36373637363736AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8FFA8AFA8FFA8AFFFAFFFAFFFAEFFAFFFA8FFAFAF%A8FFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAEAFA861363D363D363D363D%84AF843D363D363D363D363D363D363D363D363D363D143D5AA8A7CAFD09%A8CFA8A884AFA8AFAE61363D363D363DA8AFA8AFAEAFA8AFAFAFA8AFAFAF%A8AFAFAFA8FFAFAFA8FFAFFFAEFFAFFFAEFFAFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF84AFA8AF84AFA88514373637143736%37148BA8AF14373637143736371437363714373637143714367DA77DA87D%A87DA77DA87DA77DA87DA8A8CA7DA884AF363714373637148BA8AF84AFA8%AF84AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFAFAEFFAFAFAEAFAFAFA8AFAFAFA8AFAFAF%363D363D363D363D3661A8AF843D363D363D363D363D363D363D363D363D%37607DA883A87DA883A87DA883A87DA883A87DA8A8FFA7AE613D363D363D%363D85AFA8AFAFAFA8AFAFAFA8AFAFAFAEFFAFAFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AF3637363D3637363D363736AFA8AF143D3637363D363736%3D3637363D363714607DA77DA87DA77DA87DA77DA87DA77DA87DA77DA8A8%A87D841437363D363736AFA8AF84AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8FFA8AFA8FFFFAFFFAEFFAFFFA8FFAFAFA8FFAFAFA8AF%AFAFA8AFAFAFA8AFAFAFA8AFAEAF603D363D363D363D363D3661A8AF8415%143D363D363D363D363D363D363D37607DA883A87DA883A87DA883A87DA8%83A87DA883A87DA8A8AEA784373D363D363D84AFAEAFA8AFAFAFA8AFAFAF%A8AFAFAFA8FFAFAFA8FFAFAFA8FFAFFFAEFFAFFFAFA8FFA8AFA8FFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF84AF843714373637143736%37143736AF84AF1414363736371437363714373637145A7DA77DA77D837D%A77DA77DA77DA77DA77DA77DA77DA77DA7A8A87D5A1437143736AF84AFA8%AF84AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8FFA8AFFF%AFAFAFFFAFAFA9AFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAF85%143D363D363D363D363D3661A8AF8437143D363D363D363D363D363D363D%7DA77DA87DA87DA883A87DA883A87DA883A87DA883A87DA883A8A8A8833D%363D3661A8AFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8AFAFAFA8FD%04AFFFAFAFAF608B8485608B8485608B8485608B8485608B8485608B8485%608B848584853637363D3637363D363736375A8584851414143D3637363D%3637363D363759A17D7D7DA77D837DA77DA77DA87DA77DA87DA77DA87DA7%7DA87DA883A8593714376085608B8485608B8485608B8485608B8485608B%8485608B8485608B8485608B84858B848B848B848B848B848B848B848B84%8B848B848B848B848B848B84AF603D363D363D363D363D363D1461848B84%371415363D363D363D363D363D367D7D837D837DA77DA77DA87DA87DA883%A87DA883A87DA883A87DA883A8A7A8363D368B848B848B848B848B848B84%8B848B848B848B848B848B848B848B848B848B848B848485848B8485848B%8485848B8485848B8485848B8485848B8485848B84361437363714373637%143736375A8B8485FD0514373637143714373659527D527D7CFD067DA77D%837DA77DA77DA77DA77DA77DA77DA77DA87D841461848B8485848B848584%8B8485848B8485848B8485848B8485848B8485848B8485848BAF84AF85AF%84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF858B143D363D363D%363D363D363D368585AF843D1415143D363D363D363D5AA8527D52FD047D%837D837DA87DA77DA87DA87DA883A87DA883A87DA883A8A7A8838484AF85%AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84%AF85848B84AF848B84AF848B84AF848B84AF848B84AF848B84AF848B84AF%6014143D3637363D3637363D363760AF8485FD0514373637363D59A7FD05%527D527D58FD047D837D7D7DA77D837DA77DA77DA87DA77DA87DA77DA7A1%A884AF848B84AF848B84AF848B84AF848B84AF848B84AF848B84AF848B84%AF848B84AFAF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF%85AFA8851414143D363D363D363D363D368584AF853714151414143D363D%365A7C7D527C5252527D527D58FD047D837D837DA87DA77DA883A87DA883%A87DA77D837DA8A8AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84%AF85AF84AF85AF84AF85AF8484AF84AF84AF84AF84AF84AF84AF84AF84AF%84AF84AF84AF84AF84AF60FD0414373637143736360D3784AF84AFFD0814%363714362E7D7C7D527C52585258527D527D58FD047D837D7D7D837D7D7C%7D7C7D7DA77DA8A8AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF84FD04AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9AFAFAFA9FD04AF851415143D363D363D37360D1336AFA9AFA93D1415%141514151415143D373D365A5959597D7D7D7C7D7C7D7C7D7C7D7CFD047D%837D7D7DA77DFD04A8AFA8AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA984AFA8AF84AFA8AF84AFA8AF84%AFA8AF84AFA8AF84AFA8AF84AFA8AF60FD0414153637363D0D0D0D61A9AF%A8AFFD0B143D3637143DFD0436355A595A5959597D5959597D597D598459%605A60363660AFA9AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84%AFA8AF84AFA8AF84AFA8AF84AFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAF8B141514141415143D36130D1460FFAFAF%A93D14141415141414151414143D363D363D373D363D373D363D36141415%14141415141514151415143D85FFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8140EFD07140C0D0E%85A8AFA8AFFD1114373637143736371437FD06140E1414140E143685A8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFF361514151415141514140D3DAFFFAFFFAF3D141514%151415141514151415141514151437143D363D363D363D363D3636143614%36143760FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFA9AFA8AFA9AFA8AFA9AFA8AF%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFAF85FD09141585FFA8AFAFAFFD19%1437143614371437143714141461AFAFA8AFA9AFA8AFA9AFA8AFA9AFA8AF%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFF610E%FD071484FFAFFFAFFFAF3D14151414141514141415141414151414141514%141415141414151414141514141415141460FFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AF%A8FFAF60FD050D60A8FFA8FFA9AFA8FF36FD23140E61AEFFA9AFA8FFA9AF%A8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FF%A9AFA8FFA9AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFFFAF608460AFFFFFAFFFAFFFAFFFFF6114151415141514%151415141514151415141514151415141514151415141514151415141460%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFFFFFFAFFFAFFFA9FFAFFFA9FF%36FD0E14616085608584855A37FD0D1461FFFFAFFFA9FFAFFFA9FFAFFFA9%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF%AFFFFFFFAFFFFFFFAFFFFFFFAFFD04FF6114141415141414151414141585%FD09FFAF6114141415141414151414141560FFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FF%AFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFF36FD0B1484FFAFFFA8FFAFFF%A8FFAFFFFF61FD0A140E85FFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FD2FFF611415%141514151415141560FD0EFF3D1415141514151415141561FD2EFFAFFFFF%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFF60FD0A14AFFD04FFAFFFFFFFAFFFFFFFAFFF84%FD09140E85FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD2FFF851415141514151415%143DFD10FF1414141514151415141460FD2CFFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFF60FD091460FFFFFFAFFFFFFFAFFFFFFFAFFD04FF61FD08140E%85FD04FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF%FFFFAFFFFFFFAFFFFFFFAFFD31FF85FD09148BFD10FF84FD091484FD5AFF%60140D140D140D140D14A8FD10FF850D140D140D140D140D85FD5AFF850D%130D140D130D130DFD11FF84140D130D140D130D1384FD5AFF5A0D060D06%0D0C0D0635AFFD10FFA90C0D060D060D060D0CA9FD5BFF605A35350D3535%6084FD12FF855A5A2F350D593584FD5BFFA8AF84AF84AF84AF84AFFD12FF%84AF84A984AF84AF84FD5CFFA8AFAFAFA8AFA9AFA8FD12FFAFA8AFAFAFA8%AFA8AFAFFD5AFFAFAFA8FFA8AFA8FFA8AFA8FD11FFA8AFA8FFA8AFA8FFA8%FDFCFFFDFCFFFDFCFFFDBDFFAFFFFFFFAFFFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAEFFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFAFFFFFFFAFFFFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--13 Bn%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<141516171818191B1B1C1E1F2021212223242526272829292A2C2D2E2F3031333334363738393A3B3C3C3D3E3F41><0B0C0D0E0D0E0F1011111112121314151615161718191A1A1A1B1C1D1E1D1E1F2022232423242526272828292A2A><15161717191A1B1B1C1D1F20202122232426262728292A2D2E2F3031323335363738393A3C3D3E3F404142444545>0.000031<E8E7E6E5E4E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D4D3D2D1D0CFCECDCCCCCBCAC9C8C7C6C5C4C4C3C2C1C0><EAE9E8E7E7E6E5E4E3E2E2E1E0DFDEDDDCDCDBDAD9D8D7D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7C7C6C5C4><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7>4 %_Br[0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 2 50 100 %_BS%_0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 2 50 100 Bs0.079561 0.043885 0.081422 0.000031 0.909804 0.917647 0.898039 2 50 34.3558 %_BS%_0.079561 0.043885 0.081422 0.000031 0.909804 0.917647 0.898039 2 50 34.3558 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1239)(Unnamed gradient 1239) 0 2 Bd[<92929292929292929292929292929292929291919191919191919190909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8C8C8B8C8B8B8B8A8A898989898888878787868685858584848382828282818080807F7E7E7D7C7C7C7B7A7A7979787777767675747373727171706F6F6E6E6D6C6B6A6969686766656463><1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B19191A1A1A1A1A191A1A1A181818181818181816161617171617151515151616141414141413131313121212121211111111101010100E0F0F0D0E0E0E0C0C0D0B0B0B0A0A0A0B0A0A0A09090808080707070606070606040505040403030402030202030202010101010000><0000000000000000000000000000000001010000000000020101010202020303030303050505050507060808090909090B0B0B0B0D0E0E0F0F101212121314141515161818181B1A1C1D1D1E1E2020202323242527272729292A2B2D2D2F2F3130323334343738393A3A3C3C3E3E404242444445474749494B4C4D4E>0.000031<5C5C5C5C5C5C5C5C5C5C5C5D5D5D5D5D5D5D5E5E5E5E5E5E5F5F5F5F606060606161616262626363636464646565666666676768686969696A6A6B6B6C6C6D6D6E6F6F707071717273737475757676777878797A7B7B7C7D7D7E7F808081828384848586878889898A8B8C8D8E8F90909192939495969798999A9B9C><B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B9B9B9B9B9B9B9B9B9B9B9BABABABABABABABABBBBBBBBBBBBBBBCBCBCBCBCBCBDBDBDBDBDBEBEBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C9C9C9CACACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D4D4D5D5><E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0E0E0DFDFDFDEDEDEDDDDDDDCDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D4D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCBCBCACAC9C9C8C8C7C6C6C5C5C4C3C3C2C2C1C0C0BF>4 %_Br[0.388617 0.000885 0.305882 0.000031 0.611765 0.835294 0.74902 2 45.2991 100 %_BS%_0.388617 0.000885 0.305882 0.000031 0.611765 0.835294 0.74902 2 45.2991 100 Bs0.573358 0.106813 0.000031 0.000031 0.360784 0.721569 0.909804 2 69.9386 23.3129 %_BS%_0.573358 0.106813 0.000031 0.000031 0.360784 0.721569 0.909804 2 69.9386 23.3129 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1262)(Unnamed gradient 1262) 0 2 Bd[<E3E2E2E2E1E1E1E0DFDFDFDFDEDEDEDDDDDDDCDCDBDBDADADAD9D9D9D8D8D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCECECECDCCCCCBCBCACACAC9C9C9C8C8C7C7C7C6C6C5C5C4C4C3C3C2C2C1C1C1C0BFBFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B6B5B5B5B4B4B4B3B3B3B2B2B2B2B2B1B1B1B0B0B0B0B0B0AFAFAFAFAFAFAFAF><7F7D7F7D7C7D7B7A7979787778767576747374727071706E6F6E6C6D6C6C6B6A6A68676766666563636262615F605E5E5D5C5C5A5B5957585657555554545252514F4F4E4E4C4D4B4B494A484847474545444442424141413F3F3E3E3C3C3B3B3B393A383838373735353534343232323131312F2F2F2E2E2E2E2C2D2D2B2B2B2B2B29292A2A2A2828282828><63636161605E5E5D5D5B5B5A5858575555545252535151504E4E4D4C4B494948484847464543434242413F3F3E3C3B3B3B3A38383637363433313331302E2D2D2D2C2A2B2929272826252325232222211F211F1E1E1D1B1B1A181A18171717171515141414121212111110110F100F0F0E0E0D0E0C0C0C0C0C0A0B09090B0909090709090707070807070707><232221201F1E1D1B1A1918171616151413121110100F0F0E0D0C0C0B0A0A0908080807070606050505040404030303030302020202020101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><19191A1A1A1B1B1B1C1C1C1C1D1D1D1E1E1E1F1F1F2020202021212122222222232323242424242525252626262627272727282828282929292A2A2A2A2B2B2B2B2B2C2C2C2C2D2D2D2D2E2E2E2E2F2F2F2F2F303030303031313131313232323232333333333334343434343435353535353536363636363636363737373737373737373838383838383838><6667676869696A6B6C6C6D6E6E6F707071727273747475767677787879797A7B7B7C7D7D7E7E7F80808181828383848485868687878889898A8A8B8B8C8C8D8D8E8F8F9090919192929393949495959696979798989999999A9A9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A5A6A6A6A6A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAA><7B7C7D7E7F808182838485868788898A8B8C8D8E8E8F90919293949596979899999A9B9C9D9E9FA0A0A1A2A3A4A5A6A6A7A8A9AAABABACADAEAFAFB0B1B2B3B3B4B5B6B6B7B8B9B9BABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9C9CACBCBCCCCCDCECECFCFD0D0D1D1D2D2D3D3D4D4D5D5D6D6D6D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDC>4 %_Br[0.684901 0.157809 0.025605 0.000031 0.219608 0.666667 0.862745 2 45.2991 55.2147 %_BS%_0.684901 0.157809 0.025605 0.000031 0.219608 0.666667 0.862745 2 45.2991 55.2147 Bs0.889067 0.497108 0.388891 0.136843 0.098039 0.4 0.482353 2 38.2022 0 %_BS%_0.889067 0.497108 0.388891 0.136843 0.098039 0.4 0.482353 2 38.2022 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1270)(Unnamed gradient 1270) 0 2 Bd[<E3E2E1E0E0DFDFDEDEDDDDDCDBDBDAD9D9D8D7D6D6D5D4D3D3D2D1D1D1D0CFCFCECECDCCCCCBCACACAC9C8C8C7C7C7C6C6C5C5C4C3C3C2C2C1C1C1C0BFBFBFBEBEBDBDBDBCBCBBBBBBBBBABAB9B9B9B9B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B4B4B3B3B3B3B3B2B2B2B2B2B2B2B2B2B1B1B1B1B1B1B1B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0AFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF><7F7F7C7A7A7978767574737271706F6E6D6C6B6A6967666563626161605E5D5C5C5A595858565554545251514F4F4E4C4D4B4B4A484847474545444442424141413F3F3E3E3C3C3C3B3B3B393A3A3838383637373535353534343434323232323231313131312F2F2F2F2F2E2E2E2E2E2E2E2C2C2C2D2D2D2D2D2D2B2B2B2B2B2B2B2B2B2B2B2B2929292929292A2A2A2A2A2A2A2A2A2A2A2A2A2A2A282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828><636160605D5B5B5A57575452514F4E4C4C4B4948464645454241413F3C3B3B3A38383734323131302E2D2E2D2C2A29292726262525232222211F211F1E1E1D1B1B1A181A181917171717151614141414121312121311111011110F0F100F0F0F0D0E0E0D0D0D0E0C0C0C0C0C0C0C0C0C0A0A0B0B0B090909090909090909090909090907070707090909090909090707070707070707070707070707080808080807070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707><23211F1E1B191816151412100F0E0D0C0B0A090807070606050404040303030202020201010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><191A1A1B1B1C1C1D1D1E1E1F1F202021212222232324242425252626262727272828282929292A2A2A2B2B2B2C2C2C2C2D2D2D2E2E2E2E2F2F2F2F2F303030303031313131313232323232323333333333333334343434343434343535353535353535353535363636363636363636363636363637373737373737373737373737373737373737373737373737383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838><6667696A6B6C6D6F707172737475767778797A7B7C7D7E7F808182828384858686878889898A8B8C8C8D8E8E8F8F909191929293949495959696979798989999999A9A9B9B9C9C9C9D9D9D9E9E9E9F9F9FA0A0A0A1A1A1A1A2A2A2A2A3A3A3A3A3A4A4A4A4A4A5A5A5A5A5A6A6A6A6A6A6A6A7A7A7A7A7A7A7A7A7A8A8A8A8A8A8A8A8A8A8A8A8A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA><7B7D7F8082848587898A8C8E8F919294959698999B9C9D9EA0A1A2A3A5A6A7A8A9AAABADAEAFB0B1B2B3B3B4B5B6B7B8B9BABABBBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECECFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D8D9D9D9D9D9D9D9D9DADADADADADADADADADADADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC>4 %_Br[0.684901 0.157809 0.025605 0.000031 0.219608 0.666667 0.862745 2 50 32.5153 %_BS%_0.684901 0.157809 0.025605 0.000031 0.219608 0.666667 0.862745 2 50 32.5153 Bs0.889067 0.497108 0.388891 0.136843 0.098039 0.4 0.482353 2 15 0 %_BS%_0.889067 0.497108 0.388891 0.136843 0.098039 0.4 0.482353 2 15 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 2)(Unnamed gradient 2) 0 2 Bd[<0000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030303030404040405050505050505060606060707070808080909090A0A0A0B0B0B0C0C0C0D0D0D0E0E0F0F0F101011111212121212131314141515151617181819191A1A1B1B1C1C1D1E1E1F1F20202121212222232325252627272828292A2A2B2B2C2D2D2E2F2F30313132333334353536373838393A3A3B3C3D3D3E3F40404142434344454646474848494A4B4B4D4E4E4F4F5152535454565758595A5B5C5C5D5E5F60616263646566676768696A6B6C6D6E6F7071727374757677><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000100000000010000000100000000010101000101010102010101010101010202010102020102020202020202010202010302020303020303030203030304040304040304040404040404040405040505050605050605050605060605060607060607060807070808090908090909090809090A0A0A0A090A0A0B0A0B0A0C0B0B0C0B0C0C0D0C0E0D0E0E0F0E0F0F><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101000001010101010101010102020202020202020303030303030304040404030304040404040405050505050506060606060707070707080808080809090909090A0A0A0A0B0B0B0B0C0C0C0C0B0D0D0D0C0E0E0D0D0F0F0E1010100F1112111112121213131313141414161515171616161717171818181919191A1A1A1B1B1B1C1C1C1D1D1D1E1E1F201F2020202121212222242324252525262728282829292A2A292B2B2C2C2B2D2C2E2D2E2F2E302F3130313232333334343535>0.000031<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F9F8F8F8F8F7F7F7F6F6F6F6F5F5F5F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEEEEEDEDEDECECEBEBEAEAEAE9E9E8E8E7E7E6E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D8D8D7D7D6D5D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCBCBCAC9C9C8C7C7C6C5C4C4C3C2C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B6B6B5B4B3B2B2B1B0AFAEADADACABAAA9A8A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A99989796969594939291908F8E8D8C8B8A89888786><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F3F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDECECECECEBEBEBEBEAEAEAE9E9E9E8E8E8E7E7E7E7E6E6E6E5E5E5E4E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDECECECECEBEBEBEBEAEAEAE9E9E9E9E8E8E8E7E7E7E6E6E6E6E5E5E5E4E4E4E3E3E3E2E2E2E1E1E1E0E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDBDADAD9D9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D2D1D1D0D0D0CFCFCECECDCDCDCCCCCBCBCACAC9C9>4 %_Br[0.466316 0.057282 0.20856 0.000031 0.52549 0.772549 0.788235 2 50 100 %_BS%_0.466316 0.057282 0.20856 0.000031 0.52549 0.772549 0.788235 2 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 69.8529 16.5644 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 69.8529 16.5644 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 23)(Unnamed gradient 23) 0 2 Bd[<141516171818191B1B1C1E1F2021212223242526272829292A2C2D2E2F3031333334363738393A3B3C3C3D3E3F41><0B0C0D0E0D0E0F1011111112121314151615161718191A1A1A1B1C1D1E1D1E1F2022232423242526272828292A2A><15161717191A1B1B1C1D1F20202122232426262728292A2D2E2F3031323335363738393A3C3D3E3F404142444545>0.000031<E8E7E6E5E4E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D4D3D2D1D0CFCECDCCCCCBCAC9C8C7C6C5C4C4C3C2C1C0><EAE9E8E7E7E6E5E4E3E2E2E1E0DFDEDDDCDCDBDAD9D8D7D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7C7C6C5C4><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7>4 %_Br[0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 2 50 100 %_BS%_0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 2 50 100 Bs0.079561 0.043885 0.081422 0.000031 0.909804 0.917647 0.898039 2 50 0 %_BS%_0.079561 0.043885 0.081422 0.000031 0.909804 0.917647 0.898039 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 25)(Unnamed gradient 25) 0 2 Bd[<1415161718191A1B1C1D1E1F2021222425262728292A2B2C2D2E2F31323335363738393A3B3C3D3F4041424344454648494A4B4C4E4F5051525354555758595A5C5D5D5E606162636465666768696A6B6C6D6E6F70717273747576777878797A7B7C7D7E7F8081828384848586878788898A8B8C8D8E8E8F90909192929393949595969798><0B0C0D0E0E0F1011121213141415161718191A1B1B1C1C1C1D1E1F202122232525262728292A2B2C2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445454648494A4B4C4D4E4F4F50515253545455565758595A5B5C5D5D5E5F6060616263636465666768696A6A6B6C6B6C6C6D6E6F6F70717272737475757677787879797A><1516171718191A1B1C1C1D1E1F202021222324252627292A2A2B2C2D2E30313233343536373838393A3B3C3D3E3F404142434445464748494B4C4D4E4F5051525354555758595A5B5C5D5E5F60616162636465666768696A6B6B6C6D6E6F6F70717273747576777878797A7B7C7D7D80808182838384858686878889898A8B8C8D8D8E8F90><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010102020202030303030404040505060607070809090A0B0C0D0D0E0F101112131415161718191A1B1C1D1F20212223252627292A2C2D2E3031333436><E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665><EAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7E7D7C7B7A797877767574737271706F6E6D6C6B6A69><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261>4 %_Br[0.594263 0.477668 0.563287 0.211398 0.396078 0.411765 0.380392 2 50 100 %_BS%_0.594263 0.477668 0.563287 0.211398 0.396078 0.411765 0.380392 2 50 100 Bs0.079561 0.043885 0.081422 0.000031 0.909804 0.917647 0.898039 2 50 0 %_BS%_0.079561 0.043885 0.081422 0.000031 0.909804 0.917647 0.898039 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 293)(Unnamed gradient 293) 0 2 Bd[<41414141414141414141414141414141414141414141414141414141414141414142424242424242424242424242424243434343434343434343444444444444444545454545454546464646464747474747484849494A4A4A4A4B4B4B4B4C4C4C4D4D4D4D4E4E4E4F4F4F5050525252535353545455555556565757585859595B5B5C5C5D5D5E5E5F5F6161626263646465656667676868696A6A6B6C6C6D6E6F6F70717172737474757677787778797A7B7C7C7D7E7F808182838384858685868788888A8B8B8E8E8F909091929293939495969798><2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2E2E2E2E2E2E2E2F2F2F2F2F30303030303131313132323232333332323434333535343436363637373738383939393A3A3A3B3B3C3C3C3D3D3E3E3F3F404041414242434344444545464648474949494A4A4B4C4C4D4D4E4F4F505050515253535455555557575758595A5B5A5C5C5D5E5F5F60606162636465666667686869696A6B6C6D6E6F707172727374757575767879797A><454545454545454545454545454545454545454545454545454545454545454545464646464646464646464646464646464747474747474747474748484848484848484A4A4A4A4A494B4B4B4B4A4A4C4C4C4B4B4D4D4C4C4E4E4D4D4F4F4E4E504F4F515150505251515352525353535454545555565656575758585959595A5A5B5B5C5C5D5D5F5E605F61606261626263656465656666676868696A6A6B6B6B6C6D6D6E6F6E6F7171717172747374757677777879797A7B7A7B7C7D7E7F818282838483848584858686878889898C8D8E8D8E8F90><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101020202020202020203030304040404040505050506060707080809090A0A0B0B0C0D0D0E0F10111212131415161718191A1B1C1D1E1F212223252627292A2C2E2F31333436><C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0BFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBEBEBEBEBEBEBEBEBEBEBDBDBDBDBDBDBDBCBCBCBCBCBCBCBBBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B1B1B1B0B0B0AFAFAEAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B9B9A99999897969695949493929191908F8E8D8D8C8B8A89888887868584838281807F7E7D7D7C7B7A7978777674737271706F6E6D6C6B6A68676665><C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C2C2C2C2C2C2C2C2C2C2C1C1C1C1C1C1C1C0C0C0C0C0C0C0BFBFBFBFBFBEBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABAB9B9B9B9B8B8B8B7B7B7B6B6B5B5B5B4B4B4B3B3B2B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A7A7A6A5A5A4A4A3A2A2A1A1A09F9F9E9D9D9C9B9A9A999898979695959493929191908F8E8D8C8C8B8A89888786858483828181807F7E7D7C7B7A7877767574737271706F6E6C6B6A69><B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B5B5B5B5B5B5B5B5B5B5B4B4B4B4B4B4B4B4B3B3B3B3B3B3B2B2B2B2B2B2B1B1B1B1B1B0B0B0B0AFAFAFAFAEAEAEAEADADADACACACACABABABAAAAAAA9A9A9A8A8A8A7A7A6A6A6A5A5A4A4A3A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A999898979796969594949392929190908F8E8E8D8C8C8B8A898988878686858483828281807F7E7D7D7C7B7A79787776757473737271706F6E6D6C6B6A6967666564636261>4 %_Br[0.594263 0.477668 0.563287 0.211398 0.396078 0.411765 0.380392 2 50 100 %_BS%_0.594263 0.477668 0.563287 0.211398 0.396078 0.411765 0.380392 2 50 100 Bs0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 2 77.6596 42.3313 %_BS%_0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 2 77.6596 42.3313 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 296)(Unnamed gradient 296) 0 2 Bd[<4141414141414141414141414141414141403F3F3F3F3F3F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3C3C3C3C3B3C3B3B3A3A3A393939383838373736363634343333313130302F2F2E2E2D2D2C2A2A29292827272625252423222221201F1F1E1D1C1B1A1A18171615><2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2929292929292928282828282727272726262626252525242425232324222323212220201F1F201E1F1E1E1D1D1C1C1B1A1B1A1A1918181718161516151413131312111111100F0E0E0E0D0C><4545454545454545454545454545454545444545454545454545434344444444424242424241414141404040403F3F3F3E3E3E3D3D3B3C3C3A3B393938383737363534343333323131302E2F2E2C2D2C2B2B2A2927282725242423232221201F1E1D1C1B1A191817>0.000031<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C4C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C9C9CACACACBCBCCCCCDCDCECECFCFD0D0D1D1D2D3D3D4D4D5D6D6D7D8D8D9DADBDBDCDDDEDEDFE0E1E2E3E3E4E5E6E7><C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C7C7C7C7C7C8C8C8C8C9C9C9C9CACACACBCBCBCCCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D3D3D4D4D5D6D6D7D7D8D9D9DADADBDCDCDDDEDFDFE0E1E2E2E3E4E5E6E6E7E8E9><B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B8B8B8B8B8B8B8B8B8B9B9B9B9B9B9BABABABABABBBBBBBBBCBCBCBCBDBDBDBEBEBEBFBFC0C0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C9C9CACBCBCCCDCDCECFCFD0D1D2D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E3>4 %_Br[0.083772 0.046662 0.090761 0.000031 0.905882 0.913725 0.890196 2 50 100 %_BS%_0.083772 0.046662 0.090761 0.000031 0.905882 0.913725 0.890196 2 50 100 Bs0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 2 75.3846 22.6994 %_BS%_0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 2 75.3846 22.6994 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 44)(Unnamed gradient 44) 1 2 Bd[<2A2A29292928272726262525242323222120201F1E1D1C1C1B191918171615141413121211100F0E0D0C0C0B0A09080706050504030201000000>0.000031<1313131312121212111111111010100E0F0F0D0E0E0C0D0C0B0B0B0A0A0A09090808080707060506050404040403030202020101010000000000>0.000031<D2D2D3D3D3D4D5D5D6D6D7D7D8D9D9DADBDCDCDDDEDFDFE0E1E2E2E3E4E5E6E7E7E8E9EAEBECEDEEEFF0F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><ECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F7F7F7F8F8F8F9F9FAFAFAFBFBFCFCFCFDFDFEFEFFFF><EBEBEBEBECECECECEDEDEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9F9F9FAFAFBFBFBFCFCFDFDFEFEFFFF>4 %_Br[0.165499 0.000031 0.075013 0.000031 0.823529 0.92549 0.921569 2 58.1967 25.1534 %_BS%_0.165499 0.000031 0.075013 0.000031 0.823529 0.92549 0.921569 2 58.1967 25.1534 Bs1 0 84.0491 95.092 %_BS%_1 0 84.0491 95.092 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 55)(Unnamed gradient 55) 0 2 Bd[<000000000000000000000000000000000000000000010100000000010101010102020202030303030404040505050505050506060607070708080909090A0A0B0B0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617171818191A1A1B1B1C1D1D1E1F1F20212122232324252626272829292A2B2C2C2D2E2F2F303132333434353637383838393A3B3C3D3E3F4041414243434545464748494A4B4C4D>0.000031<00000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010202020202020101020303030202020202030303030303030303040404040404040404050505040505060505050606060606060708080707070908090908090A0A09090B0A0A0A090B0B0B0A0B0C0C0C0C0D0D0E0D0E0F0E0E0E0F0F0F0E100F0F1011111110121212121313>0.000031<FFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFBFBFBFBFAFAFAFAF9F9F9F8F8F8F8F7F7F7F6F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E4E4E3E3E2E1E1E0E0DFDEDEDDDCDCDBDADAD9D8D8D7D6D5D5D4D3D2D2D1D0CFCFCECDCCCCCBCAC9C8C7C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B9B8B7B6B5B4B3B2B1B0AFAEADAC><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEEEEEEEEEDEDEDECECECEBEBEBEBEAEAEAE9E9E9E8E8E8E7E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDF><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9>4 %_Br[0.302708 0.000031 0.075196 0.000031 0.67451 0.87451 0.913725 2 50 100 %_BS%_0.302708 0.000031 0.075196 0.000031 0.67451 0.87451 0.913725 2 50 100 Bs1 0 69.9248 43.5583 %_BS%_1 0 69.9248 43.5583 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 6)(Unnamed gradient 6) 0 2 Bd[<B2B2B1B1B2B2B2B1B1B1B1B0B0B0B1B1AFB1B0B0B0B0AFB1AFB0B0B0B0AEB0AFAFAFAFB0AEAFAEAEAFADAFAFADAEAEAEAEAEAEAEAEADADADADADAD><ACACACABAAAAAAA9A9A9A9A8A8A7A6A6A7A6A5A5A5A4A4A3A3A3A2A2A2A2A1A1A1A0A09FA09F9F9F9E9F9E9E9E9D9D9D9D9D9D9D9D9C9C9C9C9C9C><A3A3A2A2A2A2A1A1A1A0A0A0A09F9F9F9E9E9E9D9D9D9D9C9C9C9C9C9B9B9B9A9A9A9A999999999998989898989797979797979797969696969696><BDBBB9B7B5B3B1AFADABABA9A6A4A2A0A09E9C9A9A97959393918E8E8C8C8A8888858583838181817F7F7D7D7C7A7A7A7878787878767676767676><23242526262728292A2B2B2C2D2E2E2F30303132323334343535363637383839393A3A3A3B3B3C3C3C3D3D3D3E3E3E3E3F3F3F3F3F404040404040><1F20212223242526272828292A2B2C2D2D2E2F303031323333343535363637383839393A3A3B3B3B3C3C3D3D3D3E3E3E3F3F3F3F3F404040404040><20212223242526272829292A2B2C2D2E2E2F3031313233343435363637373839393A3A3B3B3C3C3C3D3D3E3E3E3F3F3F4040404040414141414141>4 %_Br[0.679255 0.611627 0.588037 0.462501 0.25098 0.25098 0.254902 2 50 66.8712 %_BS%_0.679255 0.611627 0.588037 0.462501 0.25098 0.25098 0.254902 2 50 66.8712 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 32.2917 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 32.2917 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 9)(Unnamed gradient 9) 0 2 Bd[<18181817171717161616161615151515141313131212121212111111110F0F0F0F0F0E0E0E0E0D0D0D><0404030302020202020201010101010000000000000000000000000000000000000000000000000000><7675747271706E6D6C6B6A69676665646261605E5B5A595756555352514F4E4D4B4A49474645434241>0.000031<EAEAEAEBEBEBEBECECECECECEDEDEDEDEEEEEEEEEFEFEFEFEFF0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3><EAEAEBEBECECECEDEDEDEEEEEFEFEFF0F0F0F1F1F2F2F2F3F3F3F4F4F5F5F5F6F6F6F7F7F8F8F8F9F9><A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9>4 %_Br[0.050904 0.000031 0.254765 0.000031 0.952941 0.976471 0.788235 2 50 100 %_BS%_0.050904 0.000031 0.254765 0.000031 0.952941 0.976471 0.788235 2 50 100 Bs0.094026 0.014191 0.464637 0.000031 0.917647 0.917647 0.627451 2 50 41.7178 %_BS%_0.094026 0.014191 0.464637 0.000031 0.917647 0.917647 0.627451 2 50 41.7178 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Black and White Linear)(Black and White Linear) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Black and White Radial)(Black and White Radial) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 51.0204 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 51.0204 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade To Edge)(Fade To Edge) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Super Soft Black Vignette)(Super Soft Black Vignette) 1 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 56.0729 57.4443 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 56.0729 57.4443 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 31.8603 79.7713 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 31.8603 79.7713 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Crosses Pattern)(Crosses Pattern) 8.3721 8.3701 63.3369 63.3369 [%AI3_Tile(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR8.3721 8.3711 mS%AI6_EndPatternLayer) &(0 O 0 R 0.118074 0.533837 0.839322 0.007324 0.858824 0.533333 0.266667 Xa 0.118074 0.533837 0.839322 0.007324 0.858824 0.533333 0.266667 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR24.8623 2.875 m24.8623 13.8672 L13.8682 13.8672 L13.8682 24.8604 L2.875 24.8604 L2.875 2.875 L24.8623 2.875 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR30.3574 19.3643 mS%AI6_EndPatternLayer) &(0 O 0 R 0.549676 0.059907 0.821439 0.000031 0.498039 0.72549 0.376471 Xa 0.549676 0.059907 0.821439 0.000031 0.498039 0.72549 0.376471 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR35.8535 24.8604 m46.8486 24.8604 L46.8486 13.8672 L35.8535 13.8672 L35.8535 2.875 L24.8623 2.875 L24.8623 13.8672 L13.8682 13.8672 L13.8682 24.8604 L24.8623 24.8604 L24.8623 35.8535 L35.8535 35.8535 L35.8535 24.8604 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR19.3643 41.3496 mS%AI6_EndPatternLayer) &(0 O 0 R 0.118074 0.533837 0.839322 0.007324 0.858824 0.533333 0.266667 Xa 0.118074 0.533837 0.839322 0.007324 0.858824 0.533333 0.266667 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR24.8623 46.8477 m35.8535 46.8477 L35.8535 35.8535 L24.8623 35.8535 L24.8623 24.8604 L13.8682 24.8604 L13.8682 35.8535 L2.875 35.8535 L2.875 46.8477 L13.8682 46.8477 L13.8682 57.8398 L24.8623 57.8398 L24.8623 46.8477 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR8.3721 63.3369 mS%AI6_EndPatternLayer) &(0 O 0 R 0.11313 0.630732 0.731319 0.006897 0.854902 0.470588 0.321569 Xa 0.11313 0.630732 0.731319 0.006897 0.854902 0.470588 0.321569 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR2.875 68.834 m24.8613 68.834 L24.8613 57.8398 L13.8672 57.8398 L13.8672 46.8477 L2.875 46.8477 L2.875 68.834 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR52.3447 30.3574 mS%AI6_EndPatternLayer) &(0 O 0 R 0.670954 0.072511 1 0.00177 0.380392 0.686275 0.27451 Xa 0.670954 0.072511 1 0.00177 0.380392 0.686275 0.27451 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR57.8408 35.8535 m68.833 35.8535 L68.833 24.8604 L57.8408 24.8604 L57.8408 13.8682 L46.8486 13.8682 L46.8486 24.8604 L35.8535 24.8604 L35.8535 35.8535 L46.8486 35.8535 L46.8486 46.8477 L57.8408 46.8477 L57.8408 35.8535 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR63.3369 8.3711 mS%AI6_EndPatternLayer) &(0 O 0 R 0.255589 0.883146 0.572656 0.104677 0.678431 0.239216 0.32549 Xa 0.255589 0.883146 0.572656 0.104677 0.678431 0.239216 0.32549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR68.833 24.8604 m57.8408 24.8604 L57.8408 13.8682 L46.8486 13.8682 L46.8486 2.875 L68.833 2.875 L68.833 24.8604 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR41.3496 52.3428 mS%AI6_EndPatternLayer) &(0 O 0 R 0.118868 0.676478 0.78442 0.010986 0.843137 0.435294 0.282353 Xa 0.118868 0.676478 0.78442 0.010986 0.843137 0.435294 0.282353 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR46.8486 57.8398 m57.8408 57.8398 L57.8408 46.8477 L46.8486 46.8477 L46.8486 35.8535 L35.8535 35.8535 L35.8535 46.8477 L24.8613 46.8477 L24.8613 57.8398 L35.8535 57.8398 L35.8535 68.834 L46.8486 68.834 L46.8486 57.8398 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR63.3369 63.3369 mS%AI6_EndPatternLayer) &(0 O 0 R 0.670954 0.072511 1 0.00177 0.380392 0.686275 0.27451 Xa 0.670954 0.072511 1 0.00177 0.380392 0.686275 0.27451 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR68.833 46.8477 m57.8408 46.8477 L57.8408 57.8398 L46.8486 57.8398 L46.8486 68.834 L68.833 68.834 L68.833 46.8477 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.549676 0.059907 0.821439 0.000031 0.498039 0.72549 0.376471 Xa 0.549676 0.059907 0.821439 0.000031 0.498039 0.72549 0.376471 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR2.875 35.8535 m13.8682 35.8535 L13.8682 24.8604 L2.875 24.8604 LS%AI6_EndPatternLayer) &(0 O 0 R 0.10016 0.506493 0.578668 0.001831 0.878431 0.564706 0.435294 Xa 0.10016 0.506493 0.578668 0.001831 0.878431 0.564706 0.435294 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR35.8535 68.834 m35.8535 57.8398 L24.8613 57.8398 L24.8613 68.834 LS%AI6_EndPatternLayer) &(0 O 0 R 0.523522 0.892729 0.066865 0.002075 0.54902 0.25098 0.560784 Xa 0.523522 0.892729 0.066865 0.002075 0.54902 0.25098 0.560784 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR68.833 35.8535 m57.8408 35.8535 L57.8408 46.8477 L68.833 46.8477 LS%AI6_EndPatternLayer) &(0 O 0 R 0.255589 0.883146 0.572656 0.104677 0.678431 0.239216 0.32549 Xa 0.255589 0.883146 0.572656 0.104677 0.678431 0.239216 0.32549 XA) @(%AI6_BeginPatternLayer0 J 0 j 5.75 w 4 M []0 d0 XR35.8535 2.875 m35.8535 13.8672 L46.8486 13.8672 L46.8486 2.875 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 11)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-2917.1992 5716.9995 m-2826.5903 5716.9995 L-2826.5903 5705.1182 L-2917.1992 5705.1182 L-2917.1992 5716.9995 Lnuu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-2834.0437 5709.7305 m-2834.3442 5709.7168 -2834.6472 5709.6992 -2834.9497 5709.6816 C-2834.7976 5709.75 -2834.6472 5709.8564 -2834.4929 5710.0244 C-2834.2952 5710.1353 -2834.1919 5709.9209 -2834.0437 5709.7305 Cf/BBAccumRotation (0.598766) XT-2835.7876 5709.6309 m-2835.8423 5709.627 -2835.8972 5709.623 -2835.9482 5709.6206 C-2835.9968 5709.6484 -2836.0437 5709.6772 -2836.0857 5709.707 C-2835.9868 5709.6772 -2835.8865 5709.6519 -2835.7876 5709.6309 Cf/BBAccumRotation (0.598766) XT-2837.3643 5709.8765 m-2837.0857 5709.9302 -2836.8188 5709.8975 -2836.5613 5709.8364 C-2836.7888 5709.7646 -2837.0532 5709.7622 -2837.3643 5709.8765 Cf/BBAccumRotation (0.598766) XT-2836.1079 5710.1104 m-2836.2048 5709.9678 -2836.2524 5709.8184 -2836.0923 5709.71 c-2836.0903 5709.7095 -2836.0884 5709.7095 -2836.0857 5709.707 C-2836.2429 5709.7524 -2836.3987 5709.7998 -2836.5613 5709.8364 C-2836.3911 5709.8926 -2836.2388 5709.9878 -2836.1079 5710.1104 Cf/BBAccumRotation (0.598766) XT-2836.1079 5710.1104 m-2836.0144 5710.248 -2835.8655 5710.3774 -2835.8147 5710.457 c-2835.8999 5710.3301 -2835.9983 5710.2129 -2836.1079 5710.1104 Cf/BBAccumRotation (0.598766) XT-2836.5056 5713.5024 m-2836.6648 5713.6094 -2836.6272 5712.6494 -2836.9419 5712.8638 C-2837.6799 5713.1328 -2838.3113 5713.5645 -2839.0024 5713.5664 C-2839.3169 5713.7822 -2839.8132 5712.7168 -2840.1272 5712.9316 C-2840.8677 5713.2017 -2842.7563 5714.4917 -2841.6433 5714.4336 c-2839.9692 5714.2915 -2838.8777 5714.0313 -2837.3755 5713.8545 C-2836.1548 5713.4688 -2834.9812 5713.0103 -2833.7312 5712.6616 C-2833.3811 5712.6167 -2833.0544 5712.6904 -2832.7251 5712.7559 C-2833.1548 5712.6064 -2833.5945 5712.4595 -2834.0825 5712.3174 C-2834.7251 5712.0527 -2835.5005 5713.2837 -2836.5056 5713.5024 Cf/BBAccumRotation (0.598766) XT-2827.3716 5710.3101 m-2827.5281 5710.4185 -2827.8442 5710.6328 Y-2828.5471 5709.9424 -2829.2856 5710.2129 -2830.0239 5710.4824 C-2829.9165 5710.6416 -2829.8071 5710.8022 -2829.6963 5710.9614 C-2829.2739 5710.9063 -2829.2251 5710.6382 -2829.6001 5710.4287 C-2828.7407 5711.0112 -2827.9282 5711.1016 -2827.0959 5711.0039 C-2827.1479 5710.7432 -2827.1372 5710.4429 -2827.3716 5710.3101 Cf/BBAccumRotation (0.598766) XT-2826.6079 5710.9248 m-2826.7712 5710.9561 -2826.9353 5710.9824 -2827.0959 5711.0039 C-2827.0923 5711.0313 -2827.0845 5711.0576 -2827.0784 5711.0864 C-2826.9143 5711.0391 -2826.7505 5710.9917 -2826.5903 5710.9478 C-2826.5959 5710.9399 -2826.6021 5710.9326 -2826.6079 5710.9248 Cf/BBAccumRotation (0.598766) XT-2840.7097 5710.7549 m-2842.8071 5710.7935 -2844.7815 5710.7471 -2846.7097 5710.6528 C-2846.8579 5710.8408 -2846.9617 5711.0576 -2847.1609 5710.9448 C-2847.3113 5710.7783 -2847.4631 5710.6729 -2847.6135 5710.603 C-2847.8953 5710.5879 -2848.1765 5710.5713 -2848.4556 5710.5527 C-2848.5532 5710.5742 -2848.6521 5710.6006 -2848.7524 5710.6279 C-2848.7537 5710.6294 -2848.7583 5710.6309 -2848.7605 5710.6328 c-2848.9185 5710.7417 -2848.8716 5710.8896 -2848.7739 5711.0313 C-2848.6648 5711.1328 -2848.5647 5711.2524 -2848.4792 5711.3784 c-2848.5337 5711.2983 -2848.6785 5711.1694 -2848.7739 5711.0313 C-2848.9067 5710.9097 -2849.0544 5710.8135 -2849.2273 5710.7593 C-2849.4839 5710.8188 -2849.7524 5710.8535 -2850.0295 5710.7974 C-2849.7212 5710.6846 -2849.4556 5710.6846 -2849.2273 5710.7593 C-2849.0647 5710.7207 -2848.9087 5710.6729 -2848.7524 5710.6279 C-2848.7075 5710.5977 -2848.6624 5710.5713 -2848.6155 5710.5415 C-2849.2583 5710.5 -2849.8972 5710.4526 -2850.5369 5710.4038 C-2850.6841 5710.4287 -2850.8247 5710.4502 -2850.9392 5710.4824 c-2851.4028 5710.6108 -2851.8647 5710.7393 -2852.1509 5710.2734 C-2852.2639 5710.2656 -2852.3792 5710.2559 -2852.4944 5710.2437 C-2852.4731 5710.2734 -2852.4497 5710.2969 -2852.4282 5710.3301 C-2852.4792 5710.3008 -2852.5222 5710.2695 -2852.5571 5710.2393 C-2853.0396 5710.1992 -2853.5239 5710.1582 -2854.0105 5710.1152 C-2854.3247 5710.2969 -2854.6487 5710.5239 -2854.9731 5710.6606 C-2855.1919 5710.3408 -2855.2993 5710.1816 V-2855.4312 5710.4214 -2855.6196 5710.5801 -2855.8403 5710.6606 C-2855.5784 5710.9478 -2855.3403 5711.2646 -2855.1177 5711.4614 C-2854.7915 5711.9414 -2854.3892 5710.498 -2854.0044 5711.4028 c-2854.3892 5710.498 -2854.7915 5711.9414 -2855.1177 5711.4614 C-2855.3403 5711.2646 -2855.5784 5710.9478 -2855.8403 5710.6606 C-2856.2993 5710.832 -2856.8933 5710.6606 -2857.3716 5710.1929 C-2856.7776 5709.7871 -2856.2776 5710.1797 -2855.8403 5710.6606 C-2855.6196 5710.5801 -2855.4312 5710.4214 -2855.2993 5710.1816 C-2855.1919 5710.3408 -2854.9731 5710.6606 Y-2854.6487 5710.5239 -2854.3247 5710.2969 -2854.0105 5710.1152 C-2854.9597 5710.0327 -2855.9185 5709.9502 -2856.8987 5709.8687 c-2863.2031 5709.2568 -2869.0176 5709.3652 -2875.5583 5708.9141 c-2879.1016 5708.6367 -2882.5056 5708.2256 -2885.8442 5707.6631 c-2892.5022 5706.5439 -2898.5759 5707.8301 -2905.3025 5705.4072 c-2907.8843 5704.5576 -2912.6763 5705.0181 -2915.1653 5705.1182 C-2918.5 5706.7119 -2916.7712 5710.832 -2916.6145 5711.0645 C-2914.5647 5714.5757 -2912.9607 5712.6265 -2908.7839 5714.6895 C-2911.6289 5713.5176 -2906.6848 5712.4297 -2903.9983 5714.835 c-2900.1111 5718.5 -2894.5671 5715.5688 -2889.7712 5716.5063 c-2888.5723 5716.7417 -2887.2983 5716.5757 -2885.8647 5716.6484 C-2878.4336 5717.8955 -2871.5295 5716.3433 -2863.7161 5716.627 C-2861.6453 5716.6167 -2859.8264 5715.7271 -2858.0825 5715.2393 C-2856.8091 5715.0742 -2855.4482 5715.5454 -2854.4128 5715.5439 c-2852.7849 5715.5356 -2851.3833 5715.1992 -2850.0415 5714.7769 C-2851.5415 5714.9526 -2852.6372 5715.2104 -2854.3091 5715.3555 c-2855.4243 5715.4141 -2853.5337 5714.1245 -2852.7952 5713.853 C-2852.4792 5713.6382 -2851.9829 5714.7036 -2851.6665 5714.4878 C-2850.9792 5714.4863 -2850.3479 5714.0557 -2849.6101 5713.7847 C-2849.2937 5713.5703 -2849.3303 5714.5313 -2849.1724 5714.4248 C-2848.1665 5714.207 -2847.3911 5712.9751 -2846.7483 5713.2383 C-2846.2605 5713.3809 -2845.8201 5713.5293 -2845.3911 5713.6768 C-2845.1196 5713.7295 -2844.8501 5713.7725 -2844.5632 5713.7349 C-2844.3853 5713.6543 -2844.2007 5713.5742 -2844.0161 5713.4937 C-2844.1624 5713.1992 -2844.2151 5712.8408 -2844.2639 5712.4795 C-2843.9983 5712.5313 -2843.6235 5712.7437 -2843.3579 5712.7969 c-2843.6235 5712.7437 -2843.9983 5712.5313 -2844.2639 5712.4795 C-2844.2151 5712.8408 -2844.1624 5713.1992 -2844.0161 5713.4937 C-2842.6919 5712.9302 -2841.1648 5712.4229 -2839.7449 5712.0093 C-2839.7505 5711.9824 -2839.7583 5711.9526 -2839.7639 5711.9238 C-2840.5945 5712.0215 -2841.4041 5711.9336 -2842.2661 5711.3496 C-2841.8933 5711.5615 -2841.9392 5711.8276 -2842.3643 5711.8848 C-2842.4731 5711.7256 -2842.5825 5711.5645 -2842.6899 5711.4053 C-2841.9497 5711.1353 -2841.2112 5710.8638 -2840.5105 5711.5557 C-2840.1936 5711.3408 -2840.0369 5711.2324 V-2839.8025 5711.3652 -2839.8132 5711.6675 -2839.7639 5711.9238 C-2839.6021 5711.9063 -2839.4382 5711.8784 -2839.2739 5711.8477 C-2839.6196 5711.3696 -2840.7097 5710.7549 Yf/BBAccumRotation (0.598766) XT-2849.2463 5710.731 m-2849.1333 5710.6992 -2848.9944 5710.6782 -2848.8464 5710.6543 C-2849.3833 5710.6118 -2849.9204 5710.5688 -2850.4597 5710.5239 C-2850.1743 5710.9902 -2849.7112 5710.8608 -2849.2463 5710.731 cf/BBAccumRotation (0.598766) XTUUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-2918.5 5718.4351 m-2704.8999 5718.4351 L-2704.8999 5710.6343 L-2918.5 5710.6343 L-2918.5 5718.4351 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-2918.5 5714.5352 m-2908.4856 5717.0269 -2901.6863 5718.3755 -2889.7007 5718.4351 c-2876.7185 5718.5 -2811.6997 5718.4351 y-2746.6816 5718.5 -2733.6997 5718.4351 v-2721.7124 5718.3755 -2714.9136 5717.0269 -2704.8999 5714.5352 C-2714.9136 5712.0435 -2721.7124 5710.6948 -2733.6997 5710.6343 c-2746.6816 5710.5688 -2811.6997 5710.6343 y-2876.7185 5710.5688 -2889.7007 5710.6343 v-2901.6863 5710.6948 -2908.4856 5712.0435 -2918.5 5714.5352 CfUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 10 pt. Oval/ Adobe ArtOnPath B) -(rush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/ Calligr) -(aphy/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(10 pt. Oval)(1 10 10 75 75 -20 110 1 0 1 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Calligraphy)(1 / Unnamed 11/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0.000031 0.000031 0.000031 0.000031 1 1 1 Xa(White)Pc0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa(Black)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(CMYK Red)Pc0.038819 0.000031 0.932555 0.000031 1 0.94902 0 Xa(CMYK Yellow)Pc0.827542 0.064729 0.957824 0.002594 0 0.65098 0.317647 Xa(CMYK Green)Pc0.693446 0.140078 0.000031 0.000031 0 0.682353 0.937255 Xa(CMYK Cyan)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(CMYK Blue)Pc0.006653 0.990021 0.005615 0.000031 0.92549 0 0.54902 Xa(CMYK Magenta)Pc0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa(C=15 M=100 Y=90 K=10)Pc0.000031 0.897398 0.84744 0.000031 0.937255 0.254902 0.211765 Xa(C=0 M=90 Y=85 K=0)Pc0.000031 0.79855 0.939544 0.000092 0.945098 0.352941 0.160784 Xa(C=0 M=80 Y=95 K=0)Pc0.000732 0.495003 0.984894 0.000031 0.968627 0.580392 0.117647 Xa(C=0 M=50 Y=100 K=0)Pc0.000031 0.349462 0.845243 0.000031 0.984314 0.690196 0.25098 Xa(C=0 M=35 Y=85 K=0)Pc0.05594 0.000031 0.899687 0.000031 0.976471 0.929412 0.196078 Xa(C=5 M=0 Y=90 K=0)Pc0.197513 0.001373 0.983734 0.000031 0.843137 0.87451 0.137255 Xa(C=20 M=0 Y=100 K=0)Pc0.49723 0.00293 0.989471 0.000031 0.552941 0.776471 0.247059 Xa(C=50 M=0 Y=100 K=0)Pc0.746151 0.000031 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(C=75 M=0 Y=100 K=0)Pc0.861662 0.165713 1 0.032532 0 0.580392 0.266667 Xa(C=85 M=10 Y=100 K=10)Pc0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa(C=90 M=30 Y=95 K=30)Pc0.750637 0.000031 0.748928 0.000031 0.168627 0.713726 0.45098 Xa(C=75 M=0 Y=75 K=0)Pc0.788235 0.104707 0.45008 0.000885 0 0.654902 0.615686 Xa(C=80 M=10 Y=45 K=0)Pc0.702144 0.15375 0.000031 0.000031 0.152941 0.666667 0.882353 Xa(C=70 M=15 Y=0 K=0)Pc0.848356 0.500084 0.000031 0.000031 0.109804 0.458824 0.737255 Xa(C=85 M=50 Y=0 K=0)Pc0.993927 0.930846 0.059907 0.003601 0.168627 0.223529 0.564706 Xa(C=100 M=95 Y=5 K=0)Pc1 1 0.301427 0.214023 0.14902 0.133333 0.384314 Xa(C=100 M=100 Y=25 K=25)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(C=75 M=100 Y=0 K=0)Pc0.501945 0.992706 0.014649 0.00116 0.572549 0.152941 0.560784 Xa(C=50 M=100 Y=0 K=0)Pc0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa(C=35 M=100 Y=35 K=10)Pc0.092134 0.99704 0.484413 0.004273 0.854902 0.109804 0.360784 Xa(C=10 M=100 Y=50 K=0)Pc0.000031 0.946166 0.204593 0.000031 0.933333 0.164706 0.482353 Xa(C=0 M=95 Y=20 K=0)Pc0.251163 0.245762 0.398383 0.000031 0.760784 0.709804 0.607843 Xa(C=25 M=25 Y=40 K=0)Pc0.391943 0.442054 0.491554 0.061463 0.607843 0.521569 0.47451 Xa(C=40 M=45 Y=50 K=5)Pc0.514702 0.509239 0.616327 0.227451 0.447059 0.4 0.345098 Xa(C=50 M=50 Y=60 K=25)Pc0.549706 0.600061 0.645899 0.398749 0.34902 0.290196 0.258824 Xa(C=55 M=60 Y=65 K=40)Pc0.233463 0.391485 0.638086 0.01416 0.768627 0.603922 0.423529 Xa(C=25 M=40 Y=65 K=0)Pc0.304051 0.497078 0.750851 0.094057 0.662745 0.486275 0.313726 Xa(C=30 M=50 Y=75 K=10)Pc0.358953 0.60058 0.803098 0.236179 0.545098 0.368627 0.235294 Xa(C=35 M=60 Y=80 K=25)Pc0.392248 0.642969 0.886656 0.354772 0.458824 0.298039 0.160784 Xa(C=40 M=65 Y=90 K=35)Pc0.418647 0.692348 0.974792 0.488502 0.376471 0.223529 0.07451 Xa(C=40 M=70 Y=100 K=50)Pc0.516899 0.701045 0.792386 0.691859 0.235294 0.141176 0.082353 Xa(C=50 M=70 Y=80 K=70)PcBb0 0 0 0 Bh2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Super Soft Black Vignette)PcBb2 (Fade To Edge) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge)PcBb0 0 0 0 Bh2 (Black and White Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black and White Radial)PcBb2 (Black and White Linear) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black and White Linear)Pc(Crosses Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Crosses Pattern)Pc0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa(C=0 M=0 Y=0 K=100)Pc0.677577 0.618402 0.58056 0.456641 0.254902 0.25098 0.258824 Xa(C=0 M=0 Y=0 K=90)Pc0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa(C=0 M=0 Y=0 K=80)Pc0.583215 0.494575 0.46363 0.148043 0.427451 0.431373 0.443137 Xa(C=0 M=0 Y=0 K=70)Pc0.522423 0.426978 0.407874 0.062379 0.501961 0.509804 0.521569 Xa(C=0 M=0 Y=0 K=60)Pc0.450904 0.360815 0.34818 0.01294 0.576471 0.584314 0.596078 Xa(C=0 M=0 Y=0 K=50)Pc0.36173 0.282292 0.271336 0.000031 0.654902 0.662745 0.67451 Xa(C=0 M=0 Y=0 K=40)Pc0.264164 0.199466 0.195499 0.000031 0.737255 0.745098 0.752941 Xa(C=0 M=0 Y=0 K=30)Pc0.169863 0.120485 0.123751 0.000031 0.819608 0.827451 0.831373 Xa(C=0 M=0 Y=0 K=20)Pc0.08426 0.057374 0.057435 0.000031 0.901961 0.905882 0.909804 Xa(C=0 M=0 Y=0 K=10)Pc0.040528 0.02359 0.026154 0.000031 0.945098 0.94902 0.94902 Xa(C=0 M=0 Y=0 K=5)Pc0.089754 0.696376 0.798398 0.005768 0.870588 0.427451 0.270588 Xa(C=10 M=70 Y=80 K=0)Pc0.096803 0.498939 0.80499 0.002716 0.882353 0.564706 0.294118 Xa(C=10 M=50 Y=80 K=0)Pc0.650019 0.096315 1 0.003143 0.407843 0.678431 0.270588 Xa(C=65 M=10 Y=100 K=0)Pc0.489662 0.897398 0.09015 0.003479 0.572549 0.247059 0.54902 Xa(C=50 M=90 Y=10 K=0)Pc0.247593 0.846433 0.593042 0.100404 0.686275 0.270588 0.32549 Xa(C=25 M=85 Y=60 K=10)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A1 Aq0 A0 J 0 j 1 w 4 M []0 d0 XR2800.0391 170.498 m2800.0391 129.3398 2764.2197 95.9766 2720.0313 95.9766 C79.978 95.9766 l35.7905 95.9766 -0.027344 129.3398 -0.027344 170.498 C-0.027344 2629.5039 l-0.027344 2670.6611 35.7905 2704.0234 79.978 2704.0234 C2720.0313 2704.0234 l2764.2197 2704.0234 2800.0391 2670.6611 2800.0391 2629.5039 C2800.0391 170.498 LhWnu1 Ap0 O3578.5068 -1260.0625 m-778.4951 -1260.0625 L-778.4951 2798.1504 L3578.5068 2798.1504 L3578.5068 -1260.0625 LBb0 0 0 0 Bh1 (Unnamed gradient 44) 1400 769.0439 0 2029.1064 1.07363 0 0 1 -603.0633 0 Bg2178.501 0 0 -2029.1064 1400.0059 769.0439 Bmf0 BB2903.082 -166.6592 m-103.0698 -166.6592 L-103.0698 933.3828 L2903.082 933.3828 L2903.082 -166.6592 LBb1 (Unnamed gradient 55) 1400.0063 -466.998 90 3082.3438 1 0 0 0.356885 0 6168.1108 Bg-0.000135 1100.0422 3010.1519 0.000047 -105.0698 -166.6592 Xm-0.000358 2924.3179 3010.1519 0.000047 -105.0693 -2611.8164 Bc-0.000076 620.8826 3010.1519 0.000047 -105.0698 312.501 Bm-0.000358 2924.3179 3010.1519 0.000047 -105.0698 933.3838 Bcf0 BBUQ0 Au*u0 Ap1 D0 O0 J 0 j 1 w 4 M []0 d0 XR0 g1221.2554 347.3965 m1168.3481 367.4785 1118.8184 367.4785 v1069.2847 367.4785 1022.291 347.3965 Y1019.4917 275.7256 1016.3564 164.1631 V1272.8608 164.1631 L1269.46 168.1553 1266.1421 172.4727 1262.916 177.1572 c1222.2422 236.5234 1221.2554 347.3965 Yf1817.748 347.3965 m1770.7402 367.4785 1721.2227 367.4785 v1671.6992 367.4785 1618.7979 347.3965 Y1617.791 236.5234 1577.1172 177.1572 v1573.8955 172.4727 1570.5801 168.1553 1567.1592 164.1631 C1823.71 164.1631 L1820.5439 275.7256 1817.748 347.3965 YBb1 (Unnamed gradient 2) 1420.0332 164.1631 90 203.3154 1 0 0 1 0 0 Bg-0.000009 203.3154 811.354 0.000035 1014.356 164.1631 Xm-0.000359 8214.0332 811.354 0.000035 1014.3564 -8016.1914 Bc-0.000007 169.6375 811.354 0.000035 1014.356 197.8408 Bm-0.000359 8214.0332 811.354 0.000035 1014.356 367.4785 Bcf0 BB*U0 D0.573358 0.106813 0.000031 0.000031 0.360784 0.721569 0.909804 Xa1420.0244 577.7188 m1470.6826 577.7188 1533.3418 581.6455 1577.1172 517.7705 c1617.791 458.4219 1618.7979 347.5645 Y1671.6992 327.4785 1721.2227 327.4785 v1770.7402 327.4785 1817.748 347.5645 Y1850.9023 1297.5049 1816.624 1701.4512 v1799.1982 1907.2661 1463.8447 1893.1094 1420.0244 1893.1094 C1376.1973 1893.1094 1040.8579 1907.2661 1023.3926 1701.4512 c989.1436 1297.5049 1022.291 347.5645 Y1069.2847 327.4785 1118.8184 327.4785 v1168.3481 327.4785 1221.2554 347.5645 Y1222.2422 458.4219 1262.916 517.7705 v1306.6836 581.6455 1369.3345 577.7188 1420.0244 577.7188 Cf0.684901 0.157809 0.025605 0.000031 0.219608 0.666667 0.862745 Xa1437.8125 675.5703 m1112.0049 736.4023 1029.0259 950.2539 1007.9189 1051.5313 C1008.6738 695.4131 1022.291 347.5645 Y1069.2847 327.4785 1118.8184 327.4785 v1168.3481 327.4785 1221.2554 347.5645 Y1222.2422 458.4219 1262.916 517.7705 v1306.6836 581.6455 1369.3345 577.7188 1420.0244 577.7188 c1470.6826 577.7188 1533.3418 581.6455 1577.1172 517.7705 c1617.791 458.4219 1618.7979 347.5645 Y1671.6992 327.4785 1721.2227 327.4785 v1770.7402 327.4785 1817.748 347.5645 Y1823.1064 484.9072 1827.3105 675.293 V1730.0664 653.2881 1601.1279 645.0791 1437.8125 675.5703 cfu0.573358 0.106813 0.000031 0.000031 0.360784 0.721569 0.909804 Xa1053.9463 1338.1582 m580.8857 1047.9395 633.04 728.7236 v668.0176 514.5791 881.231 591.1172 912.3789 739.9697 c945.0776 896.1826 898.7798 1216.334 1087.3501 1307.4541 C1053.9463 1338.1582 Lf/BBAccumRotation (0.435076) XT805.3394 711.665 m692.8315 737.2764 661.5498 841.8799 653.1621 908.3408 C632.1509 849.6699 623.1807 789.0361 633.04 728.7236 c665.3062 531.2363 849.1245 580.9727 901.9673 706.6592 C877.3271 702.0078 845.772 702.459 805.3394 711.665 cBb1 (Unnamed gradient 1270) 765.5024 596.2803 90 312.0605 1 0 0 1 0 0 Bg-0.000014 312.0605 282.7866 0.000012 621.1807 596.2803 Xm-0.000333 7624.5464 282.7866 0.000012 621.1812 -7028.2656 Bc-0.000004 101.4674 282.7866 0.000012 621.1807 596.2803 Bm-0.000333 7624.5464 282.7866 0.000012 621.1807 697.748 Bcf0 BB1 Ap0.811429 0.386236 0.261997 0.018219 0.176471 0.505882 0.627451 Xa888.8545 726.6328 m879.5098 694.9053 860.4844 672.5449 846.3823 676.7109 c832.2847 680.8467 823.125 697.3398 832.4775 729.0732 c841.8374 760.8281 866.1494 795.7695 880.2539 791.5938 c900.6504 785.5703 898.2002 758.3643 888.8545 726.6328 cfU0 Ap1799.999 1657.9316 m1798.873 1674.4092 1797.6416 1690.2954 1796.3027 1705.4854 c1779.7764 1893.3657 1461.7021 1880.4404 1420.1396 1880.4404 c1378.5742 1880.4404 1060.5107 1893.3657 1043.9482 1705.4854 c1042.6113 1690.2954 1041.3838 1674.4092 1040.2568 1657.9316 C1799.999 1657.9316 LBb1 (Unnamed gradient 1239) 1420.1279 1657.9316 90 222.6978 1 0 0 1 0 0 Bg-0.00001 222.6978 763.7427 0.000033 1038.2563 1657.9316 Xm-0.000359 8214.1279 763.7427 0.000033 1038.2568 -6504.2793 Bc-0.000007 170.7805 763.7427 0.000033 1038.2563 1709.8491 Bm-0.000359 8214.1279 763.7427 0.000033 1038.2563 1880.6294 Bcf0 BBuu1 Ap0.733425 0.671992 0.657832 0.825803 0.066667 0.066667 0.066667 Xa1114.6299 1571.2051 m1145.458 1571.397 1160.9453 1592.1997 1161.1494 1620.0747 c1161.3574 1647.9614 1146.5762 1672.3623 1115.3662 1672.1772 c1084.1763 1671.9922 1069.0532 1651.1865 1068.8467 1623.3062 c1068.6426 1595.4238 1081.9756 1571.0117 1114.6299 1571.2051 cf0.670497 0.631464 0.626642 0.565331 0.219608 0.207843 0.203922 Xa1120.6938 1660.3315 m1137.8052 1655.3354 1147.6875 1636.8516 1142.7402 1619.0356 c1137.7993 1601.2207 1119.9033 1590.8555 1102.7896 1595.8521 c1085.6582 1600.8569 1075.8057 1619.3398 1080.749 1637.1436 c1085.6948 1654.9668 1103.5635 1665.3423 1120.6938 1660.3315 cf0.625086 0.601556 0.576226 0.382635 0.313726 0.290196 0.290196 Xa1098.5454 1656.5146 m1103.9561 1654.9277 1107.0864 1649.0815 1105.5205 1643.4443 c1103.9561 1637.8052 1098.2954 1634.5308 1092.8804 1636.1113 c1087.46 1637.6929 1084.3433 1643.5396 1085.9058 1649.1768 c1087.4697 1654.8149 1093.126 1658.0894 1098.5454 1656.5146 cf0.000031 0.000031 0.000031 0.000031 1 1 1 Xa1092.4355 1657.7974 m1095.8433 1656.7979 1097.8193 1653.1138 1096.8281 1649.5669 c1095.8433 1646.0146 1092.2759 1643.9512 1088.8687 1644.9468 c1085.4531 1645.9463 1083.4897 1649.6245 1084.4785 1653.1738 c1085.4609 1656.7236 1089.0215 1658.7935 1092.4355 1657.7974 cf1103.0801 1643.603 m1105.0132 1643.0356 1106.1348 1640.9458 1105.5718 1638.9341 c1105.0132 1636.9175 1102.9893 1635.7466 1101.0566 1636.3125 c1099.1182 1636.8794 1098.0039 1638.9658 1098.5654 1640.98 c1099.123 1642.9937 1101.1436 1644.1685 1103.0801 1643.603 cfU0 Ap0.811429 0.386236 0.261997 0.018219 0.176471 0.505882 0.627451 Xa1153.8774 1577.9614 m1115.0112 1539.4067 1075.4951 1579.2832 v1108.7969 1489.145 1153.8774 1577.9614 vfUuu1 Ap0.733425 0.671992 0.657832 0.825803 0.066667 0.066667 0.066667 Xa1722.3213 1571.2051 m1753.1484 1571.397 1768.6367 1592.1997 1768.8398 1620.0747 c1769.0488 1647.9614 1754.2666 1672.3623 1723.0586 1672.1772 c1691.8652 1671.9922 1676.7412 1651.1865 1676.5352 1623.3062 c1676.334 1595.4238 1689.665 1571.0117 1722.3213 1571.2051 cf0.670497 0.631464 0.626642 0.565331 0.219608 0.207843 0.203922 Xa1728.3838 1660.3315 m1745.4961 1655.3354 1755.3789 1636.8516 1750.4297 1619.0356 c1745.4912 1601.2207 1727.5947 1590.8555 1710.4775 1595.8521 c1693.3467 1600.8569 1683.4971 1619.3398 1688.4395 1637.1436 c1693.3848 1654.9668 1711.2559 1665.3423 1728.3838 1660.3315 cf0.625086 0.601556 0.576226 0.382635 0.313726 0.290196 0.290196 Xa1706.2363 1656.5146 m1711.6475 1654.9277 1714.7744 1649.0815 1713.2109 1643.4443 c1711.6475 1637.8052 1705.9854 1634.5308 1700.5693 1636.1113 c1695.1514 1637.6929 1692.0313 1643.5396 1693.5947 1649.1768 c1695.1602 1654.8149 1700.8154 1658.0894 1706.2363 1656.5146 cf0.000031 0.000031 0.000031 0.000031 1 1 1 Xa1700.125 1657.7974 m1703.5322 1656.7979 1705.5098 1653.1138 1704.5166 1649.5669 c1703.5332 1646.0146 1699.9658 1643.9512 1696.5596 1644.9468 c1693.1436 1645.9463 1691.1797 1649.6245 1692.166 1653.1738 c1693.1523 1656.7236 1696.7129 1658.7935 1700.125 1657.7974 cf1710.7715 1643.603 m1712.7041 1643.0356 1713.8232 1640.9458 1713.2637 1638.9341 c1712.7041 1636.9175 1710.6787 1635.7466 1708.748 1636.3125 c1706.8105 1636.8794 1705.6943 1638.9658 1706.2539 1640.98 c1706.8135 1642.9937 1708.834 1644.1685 1710.7715 1643.603 cfU0 Ap0.811429 0.386236 0.261997 0.018219 0.176471 0.505882 0.627451 Xa1761.5684 1577.9614 m1722.7002 1539.4067 1683.1865 1579.2832 v1716.4883 1489.145 1761.5684 1577.9614 vfU0.573358 0.106813 0.000031 0.000031 0.360784 0.721569 0.909804 Xa1797.3262 1343.0938 m2163.7471 1227.5908 2063.6797 928.7832 v1951.2891 593.1943 1483.165 625.0254 1524.0771 861.3662 c1554.0801 1034.8145 1767.7129 889.3193 1876.251 978.1133 c1984.7617 1066.8906 1920.6416 1241.4443 1802.2803 1271.0283 C1797.3262 1343.0938 Lf1847.8838 757.709 m1677.7119 722.4414 1541.3926 800.3545 1521.5693 829.8828 C1525.2402 646.7412 1862.7715 614.5654 2014.8057 831.1797 C1965.3457 796.1553 1946.6885 778.1797 1847.8838 757.709 cBb1 (Unnamed gradient 1270) 1768.1875 680.3994 90 150.7803 1 0 0 1 0 0 Bg-0.000007 150.7803 497.2363 0.000022 1519.5693 680.3994 Xm-0.000377 8628.0215 497.2363 0.000022 1519.5693 -7947.6211 Bc-0.000002 49.0267 497.2363 0.000022 1519.5693 680.3994 Bm-0.000377 8628.0215 497.2363 0.000022 1519.5693 729.4258 Bcf0 BBu1262.916 517.416 m1273.1392 532.335 1284.3921 543.5537 1296.2861 551.9912 C1015.7554 551.9912 L1019.1211 428.1846 1022.291 347.207 Y1069.2847 327.1182 1118.8184 327.1182 v1168.3481 327.1182 1221.2554 347.207 Y1222.2422 458.0625 1262.916 517.416 vBb1 (Unnamed gradient 1262) 1156.021 327.1182 90 224.873 1 0 0 1 0 0 Bg-0.00001 224.873 284.5308 0.000012 1013.7554 327.1182 Xm-0.000348 7950.0215 284.5308 0.000012 1013.7559 -7622.9023 Bc-0.000005 124.163 284.5308 0.000012 1013.7554 327.1182 Bm-0.000348 7950.0215 284.5308 0.000012 1013.7554 451.2813 Bcf0 BB1543.7441 551.9912 m1555.6367 543.5537 1566.8916 532.335 1577.1172 517.416 c1617.791 458.0625 1618.7979 347.207 Y1671.6992 327.1182 1721.2227 327.1182 v1770.7402 327.1182 1817.748 347.207 Y1820.9082 428.1934 1824.2803 551.9912 V1543.7441 551.9912 LBb1 (Unnamed gradient 1262) 1684.0117 327.1182 90 224.873 1 0 0 1 0 0 Bg-0.00001 224.873 284.5361 0.000012 1541.7441 327.1182 Xm-0.000371 8478.0117 284.5361 0.000012 1541.7441 -8150.8945 Bc-0.000005 124.163 284.5361 0.000012 1541.7441 327.1182 Bm-0.000371 8478.0117 284.5361 0.000012 1541.7441 451.2813 Bcf0 BBUu0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 Xa1626.1689 906.4473 m1410.5244 906.4521 1238.9565 873.9512 1238.5132 831.9648 c1238.0425 788.5176 1420.9951 751.3828 1647.1416 749.0156 c1654.7607 748.9326 1662.3506 748.8945 1669.8682 748.8945 c1885.4775 748.8945 2057.0166 781.4043 2057.4688 823.377 c2057.9316 866.8359 1874.9795 903.9697 1648.8281 906.3271 c1641.2422 906.4092 1633.6611 906.4473 1626.1689 906.4473 CfU1669.8682 748.8945 m1662.3525 748.8945 1654.7637 748.9326 1647.1416 749.0156 c1442.4688 751.1582 1273.1855 781.7803 1243.2207 819.7832 c1241.9556 821.3906 1240.9375 823.0068 1240.1738 824.6445 c1239.5688 825.9453 1239.125 827.2539 1238.8496 828.5703 c1238.6147 829.6982 1238.502 830.833 1238.5132 831.9648 C1238.5132 821.8613 L1238.502 820.7246 1238.6147 819.5928 1238.8496 818.4648 c1239.125 817.1504 1239.5688 815.8389 1240.1738 814.5381 c1240.9375 812.9043 1241.9556 811.2852 1243.2207 809.6738 c1273.1855 771.6689 1442.4688 741.0508 1647.1416 738.9102 c1654.7637 738.8301 1662.3525 738.7891 1669.8682 738.7891 c1885.4795 738.7891 2057.0166 771.2939 2057.4688 813.2734 C2057.4688 823.377 L2057.0166 781.4043 1885.4795 748.8945 1669.8682 748.8945 cBb1 (Unnamed gradient 25) 2057.4688 785.377 180 818.9561 1 0 0 1 0 0 Bg-818.9561 -0.000072 -0.000008 97.1758 2057.4688 736.7891 Xm-8851.4688 -0.000774 -0.000008 97.1758 10908.9375 736.79 Bc-818.9561 -0.000072 -0.000008 97.1758 2057.4688 736.7891 Bm-8851.4688 -0.000774 -0.000008 97.1758 1238.5127 736.7891 Bcf0 BB0.15314 0.100282 0.148013 0.000031 0.839216 0.847059 0.823529 Xa1900.9395 776.2695 m1901.457 825.2617 1695.1914 867.1299 1440.2285 869.7871 c1431.6738 869.8779 1423.127 869.9219 1414.6836 869.9219 c1367.6426 869.9287 1322.4604 868.5537 1280.1777 865.9961 C1343.8232 890.2715 1474.0244 906.4521 1626.1689 906.4473 c1633.6611 906.4473 1641.2422 906.4092 1648.8281 906.3271 c1874.9795 903.9697 2057.9316 866.8359 2057.4688 823.377 c2057.1953 797.8301 1993.5488 775.793 1895.166 762.4521 C1898.9102 766.9346 1900.8867 771.5498 1900.9395 776.2695 cf0.535546 0.405463 0.570153 0.123598 0.470588 0.490196 0.423529 Xa1653.4805 1102.9961 m1835.5742 1102.4521 1967.5059 991.502 2023.5713 820.9551 C1940.5439 764.4805 1652.7227 764.4805 v1368.6597 764.4805 1280.9858 822.9473 Y1337.7656 993.2617 1471.3887 1103.2119 1653.4805 1102.9961 cf1653.4805 1115.4434 m1835.5742 1114.9023 1969.0518 992.1895 2025.1191 821.6377 C1885.8037 770.2217 1652.7227 772.7793 v1419.6289 771.1924 1280.6196 823.1982 Y1337.4004 993.5166 1471.3887 1115.6621 1653.4805 1115.4434 cBb1 (Unnamed gradient 293) 1778.3877 1095.7197 -115 457.3547 1 0 0 1 0 0 Bg-193.2865 -414.5042 -634.3464 295.8006 2087.8438 951.418 Xm-3640.4094 -7806.8813 -634.3464 295.8006 5646.4326 8582.834 Bc-111.4658 -239.0391 -634.3464 295.8006 2006.0234 775.9531 Bm-3640.4094 -7806.8813 -634.3464 295.8006 1894.5576 536.9141 Bcf0 BB0.684901 0.157809 0.025605 0.000031 0.219608 0.666667 0.862745 Xa1420.0244 1893.1094 m1386.9028 1893.1094 1187.3008 1901.1885 1084.2188 1816.3076 C1084.4766 1813.2183 L1096.5952 1809.916 L1164.4326 1791.4326 1235.6289 1782.0601 1308.2051 1782.0596 c1308.209 1782.0596 1308.2139 1782.0596 Y1331.6694 1782.0596 1355.5107 1783.0586 1379.0708 1785.0269 c1476.1338 1793.1328 1568.4727 1817.1563 1653.5137 1856.4302 C1664.918 1861.6978 L1664.7207 1864.0527 L1563.502 1897.6577 1444.875 1893.1094 1420.0244 1893.1094 cf0.094026 0.014191 0.464637 0.000031 0.917647 0.917647 0.627451 Xa1728.6162 2192.8418 m1721.082 2283.1182 1631.0742 2349.293 1527.5781 2340.6479 c1490.6748 2337.5654 1457.043 2325.3784 1429.3818 2306.8882 C1408.8008 2336.3125 1370.2256 2354.4375 1327.7402 2350.8911 c1285.2563 2347.3428 1250.2241 2323.0693 1234.8135 2290.6348 C1204.4663 2304.2847 1169.2754 2310.7217 1132.3652 2307.6387 c1028.8779 2298.9971 951.0942 2218.8027 958.6323 2128.5308 c964.2412 2061.4297 1015.415 2007.6543 1083.8149 1988.0117 C1097.3257 1826.229 L1182.8174 1802.9346 1276.4424 1793.791 1373.5913 1801.9082 c1470.748 1810.0215 1561.5596 1834.5708 1642.0029 1871.7217 C1628.4883 2033.5054 L1692.6836 2064.2217 1734.2275 2125.7402 1728.6162 2192.8418 cf1698.6191 2187.1958 m1691.7764 2264.5464 1609.9922 2321.2451 1515.959 2313.8379 c1482.4307 2311.1992 1451.875 2300.7549 1426.7402 2284.9116 C1408.041 2310.123 1372.9927 2325.6553 1334.396 2322.6138 c1295.792 2319.5752 1263.9604 2298.7773 1249.9624 2270.9873 C1222.3901 2282.6807 1190.4131 2288.1963 1156.8774 2285.5557 c1062.8555 2278.1509 992.1816 2209.4385 999.0303 2132.0918 C1698.6191 2187.1958 LBb1 (Unnamed gradient 9) 1349.7905 2150.5332 96 172.7896 1 0 0 1 0 0 Bg-18.0614 171.843 702.924 73.8803 998.9565 2113.6592 Xm-851.2582 8099.1782 702.924 73.8803 1842.6797 -5913.8301 Bc-10.5266 100.1539 702.924 73.8803 991.4219 2185.3481 Bm-851.2582 8099.1782 702.924 73.8803 980.8955 2285.502 Bcf0 BB*u1 D0.131533 0.049928 0.542992 0.000031 0.882353 0.870588 0.560784 Xa1684.6006 2073.9551 m1485.2744 2009.1533 1100.1997 1998.3496 1024.0991 2105.2715 c962.2554 2192.165 1015.7109 2255.2207 1048.3159 2282.4956 C990.1172 2250.332 953.3403 2191.917 958.6323 2128.5308 c964.2412 2061.417 1015.4321 2007.6357 1083.8477 1988.0015 c1083.8369 1988.0063 1083.8242 1988.0078 1083.8149 1988.0117 C1097.3257 1826.229 L1112.876 1821.9902 1128.6948 1818.229 1144.7524 1814.9478 C1143.3804 1862.5342 1150.6914 1915.0811 1201.0435 1941.6577 c1258.9829 1972.2383 1566.6904 1999.498 1630.8809 2004.9033 C1628.4902 2033.5059 L1628.4043 2033.4648 1628.3115 2033.4277 1628.2256 2033.3853 c1649.9043 2043.7246 1669.0117 2057.5625 1684.6006 2073.9551 Cf*U0 D1927.2256 976.7646 m1861.0645 1056.1787 1767.7412 1105.8223 1654.79 1106.1572 c1541.2949 1106.2939 1447.4072 1056.5723 1380.8564 976.7646 C1927.2256 976.7646 LBb1 (Unnamed gradient 296) 1654.041 976.7646 90 129.3926 1 0 0 1 0 0 Bg-0.000006 129.3926 550.3696 0.000024 1378.856 976.7646 Xm-0.000369 8448.041 550.3696 0.000024 1378.8564 -7441.9063 Bc-0.000004 100.0212 550.3696 0.000024 1378.856 1006.1357 Bm-0.000369 8448.041 550.3696 0.000024 1378.856 1106.1572 Bcf0 BB1726.3379 1090.2197 m1858.0781 1067.71 1951.915 965.6797 1994.8154 837.835 C1983.3711 832.5225 1962.417 825.083 V1917.7646 943.7266 1836.6719 1042.0273 1726.3379 1090.2197 CBb1 (Unnamed gradient 1) 1726.3379 957.6514 0 268.4775 1 0 0 1 0 0 Bg268.4775 0 0 -269.1367 1726.3379 1092.2197 Xm8520.3379 0 0 -269.1367 -6701.7627 1092.2197 Bc176.2399 0 0 -269.1367 1818.5752 1092.2197 Bm8520.3379 0 0 -269.1367 1994.8154 1092.2197 Bcf0 BBu0.450263 0.332555 0.472267 0.031098 0.572549 0.588235 0.52549 Xa1676.1914 1114.7129 m1668.7021 1115.1641 1661.1416 1115.4189 1653.4805 1115.4434 c1645.8291 1115.4492 1638.2744 1115.2275 1630.7959 1114.8076 C1634.6777 1110.1621 1639.9883 1106.6328 1646.3086 1105.0479 c1657.667 1102.2041 1669.1133 1106.3389 1676.1914 1114.7129 Cf1 Ap0.253117 0.166567 0.272404 0.000031 0.752941 0.768627 0.717647 Xa1624.7559 1146.335 m1620.7773 1130.4424 1630.4219 1114.3301 1646.3086 1110.3486 c1662.2031 1106.3662 1678.3193 1116.0078 1682.3115 1131.9014 c1686.2949 1147.7939 1676.6367 1163.9063 1660.7539 1167.8994 c1644.8555 1171.8818 1628.7432 1162.2305 1624.7559 1146.335 cf1637.0557 1145.2188 m1634.0479 1133.2031 1641.3457 1121.0254 1653.3477 1118.0186 c1665.3594 1115.0059 1677.5342 1122.2988 1680.5449 1134.3076 c1683.5586 1146.3252 1676.2676 1158.4951 1664.2588 1161.5039 c1652.2461 1164.5205 1640.0674 1157.2295 1637.0557 1145.2188 cBb1 (Unnamed gradient 23) 2552.4727 5829.7422 0 44.8408 -0.9699 -0.2432 -0.2432 0.9699 18448.5156 7080.9795 Bg-43.4911 10.9053 -11.8788 -47.3736 1686.4844 1157.9971 Xm-9065.1436 2273.062 -11.8788 -47.3736 10751.6289 -1115.0645 Bc-43.4911 10.9053 -11.8788 -47.3736 1686.4844 1157.9971 Bm-9065.1436 2273.062 -11.8788 -47.3736 1642.9932 1168.9023 Bcf0 BB0.178866 0.131044 0.138857 0.000031 0.811765 0.815686 0.815686 Xa1657.8857 1153.2529 m1656.5166 1147.7998 1659.8291 1142.2715 1665.2832 1140.9033 c1670.7324 1139.5391 1676.2607 1142.8486 1677.6299 1148.3027 c1678.999 1153.7617 1675.6934 1159.2832 1670.2363 1160.6465 c1664.7793 1162.0195 1659.2549 1158.708 1657.8857 1153.2529 cfUu0 Ap0.811429 0.386236 0.261997 0.018219 0.176471 0.505882 0.627451 Xa1514.3857 1348.9922 m1424.8613 1297.4082 1317.1445 1347.4766 v1409.6914 1204.8535 1514.3857 1348.9922 vfu1384.4199 1500.6763 m1415.3809 1618.1826 1570.1436 1584.1226 v1724.9102 1550.0615 1717.5342 1361.0303 1891.4639 1383.1689 C1959.4131 1393.3877 1932.7324 1458.0996 1910.623 1442.7744 c1925.3633 1470.0234 1951.8945 1444.4775 v1978.4258 1418.9316 1962.5977 1292.1982 1714.5879 1286.0996 c1506.7598 1280.9902 1349.0449 1343.998 1384.4199 1500.6763 cBb1 (Unnamed gradient 6) 1670.3457 1285.8135 90 304.5029 1 0 0 1 0 0 Bg-0.000013 304.5029 633.3813 0.000028 1347.0444 1285.8135 Xm-0.00037 8469.1689 633.3813 0.000028 1347.0449 -7183.3555 Bc-0.000009 203.6248 633.3813 0.000028 1347.0444 1285.8135 Bm-0.00037 8469.1689 633.3813 0.000028 1347.0444 1489.4385 Bcf0 BB1447.1104 1500.6763 m1416.1504 1618.1826 1261.3867 1584.1226 v1106.6211 1550.0615 1113.9966 1361.0303 940.0684 1383.1689 C872.1172 1393.3877 898.7979 1458.0996 920.9082 1442.7744 c906.1675 1470.0234 879.6362 1444.4775 v853.1045 1418.9316 868.9351 1292.1982 1116.9429 1286.0996 c1324.7695 1280.9902 1482.4854 1343.998 1447.1104 1500.6763 cBb1 (Unnamed gradient 6) 1161.1851 1285.8135 90 304.5029 1 0 0 1 0 0 Bg-0.000013 304.5029 633.3813 0.000028 851.1045 1285.8135 Xm-0.000348 7960.0083 633.3813 0.000028 851.105 -6674.1953 Bc-0.000009 203.6248 633.3813 0.000028 851.1045 1285.8135 Bm-0.000348 7960.0083 633.3813 0.000028 851.1045 1489.4385 Bcf0 BBUUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF