openapi: 3.0.2
info:
paths:
  /themes:
    post:
      requestBody:
          $ref: "#/components/requestBodies/Theme"
      responses:
        200:
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Theme"
          description: Success
      tags:
        - Themes
      summary: Create a new theme.
  /themes/{themeID}:
    patch:
      parameters:
        - description: Unique themeID.
          in: path
          name: themeID
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Theme"
      responses:
        200:
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Theme"
          description: Success
      tags:
        - Themes
      summary: Update theme name.
    delete:
      parameters:
        - description: Unique theme ID.
          in: path
          name: themeID
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Success
      tags:
        - Themes
      summary: Delete theme.
  /themes/current:
      put:
        requestBody:
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    themeID:
                      description: Theme ID.
                      type: integer
                  example: {"themeID": 3}
                  required:
                    - themeID
              required: true
        responses:
          200:
            content:
              "application/json":
                schema:
                  $ref: "#/components/schemas/Theme"
            description: Success
        tags:
          - Themes
        summary:
          - Set theme as "current".
      get:
        responses:
          200:
            content:
                "application/json":
                  schema:
                    $ref: "#/components/schemas/Theme"
            description: Success
        tags:
          - Themes
        summary:
          - Get current theme.
components:
  requestBodies:
    Theme:
      content:
          application/json:
              schema:
                  type: object
                  properties:
                    name:
                      description: Theme name.
                      type: string
                  example: {"name":"custom client theme"}
                  required:
                    - name
      required: true
  schemas:
    NewTheme:
      properties:
        name:
          type: string
        themeID:
          type: integer
        current:
          type: boolean
      required:
        - name
        - themeID
        - current
      type: object
    ThemeAssets:
      description: Assets to include in a page as part of the theme.
      properties:
        header:
          $ref: "#/components/schemas/ThemeHeaderAsset"
        footer:
          $ref: "#/components/schemas/ThemeFooterAsset"
        fonts:
          $ref: "#/components/schemas/ThemeFontsAsset"
        javascript:
          description: An absolute URL to the theme's JavaScript file.
          type: string
        scripts:
          $ref: "#/components/schemas/ThemeScriptsAsset"
        styles:
          description: An absolute URL to the theme's stylesheet.
          type: string
        variables:
          $ref: "#/components/schemas/ThemeVariablesAsset"
        logo:
          $ref: "#/components/schemas/ThemeLogoAsset"
        mobileLogo:
          $ref: "#/components/schemas/ThemeMobileLogoAsset"
      type: object
    ThemeAssetNotFound:
      properties:
        description:
          description: Verbose description of the error.
          nullable: true
          type: string
        message:
          description: Short description of the error.
          type: string
        status:
          description: Status code of the error response.
          type: integer
      required:
        - description
        - message
        - status
      type: object
    ThemeFont:
      description: An external font resource.
      properties:
        fallbacks:
          type: string
          nullable: true
        name:
          type: string
        type:
          enum:
            - url
          type: string
        url:
          type: string
      required:
        - fallbacks
        - name
        - type
        - url
      type: object
    ThemeFontsAsset:
      description: A collection of external font resources.
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ThemeFont"
            type: object
      required:
        - data
      type: object
    ThemeFooterAsset:
      description: Custom footer HTML.
      properties:
        data:
          type: string
        type:
          type: string
          enum:
            - html
      required:
        - data
        - type
      type: object
    ThemeHeaderAsset:
      description: Custom header HTML.
      properties:
        data:
          type: string
        type:
          type: string
          enum:
            - html
      required:
        - data
        - type
      type: object
    ThemeScript:
      properties:
        url:
          type: string
      required:
        - url
      type: object
    ThemeScriptsAsset:
      description: External script files to be included.
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ThemeScript"
        type:
          type: string
          enum:
            - data
      required:
        - data
        - type
      type: object
    ThemeVariablesAsset:
      description: A collection of variables intended to be used by theme.
      properties:
        data:
          type: object
        type:
          type: string
          enum:
            - json
      required:
        - data
        - type
      type: object
    ThemeLogoAsset:
      description: Site logo to be displayed in the theme.
      properties:
        url:
          type: string
        type:
          type: string
          enum:
            - image
      required:
        - url
        - type
      type: object
    ThemeMobileLogoAsset:
      description: Site logo to be displayed in the theme when viewed on a mobile device.
      properties:
        url:
          type: string
        type:
          type: string
          enum:
            - image
      required:
        - url
        - type
      type: object
