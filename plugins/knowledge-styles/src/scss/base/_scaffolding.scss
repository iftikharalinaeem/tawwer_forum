body,
html
{
  @include bodyFontStyle();
  font-size: $global-medium_fontSize;
  line-height: $global-base_lineHeight;
  color: $global-color_fg;
  background-color: $global-body_bg;
  width: 100%;
}

*,
*::before,
*::after
{
  box-sizing: border-box;
}

button {
  appearance: none;
  position: relative;
  border: 0;
  background: none;
  cursor: pointer;
  color: $global-color-fg;
  font: inherit;
  padding: {
    top: $global-button_paddingTop;
    bottom: $global-button_paddingBottom;
    left: $global-button_paddingSide;
    right: $global-button_paddingSide;
  }
}

svg {
  display: block;
}

// Disabled Inputs
option,
select,
textarea,
button,
input
{
  &.isDisabled,
  &[disabled]
  {
    @include disabledInput();
  }
}

select {
  width: 100%;
  max-width: 100%;
}

p {
  @include longWordEllipsis;
  display: block;

  margin: {
    top: 0;
    bottom: 1em;
  }

  &:last-of-type {
    margin: {
      bottom: 0;
    }
  }
}

table {
  border-collapse: collapse;
}

img {
  height: auto;
}

caption {
  @include sr-only;
}

mark {
  background-color: mix($global-color-primary, $global-color-bg, 22%);
  color: $global-color-fg;
}


a {
  @include allLinkStates {
    text-decoration: none;
  }

  color: $link_default-color;

  &:not(.isDisabled):not([disabled]):hover {
    color: $link_default_hover-color;
  }

  &:not(.isDisabled):not([disabled]):focus {
    color: $link_default_focus-color;
  }

  &.isActive {
    pointer-events: none;
  }

  &[aria-current] {
    pointer-events: none;
    cursor: default;
  }
}

b,
strong
{
  font-weight: $global-bold_fontWeight;
}

s,
strike
{
  text-decoration: line-through;
}

i,
em
{
  font-style: italic;
}

textarea {
  display: block;
  margin: 0;
  min-height: $global-textArea_minHeight;
  width: 100%;
  resize: vertical;
  border-color: $formElement_borderColor;
  padding: $global-textArea_padding;
}

ul,
ol
{
  list-style: none;
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
  margin: 0;
}

address {
  word-break: break-word;
}
