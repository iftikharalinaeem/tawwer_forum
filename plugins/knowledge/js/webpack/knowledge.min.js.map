{"version":3,"sources":["webpack://vanillaknowledge/./applications/dashboard/src/scripts/application.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/state/reducerRegistry.ts","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/pages/article/articlePageActions.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/state/utility.ts","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/pages/article/articlePageReducer.ts","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/rootReducer.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/state/getStore.ts","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/@types/api/article.ts","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/KnowledgeRoutes.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/KnowledgeApp.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/entries/knowledge.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/apiv2.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/utility.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/@types/api/general.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/@types/api/authenticate.ts","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/components/DeviceChecker.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/embeds.tsx","webpack://vanillaknowledge/./build/entries/public-path.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/getty.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/dom.ts","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/contexts/DeviceContext.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/BaseEmbed.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/codepen.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/giphy.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/image.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/imgur.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/instagram.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/link.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/soundcloud.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/twitter.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/video.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/spoilers.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/CollapsableContent.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/quote.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/index.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/emoji.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/@types/api/index.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/gdn.ts"],"names":["__webpack_require__","getMeta","key","defaultValue","_dashboard_gdn__WEBPACK_IMPORTED_MODULE_2__","meta","parts","split","haystack","parts_1","__values","parts_1_1","next","done","part","value","hasOwnProperty","t","str","defaultTranslation","substr","undefined","translations","formatUrl","path","indexOf","assetUrl","_components","_mountComponents","parent","querySelectorAll","forEach","node","name","getAttribute","Component","toLowerCase","getComponent","react_dom__WEBPACK_IMPORTED_MODULE_1___default","a","render","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","Object","_dashboard_utility__WEBPACK_IMPORTED_MODULE_3__","_readyHandlers","onReady","callback","push","_executeReady","Promise","resolve","handlerPromises","map","handler","exec","all","then","document","readyState","addEventListener","onContent","makeProfileUrl","username","encodeURIComponent","haveGot","wasReadyCalled","reducers","registerReducer","reducer","utility","getReducers","__assign","application","GET_ARTICLE_REQUEST","GET_ARTICLE_SUCCESS","GET_ARTICLE_ERROR","getArticleActions","requestType","successType","errorType","dummyResponseType","dummyMetaType","request","type","createApiRequestAction","success","response","payload","createApiSuccessAction","error","createApiErrorAction","generateApiActionCreators","initialState","status","api","PENDING","getStore_store","Format","rootReducer","redux","articlePage","state","action","articlePageReducer_assign","LOADING","SUCCESS","data","article","ERROR","getStore_initialState","initialActions","window","__ACTIONS__","middleware","es","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","apply","__spread","getStore","dispatch","Loading","_a","pastDelay","retry","react_default","onClick","ArticlePage","lib_default","loading","loader","e","bind","HomePage","KnowledgeRoutes","BrowserRouter","Fragment","Route","exact","component","_super","KnowledgeApp","props","_this","call","this","deviceChecker","createRef","doUpdate","__extends","prototype","forceUpdate","store","react_redux_es","DeviceChecker","ref","DeviceContext","Provider","current","device","DESKTOP","user_content","app","querySelector","react_dom_default","scripts_KnowledgeApp","locale","body","format","RICH","articleCategoryID","seoName","seoDescription","slug","sort","articleID","insertUserID","insertUser","userID","photoUrl","dateLastActive","updateUserID","dateInserted","dateUpdated","score","countViews","url","bodyRendered","dummyArticleContent","headers","createDummyArticleData","axios__WEBPACK_IMPORTED_MODULE_2___default","create","baseURL","_dashboard_application__WEBPACK_IMPORTED_MODULE_0__","common","X-Requested-With","transformResponse","defaults","responseData","errors","length","_dashboard_utility__WEBPACK_IMPORTED_MODULE_1__","paramsSerializer","params","qs__WEBPACK_IMPORTED_MODULE_3___default","stringify","indices","d","__webpack_exports__","sanitizeUrl","_debug","debug","newValue","log","_i","arguments","console","logError","hashString","reduce","prevHash","currVal","charCodeAt","simplifyFraction","numerator","denominator","findGCD","b","gcd","shorthand","IMAGE_REGEX","isFileImage","file","test","indexArrayByKey","array","object","array_1","array_1_1","item","SAFE_PROTOCOL_REGEX","match","LoadStatus","AuthenticationStep","Devices","lodash_debounce__WEBPACK_IMPORTED_MODULE_1__","lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default","n","react__WEBPACK_IMPORTED_MODULE_0__","className","defineProperty","offsetWidth","MOBILE","TABLET","Error","componentDidMount","requestAnimationFrame","leading","embedRenderers","embedComponents","registerEmbedRenderer","renderer","registerEmbedComponent","p","_dashboard_application__WEBPACK_IMPORTED_MODULE_2__","initGettyEmbeds","_dashboard_embeds__WEBPACK_IMPORTED_MODULE_0__","renderGetty","convertGettyEmbeds","elements","contentElement","content","attributes","post","newLink","classList","add","setAttribute","id","style","width","appendChild","setImmediate","loadGettyImages","gettyPosts","gettyPosts_1","gettyPosts_1_1","sig","height","Number","items","capt","tld","i360","_b","sent","remove","fallbackCallback","c","gie","q","widgets","load","w","h","caption","isCaptioned","is360","_dashboard_dom__WEBPACK_IMPORTED_MODULE_1__","delegatedEventListeners","delegateEvent","eventName","filterSelector","scopeSelector","scope","functionKey","toString","HTMLElement","eventHash","_dashboard_utility__WEBPACK_IMPORTED_MODULE_0__","keys","includes","wrappedCallback","event","target","closest","dataMap","WeakMap","setData","element","initialValue","has","get","set","getData","attributeString","hasAttribute","testChar","emojiSupportedCache","emojiOptions","size","convertToSafeEmojiCharacters","stringOrNode","canvas","getContext","offset","devicePixelRatio","ctx","fillStyle","textBaseline","font","fillText","getImageData","isEmojiSupported","twemoji__WEBPACK_IMPORTED_MODULE_1___default","parse","loadEventCallbacks","rejectionCache","Map","ensureScript","scriptUrl","reject","existingScript","callbacks","head","getElementsByTagName","script_1","src","onerror","timeout_1","setTimeout","onload","clearTimeout","delete","getElementHeight","previousBottomMargin","getBoundingClientRect","getComputedStyle","marginTop","marginBottom","topHeight","parseInt","Math","max","bottomHeight","bottomMargin","_knowledge_components_DeviceChecker__WEBPACK_IMPORTED_MODULE_1__","withDevice","WrappedComponent","displayName","ComponentWithDevice","Consumer","context","BaseEmbed","onRenderComplete","codepen_CodePenEmbed","CodePenEmbed","codepen_extends","scrolling","embeds_BaseEmbed","giphy_GiphyEmbed","GiphyEmbed","giphy_extends","postID","ratioStyle","maxWidth","paddingBottom","image_ImageEmbed","ImageEmbed","image_extends","sanitizedUrl","href","rel","alt","imgur_ImgurEmbed","ImgurEmbed","imgur_extends","dataID","isAlbum","data-id","convertImgurEmbeds","componentDidUpdate","images","Array","from","dom","imgurEmbed","createIframe","imagesLength","i","tasks","instagram_InstagramEmbed","InstagramEmbed","instagram_extends","permaLink","versionNumber","data-instgrmPermalink","data-instgrmVersion","data-instgrmCaptioned","convertInstagramEmbeds","instgrm","Embeds","process","link_LinkEmbed","LinkEmbed","link_extends","title","source","linkImage","aria-hidden","dateTime","timestamp","humanTime","truncateEmbedLinks","container","el","untruncatedText","innerHTML","excerpt","maxHeight","shave_es","truncateTextBasedOnMaxHeight","soundcloud_SoundcloudEmbed","SoundcloudEmbed","soundcloud_extends","visual","showArtwork","embedUrl","frameBorder","renderTweet","twttr","statusID","contains","options","conversation","createTweet","convertTwitterEmbeds","tweets","promises","root","video_VideoEmbed","VideoEmbed","clickHandler","setState","isPlaying","video_extends","ratioClass","paddingTop","thumbnail","data-url","aria-label","role","PlayIcon","VideoIframe","allow","allowFullScreen","fill","strokeWidth","xmlns","viewBox","points","handlePlayVideo","dataset","handleToggleSpoiler","spoilerContainer","toggle","CollapsableUserContent","selfRef","CollapsableContent_extends","overflow","dangerouslySetInnerHTML","calcMaxHeight","debounce_default","prevProps","__html","isCollapsed","getHeightInfo","self","needsCollapser","childElementCount","finalMaxHeight","lastBottomMargin","children","_c","child","preferredMaxHeight","_d","scrollHeight","setNeedsCollapser","PureComponent","mountQuoteEmbeds","embeds","embed","quoteData","JSON","quote_QuoteEmbed","inEditor","removeAttribute","embeds_1","quote_values","embeds_1_1","ChevronUpIcon","stroke-linecap","fill-rule","transform","ChevronDownIcon","QuoteEmbed","renderedBody","needsCollapseButton","toggleCollapseState","preventDefault","quote_extends","uniqueId_default","bodyClasses","classnames_default","userUrl","tabIndex","titleTime","aria-pressed","CollapsableContent","bodyRaw","apiv2","quote","Date","toLocaleString","year","month","day","weekday","hour","minute","initAllUserContent","scripts_embeds","getty","convertAllUserContent","gdn","permissions"],"mappings":"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","file":"/plugins/knowledge/js/webpack/knowledge.min.js?7aa23a01b9008a316647","sourcesContent":["/**\n * Application functions for interop between Components in different packages.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React, { ComponentClass } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RouteProps } from \"react-router-dom\";\nimport gdn from \"@dashboard/gdn\";\nimport { PromiseOrNormalCallback, logError } from \"@dashboard/utility\";\nimport isUrl from \"validator/lib/isURL\";\n\n/**\n * Get a piece of metadata passed from the server.\n *\n * @param key - The key to lookup.\n * @param defaultValue - A fallback value in case the key cannot be found.\n *\n * @returns Returns a meta value or the default value.\n */\nexport function getMeta(key: string, defaultValue?: any) {\n    if (!gdn.meta) {\n        return defaultValue;\n    }\n\n    const parts = key.split(\".\");\n    let haystack = gdn.meta;\n\n    for (const part of parts) {\n        if (!haystack.hasOwnProperty(part)) {\n            return defaultValue;\n        }\n        haystack = haystack[part];\n    }\n    return haystack;\n}\n\n/**\n * Set a piece of metadata. This will override what was passed from the server.\n *\n * @param key - The key to store under.\n * @param value - The value to set.\n */\nexport function setMeta(key: string, value: any) {\n    const parts = key.split(\".\");\n    const last = parts.pop();\n\n    if (!last) {\n        throw new Error(`Unable to set meta value ${key}. ${last} is not a valid object key.`);\n    }\n\n    let haystack = gdn.meta;\n\n    for (const part of parts) {\n        if (haystack[part] === null || typeof haystack[part] !== \"object\") {\n            haystack[part] = {};\n        }\n        haystack = haystack[part];\n    }\n    haystack[last] = value;\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    if (gdn.translations[str] !== undefined) {\n        return gdn.translations[str];\n    }\n\n    return defaultTranslation !== undefined ? defaultTranslation : str;\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n\n/**\n * Determine if a string is an allowed URL.\n *\n * In the future this may be extended to check if we want to whitelist/blacklist various URLs.\n *\n * @param input - The string to check.\n */\nexport function isAllowedUrl(input: string): boolean {\n    // Options https://github.com/chriso/validator.js#validators\n    const options = {\n        protocols: [\"http\", \"https\"],\n        require_tld: true,\n        require_protocol: true,\n        require_host: true,\n        require_valid_protocol: true,\n        allow_trailing_dot: false,\n        allow_protocol_relative_urls: false,\n    };\n    return isUrl(input, options);\n}\n\n/**\n * Format a URL in the format passed from the controller.\n *\n * @param path - The path to format.\n *\n * @returns Returns a URL that can be used in the APP.\n */\nexport function formatUrl(path: string): string {\n    if (path.indexOf(\"//\") >= 0) {\n        return path;\n    } // this is an absolute path.\n\n    // The context paths that come down are expect to have no / at the end of them.\n    // Normally a domain like so: https://someforum.com\n    // When we don't have that we want to fallback to \"\" so that our path with a / can get passed.\n    const urlFormat = getMeta(\"context.basePath\", \"\");\n    return urlFormat + path;\n}\n\n/**\n * Create the URL of an asset of the site.\n *\n * @param path - The path to format.\n *\n * @returns Returns a URL that can be used for a static asset.\n */\nexport function assetUrl(path: string): string {\n    if (path.indexOf(\"//\") >= 0) {\n        return path;\n    } // this is an absolute path.\n\n    // The context paths that come down are expect to have no / at the end of them.\n    // Normally a domain like so: https://someforum.com\n    // When we don't have that we want to fallback to \"\" so that our path with a / can get passed.\n    const urlFormat = getMeta(\"context.assetPath\", \"\");\n    return urlFormat + path;\n}\n\n/**\n * @type {Object} The currently registered Components.\n * @private\n */\nconst _components = {};\n\n/**\n * Register a component in the Components registry.\n *\n * @param name The name of the component.\n * @param component The component to register.\n */\nexport function addComponent(name: string, component: ComponentClass) {\n    _components[name.toLowerCase()] = component;\n}\n\n/**\n * Test to see if a component has been registered.\n *\n * @param name The name of the component to test.\n * @returns Returns **true** if the component has been registered or **false** otherwise.\n */\nexport function componentExists(name: string): boolean {\n    return _components[name.toLowerCase()] !== undefined;\n}\n\n/**\n * Get a component from the component registry.\n *\n * @param name The name of the component.\n * @returns Returns the component or **undefined** if there is no registered component.\n */\nexport function getComponent(name: string): ComponentClass | undefined {\n    return _components[name.toLowerCase()];\n}\n\n/**\n * Mount all declared Components on the dom.\n *\n * The page signifies that an element contains a component with the `data-react=\"<Component>\"` attribute.\n *\n * @param parent - The parent element to search. This element is not included in the search.\n */\nexport function _mountComponents(parent: Element) {\n    const nodes = parent.querySelectorAll(\"[data-react]\").forEach(node => {\n        const name = node.getAttribute(\"data-react\") || \"\";\n        const Component = getComponent(name);\n\n        if (Component) {\n            ReactDOM.render(<Component />, node);\n        } else {\n            logError(\"Could not find component %s.\", name);\n        }\n    });\n}\n\n/**\n * @type {Array} The currently registered routes.\n * @private\n */\nconst _routes: any[] = [];\n\n/**\n * Register one or more routes to the app component.\n *\n * @param routes An array of routes to add.\n */\nexport function addRoutes(routes: Array<React.ReactElement<RouteProps>>) {\n    if (!Array.isArray(routes)) {\n        _routes.push(routes);\n    } else {\n        _routes.push(...routes);\n    }\n}\n\n/**\n * Get all of the currently registered routes.\n *\n * @returns Returns an array of routes.\n */\nexport function getRoutes(): Array<React.ReactElement<RouteProps>> {\n    return _routes;\n}\n\n/**\n * @type {Array}\n * @private\n */\nconst _readyHandlers: PromiseOrNormalCallback[] = [];\n\n/**\n * Register a callback that executes when the document and the core libraries are ready to use.\n *\n * @param callback - The function to call. This can return a Promise but doesn't have to.\n */\nexport function onReady(callback: PromiseOrNormalCallback) {\n    _readyHandlers.push(callback);\n}\n\n/**\n * Execute all of the registered events in order.\n *\n * @returns A Promise when the events have all fired.\n */\nexport function _executeReady(): Promise<any[]> {\n    return new Promise(resolve => {\n        const handlerPromises = _readyHandlers.map(handler => handler());\n        const exec = () => {\n            return Promise.all(handlerPromises).then(resolve);\n        };\n\n        if (document.readyState !== \"loading\") {\n            return exec();\n        } else {\n            document.addEventListener(\"DOMContentLoaded\", exec);\n        }\n    });\n}\n\n/**\n * Execute a callback when a piece of DOM content is ready to be operated on.\n *\n * This is similar to onReady() but also includes content that is added dynamically (ex. AJAX).\n * Note that this function is meant to bridge the non-react parts of the application with react.\n *\n * @param {function} callback - The callback to execute.\n */\nexport function onContent(callback) {\n    document.addEventListener(\"X-DOMContentReady\", callback);\n}\n\n/**\n * Make a URL to a user's profile.\n */\nexport function makeProfileUrl(username: string) {\n    const userPath = `/profile/${encodeURIComponent(username)}`;\n    return formatUrl(userPath);\n}\n","/**\n * A reducer registry so that we can have dynamically loading reducers.\n *\n * @see http://nicolasgallagher.com/redux-modules-and-code-splitting/\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { logError } from \"@dashboard/utility\";\nimport { Reducer, ReducersMapObject } from \"redux\";\nimport { onReady } from \"@dashboard/application\";\n\nlet haveGot = false;\nlet wasReadyCalled = false;\nconst reducers = {};\n\nonReady(() => {\n    wasReadyCalled = true;\n});\n\nexport function registerReducer(name: string, reducer: Reducer) {\n    if (haveGot) {\n        logError(\"Cannot register reducer %s after reducers applied to the store.\", name);\n    } else {\n        reducers[name] = reducer;\n    }\n}\n\nexport function getReducers(): ReducersMapObject<any, any> {\n    haveGot = true;\n\n    if (!wasReadyCalled) {\n        logError(\"getReducers() was called before onReady\");\n    }\n\n    return {\n        ...reducers,\n    };\n}\n\n/**\n * @deprecated\n */\nconst reducerRegistry = {\n    register: registerReducer,\n    getReducers,\n};\n\nexport default reducerRegistry;\n","/**\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk } from \"@dashboard/state/utility\";\nimport { IGetArticleRequestBody, IGetArticleResponseBody } from \"@knowledge/@types/api\";\n\n// Getting an article\nexport const GET_ARTICLE_REQUEST = \"GET_ARTICLE_REQUEST\";\nexport const GET_ARTICLE_SUCCESS = \"GET_ARTICLE_SUCCESS\";\nexport const GET_ARTICLE_ERROR = \"GET_ARTICLE_ERROR\";\n\nexport const getArticleActions = generateApiActionCreators(\n    GET_ARTICLE_REQUEST,\n    GET_ARTICLE_SUCCESS,\n    GET_ARTICLE_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {} as IGetArticleResponseBody,\n    {} as IGetArticleRequestBody,\n);\n\nexport function getArticle(options: IGetArticleRequestBody) {\n    return apiThunk(\"get\", `/articles/${options.id}`, getArticleActions, options);\n}\n\nexport type ActionTypes = ActionsUnion<typeof getArticleActions>;\n","/**\n * State utility functions.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IApiResponse, IApiError } from \"@dashboard/@types/api\";\nimport apiv2 from \"@dashboard/apiv2\";\nimport { AxiosResponse, AxiosError } from \"axios\";\n\n// Utility to pull a group of action types out of an actions object\nexport type ActionsUnion<A extends IActionCreatorsMapObject> = ReturnType<A[keyof A]>;\n\n// Utility to create a generic action action.\n\n/**\n * Utility to create an action with our a without a payload of a given type.\n * The action generated can have its type narrowed in a reducer switch statement if the type T matches.\n *\n * @see ActionsUnion\n *\n * @param type The action type.\n * @param payload The payload data.\n */\nexport function createAction<ActionType extends string>(type: ActionType): IAction<ActionType>;\nexport function createAction<ActionType extends string, Payload>(\n    type: ActionType,\n    payload: Payload,\n): IActionWithPayload<ActionType, Payload>;\nexport function createAction<ActionType extends string, Payload>(type: ActionType, payload?: Payload) {\n    return payload === undefined ? { type } : { type, payload };\n}\n\n/**\n * Create request, response, and error action creators.\n *\n * The dummy types are needed because typescript currently requires all generic types to be specified or all to be inferred. They cannot currently be mixed.\n *\n * @see https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n *\n * @param requestType The string for the request type. This should be a unique constant.\n * @param successType The string for the success type. This should be a unique constant.\n * @param errorType The string for the error type. This should be a unique constant.\n * @param dummyResponseType A placeholder to infer the type of the response. This isn't used for anything other than inferring a type.\n * @param dummyMetaType A placeholder to infer the type of the meta. This isn't used for anything other than inferringa  type.\n *\n * @example\n *\n * ```\n * const GET_THING_REQUEST = \"GET_THING_REQUEST\";\n * const GET_THING_SUCCESS = \"GET_THING_SUCCESS\";\n * const GET_THING_ERROR = \"GET_THING_ERROR\";\n * interface IThing { thing: string }\n * interface IThingOptions { page?: number }\n *\n * generateApiActionCreators(GET_THING_REQUEST, GET_THING_SUCCESS, GET_THING_ERROR, {} as IThing, {} as IThingOptions);\n * ```\n */\nexport function generateApiActionCreators<\n    RequestActionType extends string,\n    SuccessActionType extends string,\n    ErrorActionType extends string,\n    ResponseDataType,\n    Meta = any\n>(\n    requestType: RequestActionType,\n    successType: SuccessActionType,\n    errorType: ErrorActionType,\n    dummyResponseType?: ResponseDataType,\n    dummyMetaType?: Meta,\n): {\n    request: (meta?: Meta) => IApiAction<RequestActionType, Meta>;\n    success: (\n        payload: IApiResponse<ResponseDataType>,\n        meta?: Meta,\n    ) => IApiSuccessAction<SuccessActionType, Meta, ResponseDataType>;\n    error: (error: IApiError, meta?: Meta) => IApiErrorAction<ErrorActionType, Meta>;\n} {\n    return {\n        request: (meta: Meta) => createApiRequestAction(requestType, meta),\n        success: (response: IApiResponse<ResponseDataType>, meta: Meta) =>\n            createApiSuccessAction(successType, meta, response),\n        error: (error: IApiError, meta: Meta) => createApiErrorAction(errorType, meta, error),\n    };\n}\n\ntype GeneratedActionCreators = ReturnType<typeof generateApiActionCreators>;\n\n// Thunk types\ntype RequestType = \"get\" | \"post\" | \"put\" | \"delete\" | \"patch\";\nexport function apiThunk(\n    requestType: RequestType,\n    endpoint: string,\n    actionCreators: GeneratedActionCreators,\n    params: any,\n) {\n    return dispatch => {\n        dispatch(actionCreators.request(params));\n        apiv2[requestType as any](endpoint, params)\n            .then((response: AxiosResponse) => {\n                dispatch(actionCreators.success(response, params));\n            })\n            .catch((axiosError: AxiosError) => {\n                const error = axiosError.response ? axiosError.response.data : (axiosError as any);\n                dispatch(actionCreators.error(error));\n            });\n    };\n}\n\n// Action interfaces\nexport interface IAction<T extends string> {\n    type: T;\n}\n\nexport interface IActionWithPayload<T extends string, P> extends IAction<T> {\n    payload: P;\n}\n\nexport interface IActionCreator<T extends string> {\n    (): IAction<T>;\n}\n\ntype FunctionType = (...args: any[]) => any;\ninterface IActionCreatorsMapObject {\n    [actionCreator: string]: FunctionType;\n}\n\n// API Action interfaces\ninterface IApiAction<ActionType, Meta> {\n    type: ActionType;\n    meta: Meta;\n}\n\ninterface IApiErrorAction<ActionType, Meta> extends IApiAction<ActionType, Meta> {\n    payload: IApiError;\n}\n\ninterface IApiSuccessAction<ActionType, Meta, ResponseDataType> extends IApiAction<ActionType, Meta> {\n    payload: IApiResponse<ResponseDataType>;\n}\n\n/**\n * Create an API request action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n */\nfunction createApiRequestAction<ActionType extends string, Meta>(\n    type: ActionType,\n    meta: Meta,\n): IApiAction<ActionType, Meta> {\n    return {\n        type,\n        meta,\n    };\n}\n\n/**\n * Create an API error action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n * @param error An API error.\n */\nfunction createApiErrorAction<ActionType extends string, Meta>(\n    type: ActionType,\n    meta: Meta,\n    error: IApiError,\n): IApiErrorAction<ActionType, Meta> {\n    return {\n        type,\n        meta,\n        payload: error,\n    };\n}\n\n/**\n * Create an API success action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n * @param payload The shape of the IApiResponse data.\n */\nfunction createApiSuccessAction<ActionType extends string, Meta, ResponseDataType>(\n    type: ActionType,\n    meta: Meta,\n    payload: IApiResponse<ResponseDataType>,\n): IApiSuccessAction<ActionType, Meta, ResponseDataType> {\n    return {\n        type,\n        meta,\n        payload,\n    };\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as actions from \"@knowledge/pages/article/articlePageActions\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\nimport { IArticlePageState } from \"@knowledge/@types/state\";\n\nconst initialState: IArticlePageState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function articlePageReducer(\n    state: IArticlePageState = initialState,\n    action: actions.ActionTypes,\n): IArticlePageState {\n    switch (action.type) {\n        case actions.GET_ARTICLE_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.GET_ARTICLE_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: {\n                    article: action.payload.data,\n                },\n                error: undefined,\n            };\n        case actions.GET_ARTICLE_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { combineReducers } from \"redux\";\nimport articlePageReducer from \"@knowledge/pages/article/articlePageReducer\";\n\nconst knowledgeReducer = combineReducers({\n    articlePage: articlePageReducer,\n});\n\nexport default knowledgeReducer;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { createStore, compose, applyMiddleware, combineReducers, Store } from \"redux\";\nimport { getReducers } from \"@dashboard/state/reducerRegistry\";\nimport thunk from \"redux-thunk\";\nimport { IStoreState } from \"@dashboard/@types/state\";\n\n// There may be an initial state to import.\nconst initialState = {};\nconst initialActions = window.__ACTIONS__ || [];\n\nconst middleware = [thunk];\n\n// Browser may have redux dev tools installed, if so integrate with it.\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\n// Build the store, add devtools extension support if it's available.\nlet store;\n\nexport default function getStore<S extends IStoreState = IStoreState>(): Store<S> {\n    if (store === undefined) {\n        // Get our reducers.\n        const reducer = combineReducers(getReducers());\n        store = createStore(reducer, initialState, enhancer);\n\n        // Dispatch initial actions returned from the server.\n        initialActions.forEach(store.dispatch);\n    }\n\n    return store;\n}\n","import { IUserFragment } from \"@dashboard/@types/api\";\n\n/**\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nexport enum Format {\n    TEXT = \"text\",\n    TEXTEX = \"textex\",\n    MARKDOWN = \"markdown\",\n    WYSIWYG = \"wysiwyg\",\n    HTML = \"html\",\n    BBCODE = \"bbcode\",\n    RICH = \"rich\",\n}\n\ninterface IArticleRequiredData {\n    name: string; // The title of the article\n    locale: string; // The locale the article was written in\n    body: string; // The content of the article.\n    format: Format; // The format of the article.\n    articleCategoryID: number; //The category the article belongs in.\n}\n\ninterface IArticleDefaultedData {\n    seoName: string; // Displayed in the tag of the page. If empty will be just the name of the article.\n    seoDescription: string; // Displayed in the of the page. If empty will be calculated from the article body.\n    slug: string; // The path to the article from an import used to support redirects. This is not editable within the UI, but should be accessable via API in case we decide to make it an advanced option.\n    sort: number; // The manual sort order of the article.\n}\n\ninterface IArticleServerManagedData {\n    articleID: number;\n    insertUserID: number;\n    updateUserID: number;\n    insertUser?: IUserFragment;\n    updateUser?: IUserFragment;\n    dateInserted: string;\n    dateUpdated: string;\n    score: number; // The article score based on helpful reactions.\n    countViews: number; // The number of times the article has been viewed.\n    url: string; // Full URL to the resource\n    bodyRendered: string;\n}\n\ntype ArticleExpandFields = \"user\";\n\n// The record\nexport interface IArticle extends IArticleRequiredData, IArticleDefaultedData, IArticleServerManagedData {}\n\n// Request/Response interfaces\nexport interface IPostArticleRequestBody extends IArticleRequiredData, Partial<IArticleDefaultedData> {}\n\nexport interface IPostArticleResponseBody extends IArticle {}\n\nexport interface IGetArticleRequestBody {\n    id: number;\n    expand?: ArticleExpandFields[];\n}\n\nexport interface IGetArticleResponseBody extends IArticle {}\n\nexport interface IArticleFragment {\n    name: string; //The title of the article\n    updateUser: IUserFragment;\n    url: string; // Full URL to the resource\n    slug: string; // The path to the article from an import used to support redirects. This is not editable within the UI, but should be accessable via API in case we decide to make it an advanced option.\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Loadable from \"react-loadable\";\nimport { t } from \"@dashboard/application\";\n\nfunction Loading({ error, pastDelay, retry }) {\n    if (error) {\n        return (\n            <div>\n                {t(\"Error! \")}\n                <button onClick={retry}>{t(\"Retry\")}</button>\n            </div>\n        );\n    } else if (pastDelay) {\n        return <div>{t(\"Loading...\")}</div>;\n    } else {\n        return null;\n    }\n}\n\nconst ArticlePage = Loadable({\n    loading: Loading,\n    loader: () =>\n        import(/* webpackChunkName: \"plugins/knowledge/js/webpack/pages/kb/article\" */ \"@knowledge/pages/article/ArticlePage\"),\n});\n\nconst HomePage = Loadable({\n    loading: Loading,\n    loader: () =>\n        import(/* webpackChunkName: \"plugins/knowledge/js/webpack/pages/kb/index\" */ \"@knowledge/pages/home/HomePage\"),\n});\n\nexport default function KnowledgeRoutes() {\n    return (\n        <BrowserRouter>\n            <React.Fragment>\n                <Route exact path=\"/kb\" component={HomePage} />\n                <Route path=\"/kb/articles/:id\" component={ArticlePage} />\n            </React.Fragment>\n        </BrowserRouter>\n    );\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport getStore from \"@dashboard/state/getStore\";\nimport KnowledgeRoutes from \"@knowledge/KnowledgeRoutes\";\nimport DeviceContext from \"@knowledge/contexts/DeviceContext\";\nimport DeviceChecker, { Devices } from \"@knowledge/components/DeviceChecker\";\n\nexport default class KnowledgeApp extends React.Component {\n    public deviceChecker: React.RefObject<DeviceChecker> = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.doUpdate = this.doUpdate.bind(this);\n    }\n\n    /**\n     * Function to force rerendering\n     */\n    public doUpdate() {\n        this.forceUpdate();\n    }\n\n    /**\n     * Device checker detects device and calls a force update if needed to update the current device.\n     */\n    public render() {\n        const store = getStore();\n        return (\n            <Provider store={store}>\n                <React.Fragment>\n                    <DeviceChecker ref={this.deviceChecker} doUpdate={this.doUpdate} />\n                    <DeviceContext.Provider\n                        value={this.deviceChecker.current ? this.deviceChecker.current.device : Devices.DESKTOP}\n                    >\n                        <KnowledgeRoutes />\n                    </DeviceContext.Provider>\n                </React.Fragment>\n            </Provider>\n        );\n    }\n}\n","/**\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\n// Import stylesheets\nimport \"../../scss/knowledge-styles.scss\";\n\n// Vendors\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Our own libraries\nimport { onReady } from \"@dashboard/application\";\nimport { registerReducer } from \"@dashboard/state/reducerRegistry\";\nimport { initAllUserContent } from \"@dashboard/app/user-content\";\n\n// Knowledge Modules\nimport rootReducer from \"@knowledge/rootReducer\";\nimport getStore from \"@dashboard/state/getStore\";\nimport { IGetArticleResponseBody, Format } from \"@knowledge/@types/api\";\nimport { getArticleActions } from \"@knowledge/pages/article/articlePageActions\";\nimport KnowledgeApp from \"@knowledge/KnowledgeApp\";\n\ninitAllUserContent();\nonReady(() => {\n    registerReducer(\"knowledge\", rootReducer);\n    const app = document.querySelector(\"#app\");\n    ReactDOM.render(<KnowledgeApp />, app);\n    // TODO: remove this once we have the API endpoints setup.\n    createDummyArticleData();\n});\n\n/**\n * Create dummy article data and insert it into the redux store.\n */\nfunction createDummyArticleData() {\n    const article: IGetArticleResponseBody = {\n        name: \"Test Dummy article\",\n        locale: \"en\",\n        body: \"[{}]\", // This shouldn't be needed for the view page.\n        format: Format.RICH,\n        articleCategoryID: 0,\n        seoName: \"Knowledge Base Site Name - Test Dummy Article\",\n        seoDescription:\n            \"You will find a common format across all the hosting directories. We have information structured on three bits – Shared Unix or Shared Linux Packages, Shared Windows Packages, Reseller Packages.\",\n        slug: \"test-dummy-article\",\n        sort: 0,\n        articleID: 0,\n        insertUserID: 0,\n        insertUser: {\n            userID: 0,\n            name: \"John Doe\",\n            photoUrl: \"https://us.v-cdn.net/5022541/uploads/userpics/314/p0CECMSM6JR3L.jpeg\",\n            dateLastActive: \"2018-08-20T13:08:49+00:00\",\n        },\n        updateUserID: 0,\n        dateInserted: \"2018-08-20T13:08:49+00:00\",\n        dateUpdated: \"2018-08-20T13:08:49+00:00\",\n        score: 17,\n        countViews: 10,\n        url: \"https://testsite.com/knowledge/articles/test-dummy-article-0\",\n        bodyRendered: dummyArticleContent,\n    };\n\n    const store = getStore();\n    store.dispatch(getArticleActions.success({ data: article, status: 200, headers: {} }, undefined));\n}\n\nconst dummyArticleContent = `\n    <h3 class=\"_pageSubTitle\">Overview</h3>\n\n    <p>You will find a common format across all the hosting directories. We have information structured on three bits – Shared Unix or Shared Linux Packages, Shared Windows Packages, Reseller Packages. Each Hosting Directory <s>Strikethrough</s> has a list of plans. Each plan is accompanies by a short synopsis of the plan details. Hence, expect to find the price, the web <strong>Bold</strong>, Data This is a <a href=\"#\">link</a> and the <em>Italic</em> platform.</p>\n\n    <ul>\n        <li>Unordered list example one</li>\n        <li>Unordered list example two</li>\n        <li>\n            Unordered list example two\n            <ul>\n                <li>Unordered list example two</li>\n                <li>Unordered list example two</li>\n            </ul>\n        </li>\n        <li>Unordered list example three</li>\n        <li>Unordered list example four</li>\n        <li>Unordered list example five</li>\n    </ul>\n\n    <p>At one shot, you would be able to sort these plans by any of the following factors – Price, rating, Web Space, Data Transfer. With such a high range of flexibility in filtering of data, you could almost be assured of making the right choice as long as your hosting company is considered.</p>\n\n    <h3 class=\"pageSubTitle\">Changing Themes</h3>\n\n    <p>We are one of the ones that provide web talk forums for you to discuss with other members of the forums. Basically, through these forums you could ask your questions about a particular plan and in essence also gather information on the best hosting plan for their needs. In fact, these forums would give you a good opportunity for you to get your questions answered.</p>\n\n    <ol>\n        <li>Ordered list example one</li>\n        <li>Ordered list example two</li>\n        <li>\n            Ordered list example two\n            <ol>\n                <li>Ordered list example two</li>\n                <li>Ordered list example two</li>\n            </ol>\n        </li>\n        <li>Ordered list example three</li>\n        <li>Ordered list example four</li>\n        <li>Ordered list example five</li>\n    </ol>\n\n    <p>Unlike some of the other web hosting reviews, this website offers you reviews for free. You just do need to pay us a dime for all the information you get. It does not matter if you search Shared Unix, Shared Linux Packages or Shared Windows Packages. Our idea is to provide you quality information. We leave the decision up to you once we think we have done a good job of the deal.</p>\n`;\n","/**\n * Entrypoint for the APIv2 calls. Prepulates an axios instance with some config settings.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { formatUrl, t } from \"@dashboard/application\";\nimport { isFileImage, indexArrayByKey } from \"@dashboard/utility\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { IEmbedData } from \"@dashboard/embeds\";\nimport { IFieldError, LoadStatus, ILoadable } from \"@dashboard/@types/api\";\n\nfunction fieldErrorTransformer(responseData) {\n    if (responseData.status >= 400 && responseData.errors && responseData.errors.length > 0) {\n        responseData.errors = indexArrayByKey(responseData.errors, \"field\");\n    }\n\n    return responseData;\n}\n\nconst api = axios.create({\n    baseURL: formatUrl(\"/api/v2/\"),\n    headers: {\n        common: {\n            \"X-Requested-With\": \"vanilla\",\n        },\n    },\n    transformResponse: [...axios.defaults.transformResponse, fieldErrorTransformer],\n    paramsSerializer: params => qs.stringify(params, { indices: false }),\n});\n\nexport default api;\n\n/**\n * Upload an image using Vanilla's API v2.\n *\n * @param file - The file to upload.\n *\n * @throws If the file given is not an image. You must check yourself first.\n */\nexport async function uploadImage(image: File): Promise<IEmbedData> {\n    if (!isFileImage(image)) {\n        throw new Error(\n            `Unable to upload an image of type ${image.type}. Supported formats included .gif, .jpg and .png`,\n        );\n    }\n\n    const data = new FormData();\n    data.append(\"file\", image, image.name);\n    data.append(\"type\", \"image\");\n\n    const result = await api.post(\"/media\", data);\n    result.data.type = \"image\";\n    return result.data;\n}\n\n/**\n * Extract a field specific error from an ILoadable if applicable.\n *\n * @param loadable - The loadable to extract from.\n * @param field - The field to extract.\n *\n * @returns an array of IFieldErrors if found or undefined.\n */\nexport function getFieldErrors(loadable: ILoadable<any>, field: string): IFieldError[] | undefined {\n    if (loadable.status === LoadStatus.ERROR || loadable.status === LoadStatus.LOADING) {\n        if (loadable.error && loadable.error.errors && loadable.error.errors[field]) {\n            return loadable.error.errors[field];\n        }\n    }\n}\n\n/**\n * Extract a global error message out of an ILoadable if applicable.\n *\n * @param loadable - The loadable to extract from.\n * @param validFields - Field to check for overriding fields errors from. A global error only shows if there are no valid field errors.\n *\n * @returns A global error message or an undefined.\n */\nexport function getGlobalErrorMessage(loadable: ILoadable<any>, validFields: string[]): string | undefined {\n    if (loadable.status === LoadStatus.ERROR || loadable.status === LoadStatus.LOADING) {\n        for (const field of validFields) {\n            if (getFieldErrors(loadable, field)) {\n                return;\n            }\n        }\n\n        if (loadable.error) {\n            return loadable.error.message || t(\"An error has occurred, please try again.\");\n        }\n    }\n}\n","/**\n * General utility functions.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\n/**\n * @type {boolean} The current debug setting.\n * @private\n */\nlet _debug = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        _debug = newValue;\n    }\n\n    return _debug;\n}\n\ntype NormalCallback = (...args: any[]) => any;\ntype PromiseCallback = (...args: any[]) => Promise<any>;\n\nexport type PromiseOrNormalCallback = NormalCallback | PromiseCallback;\n\n/**\n * Resolve an array of functions that return promises sequentially.\n *\n * @param promiseFunctions - The functions to execute.\n *\n * @returns An array of all results in sequential order.\n *\n * @example\n * const urls = ['/url1', '/url2', '/url3']\n * const functions = urls.map(url => () => fetch(url))\n * resolvePromisesSequentially(funcs)\n *   .then(console.log)\n *   .catch(console.error)\n */\nexport function resolvePromisesSequentially(promiseFunctions: PromiseOrNormalCallback[]): Promise<any[]> {\n    if (!Array.isArray(promiseFunctions)) {\n        throw new Error(\"First argument needs to be an array of Promises\");\n    }\n\n    return new Promise((resolve, reject) => {\n        let count = 0;\n        let results = [];\n\n        function iterationFunction(previousPromise, currentPromise) {\n            return previousPromise\n                .then(result => {\n                    if (count++ !== 0) {\n                        results = results.concat(result);\n                    }\n\n                    return currentPromise(result, results, count);\n                })\n                .catch(err => reject(err));\n        }\n\n        promiseFunctions = promiseFunctions.concat(() => Promise.resolve());\n\n        promiseFunctions.reduce(iterationFunction, Promise.resolve(false)).then(() => {\n            resolve(results);\n        });\n    });\n}\n\n/**\n * Log something to console.\n *\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function log(...value: any[]) {\n    if (_debug) {\n        // tslint:disable-next-line:no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    // tslint:disable-next-line:no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    // tslint:disable-next-line:no-console\n    console.warn(...value);\n}\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = toSplit.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedSplitTerm = splitWith.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map(piece => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IClass {\n    new (): any;\n}\n\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function simplifyFraction(numerator: number, denominator: number) {\n    const findGCD = (a, b) => {\n        return b ? findGCD(b, a % b) : a;\n    };\n    const gcd = findGCD(numerator, denominator);\n\n    numerator = numerator / gcd;\n    denominator = denominator / gcd;\n\n    return {\n        numerator,\n        denominator,\n        shorthand: denominator + \":\" + numerator,\n    };\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\n/** This should mirror extensions allowed in Vanilla\\ImageResizer.php */\nconst IMAGE_REGEX = /^image\\/(gif|jpe?g|png)/i;\n\n/**\n * A filter for use with [].filter\n *\n * Matches only image image type files.\n * @private\n *\n * @param file - A File object.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/File\n *\n * @returns Whether or not the file is an acceptable image\n */\nexport function isFileImage(file: File): boolean {\n    if (IMAGE_REGEX.test(file.type)) {\n        return true;\n    }\n\n    log(\"Filtered out non-image file: \", file.name);\n    return false;\n}\n\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nexport const enum LoadStatus {\n    PENDING = \"PENDING\",\n    LOADING = \"LOADING\",\n    SUCCESS = \"SUCCESS\",\n    ERROR = \"ERROR\",\n}\n\ninterface IPendingValue {\n    status: LoadStatus.PENDING;\n}\n\ninterface ILoadingValue<T> {\n    status: LoadStatus.LOADING;\n    data?: T;\n    error?: IApiError;\n}\n\ninterface ISuccessValue<T> {\n    status: LoadStatus.SUCCESS;\n    data: T;\n    error?: undefined;\n}\n\ninterface IErrorValue<T> {\n    status: LoadStatus.ERROR;\n    error: IApiError;\n    data?: T;\n}\n\nexport type ILoadable<T> = IPendingValue | ILoadingValue<T> | ISuccessValue<T> | IErrorValue<T>;\n\nexport interface IApiResponse<DataType = any> {\n    data: DataType;\n    status: number;\n    headers: any;\n}\n\nexport interface IFieldError {\n    message: string; // translated message\n    code: string; // translation code\n    field: string;\n    status?: number; // HTTP status\n}\n\nexport interface IApiError {\n    message: string;\n    status: number;\n    errors?: {\n        [key: string]: IFieldError[];\n    };\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IUserFragment } from \"@dashboard/@types/api\";\n\nexport interface IUserAuthenticator {\n    authenticatorID: string;\n    type: string;\n    isUnique: boolean;\n    name: string;\n    ui: {\n        url: string;\n        buttonName: string;\n        photoUrl: string | null;\n        backgroundColor: string | null;\n        foregroundColor: string | null;\n    };\n    isUserLinked?: boolean;\n    sso?: any;\n}\n\nexport const enum AuthenticationStep {\n    AUTHENTICATED = \"authenticated\",\n    LINK_USER = \"linkUser\",\n}\n\nexport interface IAuthenticateResponse {\n    authenticationStep: AuthenticationStep;\n    user?: IUserFragment;\n    authSessionID?: string;\n    targetUrl?: string;\n}\n\nexport interface IAuthenticatePasswordParams {\n    username: string;\n    password: string;\n    persist?: boolean;\n}\n\nexport interface IAuthenticatePasswordResponseData extends IUserFragment {}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport debounce from \"lodash/debounce\";\n\nexport enum Devices {\n    MOBILE = \"mobile\",\n    TABLET = \"tablet\",\n    DESKTOP = \"desktop\",\n}\n\nexport interface IDeviceProps {\n    device: Devices;\n}\n\ninterface IDeviceCheckerProps {\n    doUpdate: () => void;\n}\n/**\n * Component returns device, based on media queries set in CSS to avoid duplicate break points.\n * Added DeviceContext in DeviceContext.tsx to pass data down to components\n * Force rerender when needed by calling doUpdate.\n */\n\nexport default class DeviceChecker extends React.Component<IDeviceCheckerProps> {\n    public deviceChecker: React.RefObject<HTMLDivElement> = React.createRef();\n\n    public render() {\n        return <div ref={this.deviceChecker} className=\"deviceChecker\" />;\n    }\n\n    /**\n     * Query div in page to get device based on media query from CSS\n     */\n    public get device() {\n        if (this.deviceChecker.current) {\n            let device = Devices.DESKTOP;\n            switch (`${this.deviceChecker.current.offsetWidth}`) {\n                case \"1\":\n                    device = Devices.MOBILE;\n                    break;\n                case \"2\":\n                    device = Devices.TABLET;\n                    break;\n            }\n            return device;\n        } else {\n            throw new Error(\"deviceChecker does not exist\");\n        }\n    }\n\n    public componentDidMount() {\n        window.addEventListener(\"resize\", e => {\n            debounce(\n                () => {\n                    window.requestAnimationFrame(data => {\n                        this.props.doUpdate();\n                    });\n                },\n                100,\n                {\n                    leading: true,\n                },\n            )();\n        });\n    }\n}\n","/**\n * Embed utility functions and types.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { IDiscussionEmbed, ICommentEmbed, IScrapeData } from \"@dashboard/@types/api\";\n\nexport const FOCUS_CLASS = \"embed-focusableElement\";\n\nexport type IQuoteEmbedData = IDiscussionEmbed | ICommentEmbed;\nexport type IEmbedData = IScrapeData;\n\nexport interface IEmbedElements {\n    root: HTMLElement;\n    content: HTMLElement;\n}\n\nexport type EmbedRenderer = (elements: IEmbedElements, data: IEmbedData, inEditor: boolean) => Promise<void>;\n\nexport interface IEmbedProps<T = IScrapeData> {\n    data: T;\n    inEditor: boolean;\n    onRenderComplete: () => void;\n}\n\nconst embedRenderers: {\n    [type: string]: EmbedRenderer;\n} = {};\nconst embedComponents: {\n    [type: string]: React.ComponentClass<IEmbedProps>;\n} = {};\n\n/**\n * Get all of the registered embed types.\n */\nexport function getEditorEmbedTypes() {\n    return Object.keys(embedRenderers);\n}\n\n/**\n * Register an embed rendering function.\n */\nexport function registerEmbedRenderer(type: string, renderer: EmbedRenderer) {\n    embedRenderers[type] = renderer;\n}\n\n/**\n * Register an embed rendering function.\n */\nexport function registerEmbedComponent(type: string, component: React.ComponentClass<IEmbedProps>) {\n    embedComponents[type] = component;\n}\n\n/**\n * Render an embed into a DOM node based on it's type.\n */\nexport function renderEmbed(elements: IEmbedElements, data: IEmbedData, inEditor = true): Promise<void> {\n    return new Promise((resolve, reject) => {\n        if (!data.type) {\n            throw new Error(\"The embed type was not provided.\");\n        }\n\n        if (data.type === \"link\") {\n            elements.root.classList.add(\"embedText\");\n            elements.content.classList.add(\"embedText-content\");\n            elements.content.classList.add(\"embedLink-content\");\n        }\n\n        if (data.type === \"quote\") {\n            elements.root.classList.add(\"embedText\");\n            elements.content.classList.add(\"embedText-content\");\n            elements.content.classList.add(\"embedQuote-content\");\n        }\n\n        const renderer = data.type && embedRenderers[data.type];\n        const Component = data.type && embedComponents[data.type];\n\n        if (renderer) {\n            return renderer(elements, data, inEditor);\n        } else if (Component) {\n            ReactDOM.render(\n                <Component data={data as IScrapeData} inEditor={inEditor} onRenderComplete={resolve} />,\n                elements.content,\n            );\n        } else {\n            throw new Error(\"Could not find a renderer for the embed type - \" + data.type);\n        }\n    });\n}\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { assetUrl } from \"@dashboard/application\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = assetUrl(\"/\");\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IEmbedData, IEmbedElements, registerEmbedRenderer } from \"@dashboard/embeds\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent, onReady } from \"@dashboard/application\";\nimport { IScrapeData } from \"@dashboard/@types/api\";\n\nexport function initGettyEmbeds() {\n    registerEmbedRenderer(\"getty\", renderGetty);\n    onReady(convertGettyEmbeds);\n    onContent(convertGettyEmbeds);\n}\n\n/**\n * Render a single getty embed.\n */\nexport async function renderGetty(elements: IEmbedElements, data: IScrapeData) {\n    const contentElement = elements.content;\n    const url = data.attributes.post;\n    const newLink = document.createElement(\"a\");\n    newLink.classList.add(\"gie-single\");\n    newLink.setAttribute(\"href\", \"http://www.gettyimages.ca/detail/\" + url);\n    newLink.setAttribute(\"id\", data.attributes.id);\n    contentElement.style.width = `${data.width}px`;\n    contentElement.appendChild(newLink);\n    setImmediate(() => {\n        void loadGettyImages(data);\n    });\n}\n\n/**\n * Renders posted getty embeds.\n */\nexport async function convertGettyEmbeds() {\n    const gettyPosts = document.querySelectorAll(\".js-gettyEmbed\");\n    if (gettyPosts.length > 0) {\n        for (const post of gettyPosts) {\n            const url = post.getAttribute(\"href\") || \"\";\n            const id = post.getAttribute(\"id\");\n            const sig = post.getAttribute(\"data-sig\");\n            const height = Number(post.getAttribute(\"data-height\")) || 1;\n            const width = Number(post.getAttribute(\"data-width\")) || 1;\n            const items = post.getAttribute(\"data-items\");\n            const capt = post.getAttribute(\"data-capt\");\n            const tld = post.getAttribute(\"data-tld\");\n            const i360 = post.getAttribute(\"data-is360\");\n            const data: IEmbedData = {\n                type: \"getty\",\n                url,\n                height,\n                width,\n                attributes: { id, sig, items, capt, tld, i360 },\n            };\n            await loadGettyImages(data);\n            post.classList.remove(\"js-gettyEmbed\");\n        }\n    }\n}\n\n/**\n * Loads getty embeds into a global object and fire getty's widget.js.\n * @param data\n * @returns {Promise<void>}\n */\nasync function loadGettyImages(data) {\n    const fallbackCallback = c => {\n        (window.gie.q = window.gie.q || []).push(c);\n    };\n    // This is part of Getty's embed code, we need to ensure embeds are loaded and sent to their widget.js script.\n    window.gie = window.gie || fallbackCallback;\n\n    window.gie(() => {\n        window.gie.widgets.load({\n            id: data.attributes.id,\n            sig: data.attributes.sig,\n            w: data.width + \"px\",\n            h: data.height + \"px\",\n            items: data.attributes.items,\n            caption: data.attributes.isCaptioned,\n            tld: data.attributes.tld,\n            is360: data.attributes.is360,\n        });\n    });\n\n    /// DO NOT IGNORE\n    /// This will turn totally sideways if window.gie is not populated before the script is initially loaded.\n    await ensureScript(\"//embed-cdn.gettyimages.com/widgets.js\");\n}\n","/**\n * Utilities that have a hard dependency on the DOM.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as utility from \"@dashboard/utility\";\nimport twemoji from \"twemoji\";\nimport tabbable from \"tabbable\";\nimport { logError, log } from \"@dashboard/utility\";\nimport debounce from \"lodash/debounce\";\n\n/**\n * Use the browser's built-in functionality to quickly and safely escape a string.\n *\n * @param str - The string to escape.\n *\n * @returns Escaped HTML.\n */\nexport function escapeHTML(str: string): string {\n    const div = document.createElement(\"div\");\n    div.appendChild(document.createTextNode(str));\n    return div.innerHTML;\n}\n\n/**\n * Use the browser's built-in functionality to quickly unescape a string.\n * UNSAFE with unsafe strings; only use on previously-escaped ones!\n *\n * @param escapedString - A previously escaped string.\n *\n * @returns The unescaped string.\n */\nexport function unescapeHTML(escapedString: string): string {\n    const div = document.createElement(\"div\");\n    div.innerHTML = escapedString;\n    const child = div.childNodes[0];\n    return child && child.nodeValue ? child.nodeValue : \"\";\n}\n\n/**\n * Add the hidden class and aria-hidden attribute to an Element.\n *\n * @param element - The DOM Element to modify.\n */\nexport function hideElement(element: Element) {\n    element.classList.add(\"u-isHidden\");\n    element.setAttribute(\"aria-hidden\", \"true\");\n}\n\n/**\n * Remove the hidden class and aria-hidden attribute to an Element.\n *\n * @param element - The DOM Element to modify.\n */\nexport function unhideElement(element: Element) {\n    element.classList.remove(\"u-isHidden\");\n    element.removeAttribute(\"aria-hidden\");\n}\n\n/**\n * Check if an element is visible or not.\n *\n * @param element - The element to check.\n *\n * @returns The visibility.\n */\nexport function elementIsVisible(element: HTMLElement): boolean {\n    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n\n/**\n * Get the form data out of a form element.\n *\n * @param {Element} formElement - The element to get the data out of.\n *\n * @returns {Object}\n */\nexport function getFormData(formElement) {\n    if (!(formElement instanceof HTMLFormElement)) {\n        return {};\n    }\n\n    const data = new FormData(formElement) as any;\n    const result = {};\n\n    data.forEach((key, value) => {\n        result[key] = value;\n    });\n\n    return result;\n}\n\nconst delegatedEventListeners = {};\n\n/**\n * Create an event listener using event delegation.\n *\n * @param eventName - The Event to listen for.\n * @param filterSelector - A CSS selector to match against.\n * @param callback - The callback function. This gets passed the fired event.\n * @param scopeSelector - And element to scope the event listener to.\n *\n * @returns The hash of the event. Save this to use removeDelegatedEvent().\n */\nexport function delegateEvent(\n    eventName: string,\n    filterSelector: string,\n    callback: (event: Event, triggeringElement: HTMLElement) => boolean | void,\n    scopeSelector?: string | HTMLElement,\n): string | undefined {\n    let functionKey = eventName + filterSelector + callback.toString();\n\n    let scope;\n\n    if (typeof scopeSelector === \"string\") {\n        scope = document.querySelector(scopeSelector);\n\n        if (!scope) {\n            throw new Error(`Unable to find element in the document for scopeSelector: ${scopeSelector}`);\n        } else {\n            functionKey += scopeSelector;\n        }\n    } else if (scopeSelector instanceof HTMLElement) {\n        scope = scopeSelector;\n    } else {\n        scope = document;\n    }\n\n    const eventHash = utility.hashString(functionKey).toString();\n\n    if (!Object.keys(delegatedEventListeners).includes(eventHash)) {\n        const wrappedCallback = event => {\n            // Get the nearest DOMNode that matches the given selector.\n            const match = filterSelector ? event.target.closest(filterSelector) : event.target;\n\n            if (match) {\n                // Call the callback with the matching element as the context.\n                return callback.call(match, event, match);\n            }\n        };\n\n        const listener = scope.addEventListener(eventName, wrappedCallback);\n        delegatedEventListeners[eventHash] = {\n            scope,\n            eventName,\n            wrappedCallback,\n        };\n        return eventHash;\n    }\n}\n\n/**\n * Remove a delegated event listener.\n *\n * @param eventHash - The event hash passed from delegateEvent().\n */\nexport function removeDelegatedEvent(eventHash: string) {\n    const { scope, eventName, wrappedCallback } = delegatedEventListeners[eventHash];\n    scope.removeEventListener(eventName, wrappedCallback);\n    delete delegatedEventListeners[eventHash];\n}\n\nexport function removeAllDelegatedEvents() {\n    Object.keys(delegatedEventListeners).forEach(key => {\n        removeDelegatedEvent(key);\n    });\n}\n\n/**\n * Toggle any attribute on an element.\n *\n * @param element - The element to toggle on.\n * @param attribute - The attribute to toggle.\n */\nexport function toggleAttribute(element: Element, attribute: string) {\n    const newValue = element.getAttribute(attribute) === \"false\";\n    element.setAttribute(attribute, newValue);\n}\n\nconst dataMap = new WeakMap();\n\n/**\n * Set a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to assosciate the data with.\n * @param key - The key to assosciate the data with.\n * @param value - The value to store.\n */\nexport function setData(element: Element, key: string, value: any) {\n    const initialValue = dataMap.has(element) ? dataMap.get(element) : {};\n    initialValue[key] = value;\n\n    dataMap.set(element, initialValue);\n}\n\n/**\n * Get a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to lookup.\n * @param key - The key to lookup.\n * @param defaultValue - A value to use if the element or key aren't found.\n */\nexport function getData(element: Element, key: string, defaultValue?: any) {\n    if (dataMap.has(element) && dataMap.get(element)[key]) {\n        return dataMap.get(element)[key];\n    }\n\n    const attributeString = `data-${key}`;\n\n    if (element.hasAttribute(attributeString)) {\n        return element.getAttribute(attributeString);\n    }\n\n    return defaultValue;\n}\n\n/**\n * Get an HTML element from a CSS selector or DOM Node.\n *\n * @param {string|Node} selectorOrElement - A CSS selector or an HTML element.\n *\n * @throws {Error} - If no element was found.\n * @returns {HTMLElement} - An HTMLElement no matter what.\n */\nexport function ensureHtmlElement(selectorOrElement) {\n    if (typeof selectorOrElement === \"string\") {\n        selectorOrElement = document.querySelector(selectorOrElement);\n    }\n\n    if (!(selectorOrElement instanceof HTMLElement)) {\n        throw new Error(`HTMLElement could not be found for ${selectorOrElement}.`);\n    }\n\n    return selectorOrElement;\n}\n\n// Test Char for Emoji 5.0\nconst testChar = \"\\uD83E\\uDD96\"; // U+1F996 T-Rex -> update test character with new emoji version support.\n\nlet emojiSupportedCache: boolean | null = null;\n\nexport function isEmojiSupported() {\n    if (emojiSupportedCache !== null) {\n        return emojiSupportedCache;\n    }\n\n    if (process.env.NODE_ENV !== \"test\") {\n        // Test environment\n        const canvas = document.createElement(\"canvas\");\n        if (canvas.getContext && canvas.getContext(\"2d\")) {\n            const pixelRatio = window.devicePixelRatio || 1;\n            const offset = 12 * pixelRatio;\n            const ctx = canvas.getContext(\"2d\");\n            ctx!.fillStyle = \"#f00\";\n            ctx!.textBaseline = \"top\";\n            ctx!.font = \"32px Arial\";\n            ctx!.fillText(testChar, 0, 0);\n            emojiSupportedCache = ctx!.getImageData(offset, offset, 1, 1).data[0] !== 0;\n        } else {\n            emojiSupportedCache = false;\n        }\n    } else {\n        emojiSupportedCache = true;\n    }\n\n    return emojiSupportedCache;\n}\n\nconst emojiOptions = {\n    className: \"fallBackEmoji\",\n    size: \"72x72\",\n};\n\n/**\n * Returns either native emoji or fallback image\n *\n * @param stringOrNode - A DOM Node or string to convert.\n */\nexport function convertToSafeEmojiCharacters(stringOrNode: string | Node) {\n    if (isEmojiSupported()) {\n        return stringOrNode;\n    }\n    return twemoji.parse(stringOrNode, emojiOptions);\n}\n\n// A weakmap so we can store multiple load callbacks per script.\nconst loadEventCallbacks: WeakMap<Node, Array<(event) => void>> = new WeakMap();\nconst rejectionCache: Map<string, Error> = new Map();\n\n/**\n * Dynamically load a javascript file.\n */\nexport function ensureScript(scriptUrl: string) {\n    return new Promise((resolve, reject) => {\n        const existingScript: HTMLScriptElement | null = document.querySelector(`script[src='${scriptUrl}']`);\n        if (rejectionCache.has(scriptUrl)) {\n            reject(rejectionCache.get(scriptUrl));\n        }\n        if (existingScript) {\n            if (loadEventCallbacks.has(existingScript)) {\n                // Add another resolveCallback into the weakmap.\n                const callbacks = loadEventCallbacks.get(existingScript);\n                callbacks && callbacks.push(resolve);\n            } else {\n                // Script is already loaded. Resolve immediately.\n                resolve();\n            }\n        } else {\n            // The script doesn't exist. Lets create it.\n            const head = document.getElementsByTagName(\"head\")[0];\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = scriptUrl;\n            script.onerror = (event: ErrorEvent) => {\n                const error = new Error(\"Failed to load a required embed script\");\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            };\n\n            const timeout = setTimeout(() => {\n                const error = new Error(`Loading of the script ${scriptUrl} has timed out.`);\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            }, 10000);\n\n            loadEventCallbacks.set(script, [resolve]);\n\n            script.onload = event => {\n                clearTimeout(timeout);\n                const callbacks = loadEventCallbacks.get(script);\n                callbacks && callbacks.forEach(callback => callback(event));\n                loadEventCallbacks.delete(script);\n            };\n\n            head.appendChild(script);\n        }\n    });\n}\n\ninterface ITabbableOptions {\n    root: Element;\n    excludedElements: Element[];\n    excludedRoots: Element[];\n    reverse: boolean;\n    fromElement: Element;\n    allowLooping: boolean;\n}\n\n/**\n * Get the next tabbable item within a given tabindex.\n *\n * WARNING: Performance can be poor if you pass many excluded roots and do not\n * sufficiently narrow the tree your are looking in.\n *\n * @param options\n * @property root - The root element to look in.\n * @property excludedElements - Elements to ignore.\n * @property excludedRoots - These element's children will be ignored.\n * @property reverse - True to get the previous element instead.\n * @property fromElement - The currently focused element.\n * @property allowLooping - Whether or not the focus should loop around from beginning <-> end.\n */\nexport function getNextTabbableElement(options?: Partial<ITabbableOptions>): HTMLElement | null {\n    const defaultTabbableOptions: ITabbableOptions = {\n        root: document.documentElement,\n        excludedElements: [],\n        excludedRoots: [],\n        reverse: false,\n        fromElement: document.activeElement,\n        allowLooping: true,\n    };\n\n    // Merge the passed options and the defaults.\n    const finalOptions = {\n        ...defaultTabbableOptions,\n        ...options,\n    } as ITabbableOptions;\n\n    if (!(finalOptions.fromElement instanceof HTMLElement)) {\n        logError(\"Unable to tab to next element, `fromElement` given is not valid: \", finalOptions.fromElement);\n        return null;\n    }\n\n    const tabbables = tabbable(finalOptions.root).filter((tabbableElement: Element) => {\n        // We want to excempt items that are the active item or a parent of the active item\n        // because otherwise we would not be able to tab away from them.\n        const elementIsActiveOrChildOfActive =\n            finalOptions.fromElement === tabbableElement || tabbableElement.contains(finalOptions.fromElement);\n\n        if (!elementIsActiveOrChildOfActive) {\n            if (finalOptions.excludedElements.includes(tabbableElement)) {\n                return false;\n            }\n            for (const excludedRoot of finalOptions.excludedRoots) {\n                if (excludedRoot !== tabbableElement && excludedRoot.contains(tabbableElement)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    });\n\n    const currentTabIndex = tabbables.indexOf(finalOptions.fromElement);\n\n    if (currentTabIndex < 0) {\n        return null;\n    }\n\n    let targetIndex = finalOptions.reverse ? currentTabIndex - 1 : currentTabIndex + 1;\n\n    if (finalOptions.allowLooping) {\n        // Loop over the beginning and ends\n        if (targetIndex < 0) {\n            targetIndex = tabbables.length - 1;\n        } else if (targetIndex >= tabbables.length) {\n            targetIndex = 0;\n        }\n    }\n\n    return tabbables[targetIndex] || null;\n}\n\nfunction checkDomTreeWasClicked(rootNode: Element | null, clickedElement: Element) {\n    return rootNode && clickedElement && (rootNode.contains(clickedElement as Element) || rootNode === clickedElement);\n}\n\n/**\n * Determine if the currently focused element is somewhere inside of (or the same as)\n * a given Element.\n *\n * @param rootNode - The root node to look in.\n */\nfunction checkDomTreeHasFocus(rootNode: Element | null, event: FocusEvent, callback: (hasFocus: boolean) => void) {\n    setTimeout(() => {\n        const possibleTargets = [\n            // NEEDS TO COME FIRST, because safari will populate relatedTarget on focusin, and its not what we're looking for.\n            document.activeElement, // IE11, Safari.\n            event.relatedTarget as Element, // Chrome (The actual standard)\n            (event as any).explicitOriginalTarget, // Firefox\n        ];\n\n        let activeElement = null;\n        for (const target of possibleTargets) {\n            if (target && target !== document.body) {\n                activeElement = target;\n                break;\n            }\n        }\n\n        if (activeElement !== null) {\n            const hasFocus =\n                rootNode && activeElement && (activeElement === rootNode || rootNode.contains(activeElement));\n\n            // We will only invalidate based on something actually getting focus.\n            callback(!!hasFocus);\n        }\n    }, 0);\n}\n\n/**\n * Register a callback for focusin and focusin out events. The main improvement here over registering\n * the listeners yourself is that the events fire for the whole tree as 1 item instead of as\n * individual notes.\n *\n * This is particularly useful when you want to track focus leaving or enterring a component\n * without caring about the individual contents inside.\n *\n * @param rootNode - The root dom node to watch on.\n * @param callback - A callback for when the tree focuses and blurs.\n */\nexport function watchFocusInDomTree(rootNode: Element, callback: (hasFocus: boolean) => void) {\n    rootNode.addEventListener(\n        \"focusout\",\n        (event: FocusEvent) => {\n            checkDomTreeHasFocus(rootNode, event, hasFocus => {\n                !hasFocus && callback(false);\n            });\n        },\n        true,\n    );\n\n    rootNode.addEventListener(\n        \"focusin\",\n        (event: FocusEvent) => {\n            checkDomTreeHasFocus(rootNode, event, hasFocus => {\n                hasFocus && callback(true);\n            });\n        },\n        true,\n    );\n\n    document.addEventListener(\"click\", event => {\n        const triggeringElement = event.target as Element;\n        const wasClicked = checkDomTreeWasClicked(rootNode, triggeringElement);\n        if (!wasClicked) {\n            callback(false);\n        }\n    });\n}\n\n/**\n * Sticky header handling\n */\nfunction handleStickyHeaderState(element, data) {\n    const goingDown = data.lastScrollPos < data.currentScrollPos;\n    const isAtTopOfPage = data.currentScrollPos === 0;\n    const elementHeight = element.offsetHeight;\n    const isPastHeader =\n        element.style.position !== \"fixed\" && element.offsetTop + elementHeight <= data.currentScrollPos;\n    const elementTop = element.style.top !== \"\" ? parseInt(element.style.top, 10) : false;\n\n    element.classList.toggle(\"isScrollingDown\", goingDown);\n    element.classList.toggle(\"isScrollingUp\", !goingDown);\n    element.classList.toggle(\"isAtTop\", isAtTopOfPage);\n\n    if (goingDown) {\n        element.style.position = \"\";\n        if (isPastHeader) {\n            element.style.top = `${data.currentScrollPos - elementHeight}px`;\n        } else {\n            if (!elementTop) {\n                element.style.top = `${data.currentScrollPos}px`;\n            }\n        }\n    } else {\n        // going UP\n        if (data.currentScrollPos <= elementTop) {\n            element.style.top = \"\";\n            element.style.position = \"fixed\";\n        }\n    }\n}\n\n/**\n * Vanilla's default way to handle sticky headers\n */\nexport function stickyHeader() {\n    const header = document.querySelector(\".stickyHeader\");\n    if (header !== null) {\n        let currentScrollPos = Math.max(window.scrollY, 0);\n        let lastScrollPos = -1;\n\n        handleStickyHeaderState(header, {\n            currentScrollPos,\n            lastScrollPos,\n        });\n\n        window.addEventListener(\"scroll\", e => {\n            debounce(\n                () => {\n                    window.requestAnimationFrame(data => {\n                        lastScrollPos = currentScrollPos;\n                        currentScrollPos = Math.max(window.scrollY, 0);\n                        handleStickyHeaderState(header, {\n                            currentScrollPos,\n                            lastScrollPos,\n                        });\n                    });\n                },\n                100,\n                {\n                    leading: true,\n                },\n            )();\n        });\n    } else {\n        utility.log(\"No sticky header found\");\n    }\n}\n\n/**\n * Handler for an file being dragged and dropped.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getDraggedImage(event: DragEvent): File | undefined {\n    if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length) {\n        event.preventDefault();\n        const files = Array.from(event.dataTransfer.files);\n\n        // Currently only 1 file is supported.\n        const mainFile = files[0];\n        return mainFile;\n    }\n}\n\n/**\n * Handler for an file being pasted.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getPastedImage(event: ClipboardEvent): File | undefined | null {\n    if (event.clipboardData && event.clipboardData.items && event.clipboardData.items.length) {\n        const files = Array.from(event.clipboardData.items)\n            .map((item: any) => (item.getAsFile ? item.getAsFile() : null))\n            .filter(Boolean);\n\n        if (files.length > 0) {\n            event.preventDefault();\n            // Currently only 1 file is supported.\n            const mainFile = files[0];\n            return mainFile;\n        }\n    }\n}\n\n/**\n * Calculate the height of element with simulated margin collapse.\n *\n * This is ideal for getting the calculate height of a fixed number of items. (not the entire parent).\n *\n * It considers:\n * - Element height\n * - Padding\n * - Borders\n * - Margins\n * - Margin collapsing.\n *\n * @param element - The element to measure\n * @param previousBottomMargin - The bottom margin of the previous element. You can use the returned bottom margin from this function to get this.\n */\nexport function getElementHeight(\n    element: Element,\n    previousBottomMargin: number = 0,\n): {\n    height: number;\n    bottomMargin: number;\n} {\n    const height = element.getBoundingClientRect().height;\n    const { marginTop, marginBottom } = window.getComputedStyle(element);\n\n    let topHeight = marginTop ? parseInt(marginTop, 10) : 0;\n    // Simulate a margin-collapsed height.\n    topHeight = Math.max(topHeight - previousBottomMargin, 0);\n\n    const bottomHeight = marginBottom ? parseInt(marginBottom, 10) : 0;\n    const finalHeight = height + topHeight + bottomHeight;\n\n    return {\n        height: finalHeight,\n        bottomMargin: bottomHeight,\n    };\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport { Devices, IDeviceProps } from \"@knowledge/components/DeviceChecker\";\nconst DeviceContext = React.createContext<Devices>(Devices.DESKTOP);\nexport default DeviceContext;\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport function withDevice<T extends IDeviceProps = IDeviceProps>(\n    WrappedComponent: React.ComponentClass<IDeviceProps>,\n) {\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n    class ComponentWithDevice extends React.Component<Omit<T, keyof IDeviceProps>> {\n        public static displayName = `withDevice(${displayName})`;\n        public render() {\n            return (\n                <DeviceContext.Consumer>\n                    {context => {\n                        return <WrappedComponent device={context} {...this.props} />;\n                    }}\n                </DeviceContext.Consumer>\n            );\n        }\n    }\n    return ComponentWithDevice;\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { IEmbedProps } from \"@dashboard/embeds\";\n\n/**\n * A base embed react component class.\n * @see {registerEmbedComponent}\n */\nexport default abstract class BaseEmbed<P extends IEmbedProps = IEmbedProps, S = {}> extends React.Component<P, S> {\n    public componentDidMount() {\n        this.props.onRenderComplete();\n    }\n\n    public abstract render();\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initCodePenEmbeds() {\n    registerEmbedComponent(\"codepen\", CodePenEmbed);\n}\n\nexport class CodePenEmbed extends BaseEmbed {\n    public render() {\n        const { attributes, height } = this.props.data;\n        const { id, src, style } = attributes;\n\n        return <iframe id={id} src={src} height={height || 300} style={style} scrolling=\"no\" />;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initGiphyEmbeds() {\n    registerEmbedComponent(\"giphy\", GiphyEmbed);\n}\n\nexport class GiphyEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes, width, height } = data;\n        const { postID } = attributes;\n        const paddingBottom = ((height || 1) / (width || 1)) * 100 + \"%\";\n        const ratioStyle: React.CSSProperties = {\n            maxWidth: width ? width + \"px\" : \"100%\",\n            paddingBottom,\n        };\n\n        if (!postID) {\n            throw new Error(\"Giphy embed fail, the post could not be found\");\n        }\n        const src = `https://giphy.com/embed/${postID}`;\n\n        return (\n            <div className=\"embedExternal-ratio\" style={ratioStyle}>\n                <iframe src={src} className=\"giphy-embed embedGiphy-iframe\" />\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\nimport { sanitizeUrl } from \"@dashboard/utility\";\n\nexport function initImageEmbeds() {\n    registerEmbedComponent(\"image\", ImageEmbed);\n}\n\nexport class ImageEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { url, name } = data;\n        const sanitizedUrl = sanitizeUrl(url);\n\n        // Yes we actually want a target blank here (even if we don't want it on normal links).\n        return (\n            <a className=\"embedImage-link\" href={sanitizedUrl || \"\"} rel=\"nofollow noopener\" target=\"_blank\">\n                <img className=\"embedImage-img\" src={url || \"\"} alt={name || \"\"} />\n            </a>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initImgurEmbeds() {\n    registerEmbedComponent(\"imgur\", ImgurEmbed);\n    onContent(convertImgurEmbeds);\n}\n\nexport class ImgurEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes } = data;\n        const { postID, isAlbum } = attributes;\n\n        const dataID = isAlbum ? `a/${postID}` : postID;\n        const url = `//imgur.com/${postID}`;\n\n        return <blockquote className=\"imgur-embed-pub\" data-id={dataID} />;\n    }\n\n    public componentDidMount() {\n        void convertImgurEmbeds().then(this.props.onRenderComplete);\n    }\n\n    public componentDidUpdate() {\n        void convertImgurEmbeds().then(this.props.onRenderComplete);\n    }\n}\n\n/**\n * Renders posted imgur embeds.\n */\nexport async function convertImgurEmbeds() {\n    const images = Array.from(document.querySelectorAll(\".imgur-embed-pub\"));\n    if (images.length > 0) {\n        await ensureScript(\"//s.imgur.com/min/embed.js\");\n\n        if (!window.imgurEmbed) {\n            throw new Error(\"The Imgur post failed to load\");\n        }\n\n        if (window.imgurEmbed.createIframe) {\n            const imagesLength = images.length;\n            for (let i = 0; i < imagesLength; i++) {\n                window.imgurEmbed.createIframe();\n            }\n        } else {\n            window.imgurEmbed.tasks = images.length;\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initInstagramEmbeds() {\n    registerEmbedComponent(\"instagram\", InstagramEmbed);\n    onContent(convertInstagramEmbeds);\n}\n\nexport class InstagramEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes, url } = data;\n        const { permaLink, versionNumber, isCaptioned } = attributes;\n        if (!data.attributes.permaLink) {\n            throw new Error(\"Attempted to embed a Instagram post failed link is invalid\");\n        }\n\n        return (\n            <blockquote\n                className=\"instagram-media\"\n                data-instgrmPermalink={permaLink}\n                data-instgrmVersion={versionNumber}\n                data-instgrmCaptioned={isCaptioned}\n            >\n                <a href={url}>{url}</a>\n            </blockquote>\n        );\n    }\n\n    public componentDidMount() {\n        void convertInstagramEmbeds().then(this.props.onRenderComplete);\n    }\n\n    public componentDidUpdate() {\n        void convertInstagramEmbeds().then(this.props.onRenderComplete);\n    }\n}\n\n/**\n * Renders posted instagram embeds.\n */\nexport async function convertInstagramEmbeds() {\n    const instagramEmbeds = document.querySelectorAll(\".instagram-media\");\n    if (instagramEmbeds.length > 0) {\n        await ensureScript(\"//platform.instagram.com/en_US/embeds.js\");\n\n        if (!window.instgrm) {\n            throw new Error(\"The Instagram post failed to load\");\n        }\n\n        window.instgrm.Embeds.process();\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { sanitizeUrl } from \"@dashboard/utility\";\nimport { getData, setData } from \"@dashboard/dom\";\nimport debounce from \"lodash/debounce\";\nimport shave from \"shave\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initLinkEmbeds() {\n    registerEmbedComponent(\"link\", LinkEmbed);\n    truncateEmbedLinks();\n\n    // Retruncate links when the window resizes.\n    window.addEventListener(\"resize\", () => debounce(truncateEmbedLinks, 200)());\n}\n\nexport class LinkEmbed extends BaseEmbed {\n    public render() {\n        const { name, attributes, url, photoUrl, body } = this.props.data;\n        const title = name ? <h3 className=\"embedText-title embedLink-title\">{name}</h3> : null;\n\n        const source = <span className=\"embedLink-source meta\">{url}</span>;\n\n        let linkImage: JSX.Element | null = null;\n        if (photoUrl) {\n            linkImage = <img src={photoUrl} className=\"embedLink-image\" aria-hidden=\"true\" />;\n        }\n        const dateTime =\n            attributes.timestamp && attributes.humanTime ? (\n                <time className=\"embedLink-dateTime meta\" dateTime={attributes.timestamp}>\n                    {attributes.humanTime}\n                </time>\n            ) : null;\n\n        const sanitizedUrl = sanitizeUrl(url);\n        return (\n            <a className=\"embedLink-link\" href={sanitizedUrl} rel=\"noreferrer\">\n                <article className=\"embedText-body embedLink-body\">\n                    {linkImage}\n                    <div className=\"embedText-main embedLink-main\">\n                        <div className=\"embedText-header embedLink-header\">\n                            {title}\n                            {dateTime}\n                            {source}\n                        </div>\n                        <div className=\"embedLink-excerpt\">{body}</div>\n                    </div>\n                </article>\n            </a>\n        );\n    }\n}\n\n/**\n * Truncate embed link excerpts in a container\n *\n * @param container - Element containing embeds to truncate\n */\nexport function truncateEmbedLinks(container = document.body) {\n    const embeds = container.querySelectorAll(\".embedLink-excerpt\");\n    embeds.forEach(el => {\n        let untruncatedText = getData(el, \"untruncatedText\");\n\n        if (!untruncatedText) {\n            untruncatedText = el.innerHTML;\n            setData(el, \"untruncatedText\", untruncatedText);\n        } else {\n            el.innerHTML = untruncatedText;\n        }\n        truncateTextBasedOnMaxHeight(el);\n    });\n}\n\n/**\n * Truncate element text based on max-height\n *\n * @param excerpt - The excerpt to truncate.\n */\nfunction truncateTextBasedOnMaxHeight(excerpt: Element) {\n    const maxHeight = parseInt(getComputedStyle(excerpt)[\"max-height\"], 10);\n    if (maxHeight && maxHeight > 0) {\n        shave(excerpt, maxHeight);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initSoundcloudEmbeds() {\n    registerEmbedComponent(\"soundcloud\", SoundcloudEmbed);\n}\n\nexport class SoundcloudEmbed extends BaseEmbed {\n    public render() {\n        const { attributes } = this.props.data;\n        const { postID, visual, showArtwork, embedUrl } = attributes;\n\n        // Ensure this is a track.\n        if (postID == null) {\n            throw new Error(\"Soundcloud embed fail, the track could not be found\");\n        }\n\n        const url = embedUrl + postID + \"&visual=\" + (visual || \"false\") + \"&show_artwork=\" + (showArtwork || \"false\");\n\n        return <iframe width=\"100%\" scrolling=\"no\" frameBorder=\"no\" src={url} />;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { IEmbedData, IEmbedElements, registerEmbedRenderer } from \"@dashboard/embeds\";\nimport { IScrapeData } from \"@dashboard/@types/api\";\n\nexport function initTwitterEmbeds() {\n    registerEmbedRenderer(\"twitter\", renderTweet);\n    onContent(convertTwitterEmbeds);\n    void convertTwitterEmbeds().then();\n}\n\n/**\n * Render a single twitter embed.\n */\nexport async function renderTweet(elements: IEmbedElements, data: IScrapeData) {\n    const contentElement = elements.content;\n    // Ensure the twitter library is loaded.\n    await ensureScript(\"//platform.twitter.com/widgets.js\");\n\n    if (!window.twttr) {\n        throw new Error(\"The Twitter widget failed to load.\");\n    }\n\n    // Ensure we have a status id to look up.\n    if (data.attributes.statusID == null) {\n        throw new Error(\"Attempted to embed a tweet but the statusID could not be found\");\n    }\n\n    // Check that we haven't already started to load this embed (In the case multiple onContents are fired off).\n    if (\n        !contentElement.classList.contains(\"js-twitterCardLoaded\") &&\n        !contentElement.classList.contains(\"js-twitterCardPreload\")\n    ) {\n        contentElement.classList.add(\"js-twitterCardPreload\");\n\n        // Render the embed.\n        const options = { conversation: \"none\" };\n        await window.twttr.widgets.createTweet(data.attributes.statusID, contentElement, options);\n        // Remove a url if there is one around.\n        const url = contentElement.querySelector(\".tweet-url\");\n        if (url) {\n            url.remove();\n        }\n\n        // Fade it in.\n        contentElement.classList.add(\"js-twitterCardLoaded\");\n    }\n}\n\n/**\n * Convert all of the twitter embeds in the page. This is for transforming twitter embeds that were\n * server rendered.\n *\n * @see library/Vanilla/Embeds/EmbedManager.php\n */\nexport async function convertTwitterEmbeds() {\n    const tweets = Array.from(document.querySelectorAll(\".js-twitterCard\"));\n    if (tweets.length > 0) {\n        await ensureScript(\"//platform.twitter.com/widgets.js\");\n        if (window.twttr) {\n            const promises = tweets.map(contentElement => {\n                // Get embed data out of the data attributes.\n                const statusID = contentElement.getAttribute(\"data-tweetid\");\n                const url = contentElement.getAttribute(\"data-tweeturl\") || \"\";\n\n                const renderData: IEmbedData = {\n                    type: \"twitter\",\n                    url,\n                    attributes: { statusID },\n                };\n\n                return renderTweet({ content: contentElement as HTMLElement, root: null as any }, renderData);\n            });\n\n            // Render all the pages twitter embeds at the same time.\n            await Promise.all(promises);\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { IEmbedProps, registerEmbedComponent } from \"@dashboard/embeds\";\nimport { simplifyFraction } from \"@dashboard/utility\";\nimport { t } from \"@dashboard/application\";\nimport { delegateEvent } from \"@dashboard/dom\";\nimport ReactDOM from \"react-dom\";\n\nexport function initVideoEmbeds() {\n    registerEmbedComponent(\"youtube\", VideoEmbed);\n    registerEmbedComponent(\"vimeo\", VideoEmbed);\n    registerEmbedComponent(\"twitch\", VideoEmbed);\n    registerEmbedComponent(\"wistia\", VideoEmbed);\n    delegateEvent(\"click\", \".js-playVideo\", handlePlayVideo);\n}\n\ninterface IState {\n    isPlaying: boolean;\n}\n\nexport class VideoEmbed extends BaseEmbed<IEmbedProps, IState> {\n    public constructor(props) {\n        super(props);\n        this.state = {\n            isPlaying: false,\n        };\n    }\n    public render() {\n        const { name, height, width, attributes, photoUrl } = this.props.data;\n        const { embedUrl } = attributes;\n\n        const ratioClass = this.ratioClass;\n        const style: React.CSSProperties = ratioClass\n            ? {}\n            : {\n                  paddingTop: ((height || 3) / (width || 4)) * 100 + \"%\",\n              };\n\n        const thumbnail = (\n            <div className={`embedVideo-ratio ${ratioClass}`} style={style}>\n                <button\n                    type=\"button\"\n                    data-url={embedUrl}\n                    aria-label={name || undefined}\n                    className=\"embedVideo-playButton iconButton\"\n                >\n                    <img\n                        onClick={this.clickHandler}\n                        src={photoUrl || undefined}\n                        role=\"presentation\"\n                        className=\"embedVideo-thumbnail\"\n                    />\n                    <span className=\"embedVideo-scrim\" />\n                    <PlayIcon />\n                </button>\n            </div>\n        );\n\n        return this.state.isPlaying ? <VideoIframe url={embedUrl} /> : thumbnail;\n    }\n\n    private clickHandler = () => {\n        this.setState({ isPlaying: true });\n    };\n\n    private get ratioClass(): string | undefined {\n        const { height, width } = this.props.data;\n        const ratio = simplifyFraction(height || 3, width || 4);\n        switch (ratio.shorthand) {\n            case \"21:9\":\n                return \"is21by9\";\n            case \"16:9\":\n                return \"is16by9\";\n            case \"4:3\":\n                return \"is4by3\";\n            case \"1:1\":\n                return \"is1by1\";\n        }\n    }\n}\n\nfunction VideoIframe(props: { url: string }) {\n    return (\n        <iframe\n            frameBorder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            className=\"embedVideo-iframe\"\n            src={props.url}\n            allowFullScreen={true}\n        />\n    );\n}\n\nfunction PlayIcon() {\n    const style: React.CSSProperties = { fill: \"currentColor\", strokeWidth: 0.3 };\n\n    return (\n        <svg className=\"embedVideo-playIcon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-1 -1 24 24\">\n            <title>{t(\"Play Video\")}</title>\n            <path\n                className=\"embedVideo-playIconPath embedVideo-playIconPath-circle\"\n                style={style}\n                d=\"M11,0A11,11,0,1,0,22,11,11,11,0,0,0,11,0Zm0,20.308A9.308,9.308,0,1,1,20.308,11,9.308,9.308,0,0,1,11,20.308Z\"\n            />\n            <polygon\n                className=\"embedVideo-playIconPath embedVideo-playIconPath-triangle\"\n                style={style}\n                points=\"8.609 6.696 8.609 15.304 16.261 11 8.609 6.696\"\n            />\n        </svg>\n    );\n}\n\n/**\n * Handle a click on a video.\n */\nfunction handlePlayVideo() {\n    // Inside of delegate event `this` is the current target of the event.\n    const playButton: HTMLElement = this;\n    const container = playButton.closest(\".embedVideo-ratio\");\n    if (container) {\n        const url = playButton.dataset.url as string;\n\n        ReactDOM.render(<VideoIframe url={url} />, container);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { delegateEvent } from \"@dashboard/dom\";\n\nexport function initSpoilers() {\n    // Setup\n    delegateEvent(\"click\", \".js-toggleSpoiler\", handleToggleSpoiler);\n}\n\n/**\n * Toggle a spoiler open and closed.\n */\nfunction handleToggleSpoiler() {\n    const toggleButton: HTMLElement = this;\n\n    const spoilerContainer = toggleButton.closest(\".spoiler\");\n    if (spoilerContainer) {\n        spoilerContainer.classList.toggle(\"isShowingSpoiler\");\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { getElementHeight } from \"@dashboard/dom\";\n\ninterface IProps {\n    id: string;\n    isCollapsed: boolean;\n    preferredMaxHeight: number; // The actual max height could exceed this, but once we pass it stop adding elements.\n    setNeedsCollapser?: (needsCollapser: boolean) => void;\n    dangerouslySetInnerHTML: {\n        __html: string;\n    };\n}\n\ninterface IState {\n    maxHeight: number | string;\n}\n\ninterface IHeightInfo {}\n\n/**\n * A class for dynamic collapsable user content.\n */\nexport default class CollapsableUserContent extends React.PureComponent<IProps, IState> {\n    public state = {\n        maxHeight: \"100%\",\n    };\n    private selfRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n    public render() {\n        const style: React.CSSProperties = { overflow: \"hidden\", maxHeight: this.state.maxHeight };\n\n        return (\n            <div\n                id={this.props.id}\n                className=\"collapsableContent userContent\"\n                style={style}\n                ref={this.selfRef}\n                dangerouslySetInnerHTML={this.props.dangerouslySetInnerHTML}\n            />\n        );\n    }\n\n    /**\n     * Do the initial height calculation and recalcuate if the window dimensions change.\n     */\n    public componentDidMount() {\n        this.calcMaxHeight();\n        window.addEventListener(\"resize\", () =>\n            debounce(() => {\n                this.calcMaxHeight();\n            }, 200)(),\n        );\n    }\n\n    /**\n     * If certain primary props change we need to recalculate the content height.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (\n            prevProps.dangerouslySetInnerHTML.__html !== this.props.dangerouslySetInnerHTML.__html ||\n            prevProps.isCollapsed !== this.props.isCollapsed\n        ) {\n            this.calcMaxHeight();\n        }\n    }\n\n    /**\n     * Calculate the exact pixel max height of the content around the threshold of preferredMaxHeight.\n     */\n    private getHeightInfo(): {\n        height: number | null;\n        needsCollapser: boolean;\n    } {\n        const self = this.selfRef.current;\n\n        if (self === null) {\n            return {\n                height: null,\n                needsCollapser: false,\n            };\n        }\n\n        if (self.childElementCount <= 1) {\n            return {\n                height: null,\n                needsCollapser: false,\n            };\n        }\n\n        let finalMaxHeight = 0;\n        let lastBottomMargin = 0;\n        for (const child of Array.from(self.children)) {\n            if (finalMaxHeight > this.props.preferredMaxHeight) {\n                return {\n                    height: finalMaxHeight,\n                    needsCollapser: true,\n                };\n            }\n\n            const { height, bottomMargin } = getElementHeight(child, lastBottomMargin);\n            if (finalMaxHeight > 0 && height > this.props.preferredMaxHeight) {\n                return {\n                    height: finalMaxHeight,\n                    needsCollapser: true,\n                };\n            }\n            lastBottomMargin = bottomMargin;\n\n            finalMaxHeight += height;\n        }\n\n        return {\n            height: finalMaxHeight,\n            needsCollapser: finalMaxHeight > this.props.preferredMaxHeight,\n        };\n    }\n\n    /**\n     * Calculate the CSS max height that we want to apply to the container div.\n     */\n    private calcMaxHeight() {\n        const { height, needsCollapser } = this.getHeightInfo();\n        if (needsCollapser && this.props.isCollapsed) {\n            this.setState({ maxHeight: height! });\n        } else {\n            this.setState({ maxHeight: this.selfRef.current!.scrollHeight });\n        }\n\n        this.props.setNeedsCollapser && this.props.setNeedsCollapser(needsCollapser);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { registerEmbedComponent, IEmbedProps, IEmbedData, IQuoteEmbedData } from \"@dashboard/embeds\";\nimport { onContent, t, formatUrl, makeProfileUrl } from \"@dashboard/application\";\nimport CollapsableUserContent from \"@dashboard/app/user-content/CollapsableContent\";\nimport uniqueId from \"lodash/uniqueId\";\nimport classnames from \"classnames\";\nimport api from \"@dashboard/apiv2\";\n\nexport function initQuoteEmbeds() {\n    registerEmbedComponent(\"quote\", QuoteEmbed as any);\n    onContent(mountQuoteEmbeds);\n}\n\n/**\n * Mount all of the existing quote embeds in the page.\n *\n * Data (including server rendered HTML content should be coming down in JSON encoded attribute data-json).\n */\nexport function mountQuoteEmbeds() {\n    const embeds = document.querySelectorAll(\".js-quoteEmbed\");\n    for (const embed of embeds) {\n        const data = embed.getAttribute(\"data-json\");\n        if (data) {\n            const quoteData = JSON.parse(data) as IEmbedData;\n            const onRenderComplete = () => {\n                embed.removeAttribute(\"data-json\");\n                embed.classList.remove(\"embedResponsive-initialLink\");\n            };\n            ReactDOM.render(\n                <QuoteEmbed data={quoteData} inEditor={false} onRenderComplete={onRenderComplete} />,\n                embed,\n            );\n        }\n    }\n}\n\ninterface IState {\n    isCollapsed: boolean;\n    needsCollapseButton: boolean;\n    renderedBody: string;\n}\n\nfunction ChevronUpIcon() {\n    return (\n        <svg className=\"icon embedQuote-chevronUp\" viewBox=\"0 0 20 20\">\n            <title>{t(\"▲\")}</title>\n            <path\n                fill=\"currentColor\"\n                stroke-linecap=\"square\"\n                fill-rule=\"evenodd\"\n                d=\"M6.79521339,4.1285572 L6.13258979,4.7726082 C6.04408814,4.85847112 6,4.95730046 6,5.0690962 C6,5.18057569 6.04408814,5.27940502 6.13258979,5.36526795 L11.3416605,10.4284924 L6.13275248,15.4915587 C6.04425083,15.5774216 6.00016269,15.6762509 6.00016269,15.7878885 C6.00016269,15.8995261 6.04425083,15.9983555 6.13275248,16.0842184 L6.79537608,16.7282694 C6.88371504,16.8142905 6.98539433,16.8571429 7.10025126,16.8571429 C7.21510819,16.8571429 7.31678748,16.8141323 7.40512644,16.7282694 L13.5818586,10.7248222 C13.6701976,10.6389593 13.7142857,10.54013 13.7142857,10.4284924 C13.7142857,10.3168547 13.6701976,10.2181835 13.5818586,10.1323206 L7.40512644,4.1285572 C7.31678748,4.04269427 7.21510819,4 7.10025126,4 C6.98539433,4 6.88371504,4.04269427 6.79521339,4.1285572 L6.79521339,4.1285572 Z\"\n                transform=\"rotate(-90 9.857 10.429)\"\n            />\n        </svg>\n    );\n}\n\nfunction ChevronDownIcon() {\n    return (\n        <svg className=\"icon embedQuote-chevronDown\" viewBox=\"0 0 20 20\">\n            <title>{t(\"▼\")}</title>\n            <path\n                fill=\"currentColor\"\n                stroke-linecap=\"square\"\n                fill-rule=\"evenodd\"\n                d=\"M6.79521339,4.1285572 L6.13258979,4.7726082 C6.04408814,4.85847112 6,4.95730046 6,5.0690962 C6,5.18057569 6.04408814,5.27940502 6.13258979,5.36526795 L11.3416605,10.4284924 L6.13275248,15.4915587 C6.04425083,15.5774216 6.00016269,15.6762509 6.00016269,15.7878885 C6.00016269,15.8995261 6.04425083,15.9983555 6.13275248,16.0842184 L6.79537608,16.7282694 C6.88371504,16.8142905 6.98539433,16.8571429 7.10025126,16.8571429 C7.21510819,16.8571429 7.31678748,16.8141323 7.40512644,16.7282694 L13.5818586,10.7248222 C13.6701976,10.6389593 13.7142857,10.54013 13.7142857,10.4284924 C13.7142857,10.3168547 13.6701976,10.2181835 13.5818586,10.1323206 L7.40512644,4.1285572 C7.31678748,4.04269427 7.21510819,4 7.10025126,4 C6.98539433,4 6.88371504,4.04269427 6.79521339,4.1285572 L6.79521339,4.1285572 Z\"\n                transform=\"rotate(90 9.857 10.429)\"\n            />\n        </svg>\n    );\n}\n\n/**\n * An embed class for quoted user content on the same site.\n *\n * This is not an editable quote. Instead it an expandable/collapsable snapshot of the quoted/embedded comment/discussion.\n *\n * This can either recieve the post format and body (when created directly in the editor) or be given the fully rendered content (when mounting on top of existing server rendered DOM stuff).\n */\nexport class QuoteEmbed extends React.Component<IEmbedProps<IEmbedData>, IState> {\n    public state: IState = {\n        isCollapsed: true,\n        renderedBody: \"\",\n        needsCollapseButton: false,\n    };\n\n    public render() {\n        const { body, insertUser } = this.quoteData;\n        const id = uniqueId(\"collapsableContent-\");\n\n        const name = (this.quoteData as any).name;\n\n        const title = name ? (\n            <h2 className=\"embedText-title embedQuote-title\">\n                <a href={this.quoteData.url} className=\"embedText-titleLink\">\n                    {name}\n                </a>\n            </h2>\n        ) : null;\n\n        const bodyClasses = classnames(\"embedText-body\", \"embedQuote-body\", { isCollapsed: this.state.isCollapsed });\n        const userUrl = makeProfileUrl(insertUser.name);\n\n        return (\n            <blockquote className={bodyClasses}>\n                <div className=\"embedText-header embedQuote-header\">\n                    {title}\n                    <a href={userUrl} className=\"embedQuote-userLink\">\n                        <span className=\"embedQuote-userPhotoWrap\">\n                            <img\n                                src={insertUser.photoUrl}\n                                alt={insertUser.name}\n                                className=\"embedQuote-userPhoto\"\n                                tabIndex={-1}\n                            />\n                        </span>\n                        <span className=\"embedQuote-userName\">{insertUser.name}</span>\n                    </a>\n                    <a href={this.quoteData.url} className=\"embedQuote-metaLink\">\n                        <time\n                            className=\"embedText-dateTime embedQuote-dateTime meta\"\n                            dateTime={this.dateTime}\n                            title={this.titleTime}\n                        >\n                            {this.humanTime}\n                        </time>\n                    </a>\n\n                    {this.state.needsCollapseButton && (\n                        <button\n                            type=\"button\"\n                            className=\"embedQuote-collapseButton\"\n                            aria-label={t(\"Toggle Quote\")}\n                            onClick={this.toggleCollapseState}\n                            aria-pressed={this.state.isCollapsed}\n                        >\n                            {this.state.isCollapsed ? <ChevronDownIcon /> : <ChevronUpIcon />}\n                        </button>\n                    )}\n                </div>\n                <div className=\"embedText-main embedQuote-main\">\n                    <div className=\"embedQuote-excerpt\">\n                        <CollapsableUserContent\n                            setNeedsCollapser={this.setNeedsCollapser}\n                            isCollapsed={this.state.isCollapsed}\n                            id={id}\n                            preferredMaxHeight={100}\n                            dangerouslySetInnerHTML={{ __html: body ? body : this.state.renderedBody }}\n                        />\n                    </div>\n                </div>\n            </blockquote>\n        );\n    }\n\n    /**\n     * When the component mounts we need to ensure we have rendered post content.\n     *\n     * Either we were passed the content, or we need to make an API call to render it.\n     */\n    public componentDidMount() {\n        if (this.quoteData.body) {\n            this.props.onRenderComplete();\n        } else {\n            const body =\n                this.quoteData.format === \"Rich\" ? JSON.stringify(this.quoteData.bodyRaw) : this.quoteData.bodyRaw;\n            void api\n                .post(\"/rich/quote\", {\n                    body,\n                    format: this.quoteData.format,\n                })\n                .then(response => {\n                    this.setState({ renderedBody: response.data.quote }, this.props.onRenderComplete);\n                });\n        }\n    }\n\n    /**\n     * Callback for the collapser to determine if we need to show the collapse toggle or not.\n     */\n    private setNeedsCollapser = needsCollapser => {\n        this.setState({ needsCollapseButton: needsCollapser });\n    };\n\n    /**\n     * Toggle the state of whether or not we are collapsed.\n     */\n    private toggleCollapseState = (event: React.ChangeEvent<any>) => {\n        event.preventDefault();\n        this.setState({ isCollapsed: !this.state.isCollapsed });\n    };\n\n    /**\n     * Get the quote embed data out of the scrape data.\n     */\n    private get quoteData(): IQuoteEmbedData {\n        return this.props.data.attributes as IQuoteEmbedData;\n    }\n\n    /**\n     * Get the timestamp to display.\n     */\n    private get dateTime(): string {\n        return this.quoteData.dateUpdated || this.quoteData.dateInserted;\n    }\n\n    /**\n     * Get the title of the time tag (long extended date)\n     */\n    private get titleTime(): string {\n        const date = new Date(this.dateTime);\n        return date.toLocaleString(undefined, {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n            weekday: \"long\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n        });\n    }\n\n    /**\n     * Get a shorter human readable time for the time tag.\n     */\n    private get humanTime(): string {\n        const date = new Date(this.dateTime);\n        return date.toLocaleString(undefined, { year: \"numeric\", month: \"short\", day: \"numeric\" });\n    }\n}\n","/**\n * Wire together the different parts of the application.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { initCodePenEmbeds } from \"@dashboard/app/user-content/embeds/codepen\";\nimport { initGettyEmbeds, convertGettyEmbeds } from \"@dashboard/app/user-content/embeds/getty\";\nimport { initGiphyEmbeds } from \"@dashboard/app/user-content/embeds/giphy\";\nimport { initImageEmbeds } from \"@dashboard/app/user-content/embeds/image\";\nimport { initImgurEmbeds, convertImgurEmbeds } from \"@dashboard/app/user-content/embeds/imgur\";\nimport { initInstagramEmbeds, convertInstagramEmbeds } from \"@dashboard/app/user-content/embeds/instagram\";\nimport { initLinkEmbeds } from \"@dashboard/app/user-content/embeds/link\";\nimport { initSoundcloudEmbeds } from \"@dashboard/app/user-content/embeds/soundcloud\";\nimport { initTwitterEmbeds, convertTwitterEmbeds } from \"@dashboard/app/user-content/embeds/twitter\";\nimport { initVideoEmbeds } from \"@dashboard/app/user-content/embeds/video\";\nimport { initEmojiSupport } from \"@dashboard/app/user-content/emoji\";\nimport { initSpoilers } from \"@dashboard/app/user-content/spoilers\";\nimport { initQuoteEmbeds, mountQuoteEmbeds } from \"@dashboard/app/user-content/embeds/quote\";\n\nexport function initAllUserContent() {\n    // User content\n    initEmojiSupport();\n    initSpoilers();\n    initCodePenEmbeds();\n    initGettyEmbeds();\n    initGiphyEmbeds();\n    initImageEmbeds();\n    initImgurEmbeds();\n    initInstagramEmbeds();\n    initLinkEmbeds();\n    initSoundcloudEmbeds();\n    initTwitterEmbeds();\n    initVideoEmbeds();\n    initQuoteEmbeds();\n}\n\n/**\n * Runs method for all embeds that need to be rendered everytime content changes.\n * This is ideal for something like react's `componentDidMount`.\n */\nexport function convertAllUserContent() {\n    void convertGettyEmbeds();\n    void convertImgurEmbeds();\n    void convertInstagramEmbeds();\n    void convertTwitterEmbeds();\n    void mountQuoteEmbeds();\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { onReady, onContent } from \"@dashboard/application\";\nimport { convertToSafeEmojiCharacters } from \"@dashboard/dom\";\n\nexport function initEmojiSupport() {\n    // Emoji\n    onReady(() => convertToSafeEmojiCharacters(document.body));\n    onContent(() => convertToSafeEmojiCharacters(document.body));\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nexport * from \"@dashboard/@types/api/general\";\nexport * from \"@dashboard/@types/api/user\";\nexport * from \"@dashboard/@types/api/authenticate\";\nexport * from \"@dashboard/@types/api/comment\";\nexport * from \"@dashboard/@types/api/discussion\";\nexport * from \"@dashboard/@types/api/media\";\n","/**\n * A module to isolate meta data passed from the server into a single dependency.\n * This should always be used instead of accessing window.gdn directly.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\ninterface IGdn {\n    meta: AnyObject;\n    permissions: AnyObject;\n    translations: AnyObject;\n    [key: string]: any;\n}\n\n/** The gdn object may be set in an inline script in the head of the document. */\nconst gdn = window.gdn || {};\n\nif (!(\"meta\" in gdn)) {\n    gdn.meta = {};\n}\n\nif (!(\"permissions\" in gdn)) {\n    gdn.permissions = {};\n}\n\nif (!(\"translations\" in gdn)) {\n    gdn.translations = {};\n}\n\nexport default gdn as IGdn;\n"],"sourceRoot":""}