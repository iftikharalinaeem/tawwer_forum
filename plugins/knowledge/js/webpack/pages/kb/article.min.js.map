{"version":3,"sources":["webpack://vanillaknowledge/./node_modules/classnames/index.js","webpack://vanillaknowledge/./applications/dashboard/src/scripts/embeds.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/dom.ts","webpack://vanillaknowledge/./node_modules/react-router-dom/es/Link.js","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/getty.ts","webpack://vanillaknowledge/./node_modules/timers-browserify/main.js","webpack://vanillaknowledge/./node_modules/setimmediate/setImmediate.js","webpack://vanillaknowledge/./node_modules/twemoji/2/twemoji.npm.js","webpack://vanillaknowledge/./node_modules/tabbable/index.js","webpack://vanillaknowledge/./node_modules/lodash/uniqueId.js","webpack://vanillaknowledge/./node_modules/lodash/toString.js","webpack://vanillaknowledge/./node_modules/lodash/_baseToString.js","webpack://vanillaknowledge/./node_modules/lodash/_arrayMap.js","webpack://vanillaknowledge/./node_modules/lodash/isArray.js","webpack://vanillaknowledge/./applications/dashboard/node_modules/sprintf-js/src/sprintf.js","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/components/Breadcrumb.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/components/Breadcrumbs.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/components/Icons.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/components/BackLink.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/components/Heading.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/components/PageHeading.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/BaseEmbed.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/codepen.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/giphy.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/image.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/imgur.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/instagram.tsx","webpack://vanillaknowledge/./node_modules/shave/dist/shave.es.js","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/link.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/soundcloud.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/twitter.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/video.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/spoilers.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/CollapsableContent.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/embeds/quote.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/index.ts","webpack://vanillaknowledge/./applications/dashboard/src/scripts/app/user-content/emoji.ts","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/components/UserContent.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/layouts/components/Container.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/layouts/CompoundComponent.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/layouts/PanelLayout.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/components/DocumentTitle.tsx","webpack://vanillaknowledge/./applications/dashboard/src/scripts/components/NotFoundPage.tsx","webpack://vanillaknowledge/../knowledge/plugins/knowledge/src/scripts/pages/article/ArticlePage.tsx"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","__webpack_require__","embedRenderers","embedComponents","registerEmbedRenderer","type","renderer","registerEmbedComponent","component","delegatedEventListeners","delegateEvent","eventName","filterSelector","callback","scopeSelector","scope","functionKey","toString","document","querySelector","Error","HTMLElement","eventHash","_dashboard_utility__WEBPACK_IMPORTED_MODULE_0__","Object","keys","includes","wrappedCallback","event","match","target","closest","addEventListener","dataMap","WeakMap","setData","element","value","initialValue","has","get","set","getData","defaultValue","attributeString","hasAttribute","getAttribute","testChar","emojiSupportedCache","emojiOptions","className","size","convertToSafeEmojiCharacters","stringOrNode","canvas","createElement","getContext","offset","window","devicePixelRatio","ctx","fillStyle","textBaseline","font","fillText","getImageData","data","isEmojiSupported","twemoji__WEBPACK_IMPORTED_MODULE_1___default","a","parse","loadEventCallbacks","rejectionCache","Map","ensureScript","scriptUrl","Promise","resolve","reject","existingScript","callbacks","head","getElementsByTagName","script_1","src","onerror","error","timeout_1","setTimeout","onload","clearTimeout","forEach","delete","appendChild","getElementHeight","previousBottomMargin","height","getBoundingClientRect","_a","getComputedStyle","marginTop","marginBottom","topHeight","parseInt","Math","max","bottomHeight","bottomMargin","history__WEBPACK_IMPORTED_MODULE_3__","_extends","assign","source","prototype","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","Link","_React$Component","_temp","_this","instance","Constructor","TypeError","_classCallCheck","this","_len","args","_key","concat","handleClick","props","onClick","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","indexOf","_objectWithoutProperties","invariant__WEBPACK_IMPORTED_MODULE_2___default","location","href","createHref","react__WEBPACK_IMPORTED_MODULE_0___default","ref","Component","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","func","string","bool","oneOfType","object","isRequired","defaultProps","contextTypes","shape","__webpack_exports__","_dashboard_application__WEBPACK_IMPORTED_MODULE_2__","initGettyEmbeds","_dashboard_embeds__WEBPACK_IMPORTED_MODULE_0__","renderGetty","convertGettyEmbeds","elements","contentElement","content","url","attributes","post","newLink","classList","add","setAttribute","id","style","width","setImmediate","loadGettyImages","gettyPosts","querySelectorAll","gettyPosts_1","__values","gettyPosts_1_1","next","sig","Number","items","capt","tld","i360","_b","sent","remove","fallbackCallback","c","gie","q","widgets","load","w","h","caption","isCaptioned","is360","_dashboard_dom__WEBPACK_IMPORTED_MODULE_1__","global","Function","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","timeout","close","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","process","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","random","onGlobalMessage","slice","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","html","documentElement","script","onreadystatechange","removeChild","installReadyStateChangeImplementation","task","run","twemoji","base","ext","convert","fromCodePoint","codepoint","code","fromCharCode","toCodePoint","parentNode","replaceChild","createText","alt","what","how","str","options","rawText","attrib","attrname","ret","iconId","grabTheRightIcon","escapeHTML","node","modified","fragment","subnode","text","index","img","allText","grabAllTextNodes","nodeType","childNodes","shouldntBeParsed","test","nodeName","toLowerCase","createDocumentFragment","nodeValue","re","exec","Image","defaultImageSrcGenerator","returnNull","folder","toSizeSquaredAsset","lastIndex","result","escaper","&","<",">","'","\"","UFE0Fg","U200D","String","rescaper","clean","createTextNode","s","replacer","icon","m","unicodeSurrogates","sep","r","p","charCodeAt","protocol","el","candidate","candidateIndexAttr","candidateIndex","elementDocument","ownerDocument","basicTabbables","orderedTabbables","isUnavailable","isOffCache","computedStyle","defaultView","isOff","nodeComputedStyle","display","visibility","createIsUnavailable","candidateSelectors","candidates","includeContainer","matches","Element","msMatchesSelector","webkitMatchesSelector","some","candidateSelector","unshift","l","isNaN","tabIndex","tagName","disabled","tabbableNodes","sort","b","map","idCounter","prefix","baseToString","Symbol","arrayMap","isSymbol","INFINITY","symbolProto","symbolToString","array","iteratee","not_string","number","json","not_json","modulo","placeholder","key_access","index_access","sign","sprintf","cache","format","parse_tree","argv","k","pad","pad_character","pad_length","cursor","tree_length","node_type","output","is_positive","get_type","JSON","stringify","toExponential","parseFloat","toFixed","toPrecision","substring","toUpperCase","charAt","str_repeat","fmt","_fmt","arg_names","SyntaxError","field_list","replacement_field","field_match","variable","input","multiplier","vsprintf","_argv","splice","_super","Breadcrumb","__extends","ariaCurrent","lastElement","react","title","name","aria-current","classnames_default","itemScope","itemType","itemProp","Breadcrumbs","Breadcrumbs_extends","children","crumbCount_1","crumbs","crumb","components_Breadcrumb","aria-label","application","currentColorFill","fill","BackLink","BackLink_extends","react_default","xmlns","viewBox","d","leftChevron","PageTitle","Heading_extends","Tag","depth","pageTitle","PageHeading","PageHeading_extends","components_BackLink","backUrl","Heading","actions","BaseEmbed","BaseEmbed_extends","componentDidMount","onRenderComplete","codepen_CodePenEmbed","CodePenEmbed","codepen_extends","scrolling","embeds_BaseEmbed","giphy_GiphyEmbed","GiphyEmbed","giphy_extends","postID","ratioStyle","maxWidth","paddingBottom","image_ImageEmbed","ImageEmbed","image_extends","sanitizedUrl","utility","rel","imgur_ImgurEmbed","ImgurEmbed","imgur_extends","dataID","isAlbum","data-id","convertImgurEmbeds","then","componentDidUpdate","images","from","dom","imgurEmbed","createIframe","imagesLength","tasks","instagram_InstagramEmbed","InstagramEmbed","instagram_extends","permaLink","versionNumber","data-instgrmPermalink","data-instgrmVersion","data-instgrmCaptioned","convertInstagramEmbeds","instgrm","Embeds","shave_es","maxHeight","opts","els","character","classname","spaces","charHtml","styles","span","textProp","textContent","fullText","words","split","heightStyle","maxHeightStyle","offsetHeight","min","pivot","insertAdjacentHTML","diff","link_LinkEmbed","LinkEmbed","link_extends","photoUrl","body","linkImage","aria-hidden","dateTime","timestamp","humanTime","truncateEmbedLinks","container","untruncatedText","innerHTML","excerpt","truncateTextBasedOnMaxHeight","soundcloud_SoundcloudEmbed","SoundcloudEmbed","soundcloud_extends","visual","showArtwork","embedUrl","frameBorder","renderTweet","twttr","statusID","contains","conversation","createTweet","convertTwitterEmbeds","tweets","promises","root","all","video_VideoEmbed","VideoEmbed","clickHandler","setState","isPlaying","state","video_extends","ratioClass","paddingTop","thumbnail","data-url","role","PlayIcon","VideoIframe","defineProperty","shorthand","allow","allowFullScreen","strokeWidth","points","handlePlayVideo","dataset","react_dom_default","handleToggleSpoiler","spoilerContainer","toggle","CollapsableUserContent","selfRef","createRef","CollapsableContent_extends","overflow","dangerouslySetInnerHTML","calcMaxHeight","debounce_default","prevProps","__html","isCollapsed","getHeightInfo","current","needsCollapser","childElementCount","finalMaxHeight","lastBottomMargin","_c","done","child","preferredMaxHeight","_d","scrollHeight","setNeedsCollapser","PureComponent","mountQuoteEmbeds","embeds","embed","quoteData","quote_QuoteEmbed","inEditor","removeAttribute","embeds_1","quote_values","embeds_1_1","ChevronUpIcon","stroke-linecap","fill-rule","transform","ChevronDownIcon","QuoteEmbed","renderedBody","needsCollapseButton","toggleCollapseState","quote_extends","insertUser","uniqueId_default","bodyClasses","userUrl","titleTime","aria-pressed","CollapsableContent","bodyRaw","apiv2","response","quote","dateUpdated","dateInserted","Date","toLocaleString","year","month","day","weekday","hour","minute","initAllUserContent","scripts_embeds","getty","UserContent","UserContent_extends","Container","Container_extends","tag","CompoundComponent","childIsOfType","displayName","childType","CompoundComponent_extends","PanelLayout","PanelLayout_extends","device","getParsedChildren","isMobile","DeviceChecker","MOBILE","isDesktop","DESKTOP","shouldRenderLeftPanel","leftTop","leftBottom","shouldRenderRightPanel","rightTop","rightBottom","panelClasses","noLeftPanel","noRightPanel","crumbClasses","breadcrumbs","Panel","PanelArea","hasAdjacentPanel","middleTop","middleBottom","LeftTop","LeftBottom","MiddleTop","MiddleBottom","RightTop","RightBottom","PanelLayout_Breadcrumbs","isMain","layouts_CompoundComponent","PanelWidget","DocumentTitle","DocumentTitle_extends","getHeadTitle","componentWillUpdate","nextProps","siteTitle","parts","NotFoundPage","NotFoundPage_extends","components_DocumentTitle","message","ArticlePage_ArticlePage","ArticlePage","toggleMobileMenu","menuOpen","ArticlePage_extends","articlePageState","parseIDFromSlug","status","api","ERROR","components_NotFoundPage","SUCCESS","article","Fragment","components_Container","layouts_PanelLayout","components_Breadcrumbs","dummyBreadcrumbData","components_PageHeading","components_UserContent","bodyRendered","getArticle","PENDING","componentWillUnmount","clearPageState","slug","params","withRedux","es","knowledge","articlePage","dispatch","articlePageActions","clearArticlePageState","DeviceContext"],"mappings":"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","file":"plugins/knowledge/js/webpack/pages/kb/article.min.js?90409ee4954717ff1cd1","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Embed utility functions and types.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { IDiscussionEmbed, ICommentEmbed, IScrapeData } from \"@dashboard/@types/api\";\n\nexport const FOCUS_CLASS = \"embed-focusableElement\";\n\nexport type IQuoteEmbedData = IDiscussionEmbed | ICommentEmbed;\nexport type IEmbedData = IScrapeData;\n\nexport interface IEmbedElements {\n    root: HTMLElement;\n    content: HTMLElement;\n}\n\nexport type EmbedRenderer = (elements: IEmbedElements, data: IEmbedData, inEditor: boolean) => Promise<void>;\n\nexport interface IEmbedProps<T = IScrapeData> {\n    data: T;\n    inEditor: boolean;\n    onRenderComplete: () => void;\n}\n\nconst embedRenderers: {\n    [type: string]: EmbedRenderer;\n} = {};\nconst embedComponents: {\n    [type: string]: React.ComponentClass<IEmbedProps>;\n} = {};\n\n/**\n * Get all of the registered embed types.\n */\nexport function getEditorEmbedTypes() {\n    return Object.keys(embedRenderers);\n}\n\n/**\n * Register an embed rendering function.\n */\nexport function registerEmbedRenderer(type: string, renderer: EmbedRenderer) {\n    embedRenderers[type] = renderer;\n}\n\n/**\n * Register an embed rendering function.\n */\nexport function registerEmbedComponent(type: string, component: React.ComponentClass<IEmbedProps>) {\n    embedComponents[type] = component;\n}\n\n/**\n * Render an embed into a DOM node based on it's type.\n */\nexport function renderEmbed(elements: IEmbedElements, data: IEmbedData, inEditor = true): Promise<void> {\n    return new Promise((resolve, reject) => {\n        if (!data.type) {\n            throw new Error(\"The embed type was not provided.\");\n        }\n\n        if (data.type === \"link\") {\n            elements.root.classList.add(\"embedText\");\n            elements.content.classList.add(\"embedText-content\");\n            elements.content.classList.add(\"embedLink-content\");\n        }\n\n        if (data.type === \"quote\") {\n            elements.root.classList.add(\"embedText\");\n            elements.content.classList.add(\"embedText-content\");\n            elements.content.classList.add(\"embedQuote-content\");\n        }\n\n        const renderer = data.type && embedRenderers[data.type];\n        const Component = data.type && embedComponents[data.type];\n\n        if (renderer) {\n            return renderer(elements, data, inEditor);\n        } else if (Component) {\n            ReactDOM.render(\n                <Component data={data as IScrapeData} inEditor={inEditor} onRenderComplete={resolve} />,\n                elements.content,\n            );\n        } else {\n            throw new Error(\"Could not find a renderer for the embed type - \" + data.type);\n        }\n    });\n}\n","/**\n * Utilities that have a hard dependency on the DOM.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as utility from \"@dashboard/utility\";\nimport twemoji from \"twemoji\";\nimport tabbable from \"tabbable\";\nimport { logError, log } from \"@dashboard/utility\";\nimport debounce from \"lodash/debounce\";\n\n/**\n * Use the browser's built-in functionality to quickly and safely escape a string.\n *\n * @param str - The string to escape.\n *\n * @returns Escaped HTML.\n */\nexport function escapeHTML(str: string): string {\n    const div = document.createElement(\"div\");\n    div.appendChild(document.createTextNode(str));\n    return div.innerHTML;\n}\n\n/**\n * Use the browser's built-in functionality to quickly unescape a string.\n * UNSAFE with unsafe strings; only use on previously-escaped ones!\n *\n * @param escapedString - A previously escaped string.\n *\n * @returns The unescaped string.\n */\nexport function unescapeHTML(escapedString: string): string {\n    const div = document.createElement(\"div\");\n    div.innerHTML = escapedString;\n    const child = div.childNodes[0];\n    return child && child.nodeValue ? child.nodeValue : \"\";\n}\n\n/**\n * Add the hidden class and aria-hidden attribute to an Element.\n *\n * @param element - The DOM Element to modify.\n */\nexport function hideElement(element: Element) {\n    element.classList.add(\"u-isHidden\");\n    element.setAttribute(\"aria-hidden\", \"true\");\n}\n\n/**\n * Remove the hidden class and aria-hidden attribute to an Element.\n *\n * @param element - The DOM Element to modify.\n */\nexport function unhideElement(element: Element) {\n    element.classList.remove(\"u-isHidden\");\n    element.removeAttribute(\"aria-hidden\");\n}\n\n/**\n * Check if an element is visible or not.\n *\n * @param element - The element to check.\n *\n * @returns The visibility.\n */\nexport function elementIsVisible(element: HTMLElement): boolean {\n    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n\n/**\n * Get the form data out of a form element.\n *\n * @param {Element} formElement - The element to get the data out of.\n *\n * @returns {Object}\n */\nexport function getFormData(formElement) {\n    if (!(formElement instanceof HTMLFormElement)) {\n        return {};\n    }\n\n    const data = new FormData(formElement) as any;\n    const result = {};\n\n    data.forEach((key, value) => {\n        result[key] = value;\n    });\n\n    return result;\n}\n\nconst delegatedEventListeners = {};\n\n/**\n * Create an event listener using event delegation.\n *\n * @param eventName - The Event to listen for.\n * @param filterSelector - A CSS selector to match against.\n * @param callback - The callback function. This gets passed the fired event.\n * @param scopeSelector - And element to scope the event listener to.\n *\n * @returns The hash of the event. Save this to use removeDelegatedEvent().\n */\nexport function delegateEvent(\n    eventName: string,\n    filterSelector: string,\n    callback: (event: Event, triggeringElement: HTMLElement) => boolean | void,\n    scopeSelector?: string | HTMLElement,\n): string | undefined {\n    let functionKey = eventName + filterSelector + callback.toString();\n\n    let scope;\n\n    if (typeof scopeSelector === \"string\") {\n        scope = document.querySelector(scopeSelector);\n\n        if (!scope) {\n            throw new Error(`Unable to find element in the document for scopeSelector: ${scopeSelector}`);\n        } else {\n            functionKey += scopeSelector;\n        }\n    } else if (scopeSelector instanceof HTMLElement) {\n        scope = scopeSelector;\n    } else {\n        scope = document;\n    }\n\n    const eventHash = utility.hashString(functionKey).toString();\n\n    if (!Object.keys(delegatedEventListeners).includes(eventHash)) {\n        const wrappedCallback = event => {\n            // Get the nearest DOMNode that matches the given selector.\n            const match = filterSelector ? event.target.closest(filterSelector) : event.target;\n\n            if (match) {\n                // Call the callback with the matching element as the context.\n                return callback.call(match, event, match);\n            }\n        };\n\n        const listener = scope.addEventListener(eventName, wrappedCallback);\n        delegatedEventListeners[eventHash] = {\n            scope,\n            eventName,\n            wrappedCallback,\n        };\n        return eventHash;\n    }\n}\n\n/**\n * Remove a delegated event listener.\n *\n * @param eventHash - The event hash passed from delegateEvent().\n */\nexport function removeDelegatedEvent(eventHash: string) {\n    const { scope, eventName, wrappedCallback } = delegatedEventListeners[eventHash];\n    scope.removeEventListener(eventName, wrappedCallback);\n    delete delegatedEventListeners[eventHash];\n}\n\nexport function removeAllDelegatedEvents() {\n    Object.keys(delegatedEventListeners).forEach(key => {\n        removeDelegatedEvent(key);\n    });\n}\n\n/**\n * Toggle any attribute on an element.\n *\n * @param element - The element to toggle on.\n * @param attribute - The attribute to toggle.\n */\nexport function toggleAttribute(element: Element, attribute: string) {\n    const newValue = element.getAttribute(attribute) === \"false\";\n    element.setAttribute(attribute, newValue);\n}\n\nconst dataMap = new WeakMap();\n\n/**\n * Set a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to assosciate the data with.\n * @param key - The key to assosciate the data with.\n * @param value - The value to store.\n */\nexport function setData(element: Element, key: string, value: any) {\n    const initialValue = dataMap.has(element) ? dataMap.get(element) : {};\n    initialValue[key] = value;\n\n    dataMap.set(element, initialValue);\n}\n\n/**\n * Get a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to lookup.\n * @param key - The key to lookup.\n * @param defaultValue - A value to use if the element or key aren't found.\n */\nexport function getData(element: Element, key: string, defaultValue?: any) {\n    if (dataMap.has(element) && dataMap.get(element)[key]) {\n        return dataMap.get(element)[key];\n    }\n\n    const attributeString = `data-${key}`;\n\n    if (element.hasAttribute(attributeString)) {\n        return element.getAttribute(attributeString);\n    }\n\n    return defaultValue;\n}\n\n/**\n * Get an HTML element from a CSS selector or DOM Node.\n *\n * @param {string|Node} selectorOrElement - A CSS selector or an HTML element.\n *\n * @throws {Error} - If no element was found.\n * @returns {HTMLElement} - An HTMLElement no matter what.\n */\nexport function ensureHtmlElement(selectorOrElement) {\n    if (typeof selectorOrElement === \"string\") {\n        selectorOrElement = document.querySelector(selectorOrElement);\n    }\n\n    if (!(selectorOrElement instanceof HTMLElement)) {\n        throw new Error(`HTMLElement could not be found for ${selectorOrElement}.`);\n    }\n\n    return selectorOrElement;\n}\n\n// Test Char for Emoji 5.0\nconst testChar = \"\\uD83E\\uDD96\"; // U+1F996 T-Rex -> update test character with new emoji version support.\n\nlet emojiSupportedCache: boolean | null = null;\n\nexport function isEmojiSupported() {\n    if (emojiSupportedCache !== null) {\n        return emojiSupportedCache;\n    }\n\n    if (process.env.NODE_ENV !== \"test\") {\n        // Test environment\n        const canvas = document.createElement(\"canvas\");\n        if (canvas.getContext && canvas.getContext(\"2d\")) {\n            const pixelRatio = window.devicePixelRatio || 1;\n            const offset = 12 * pixelRatio;\n            const ctx = canvas.getContext(\"2d\");\n            ctx!.fillStyle = \"#f00\";\n            ctx!.textBaseline = \"top\";\n            ctx!.font = \"32px Arial\";\n            ctx!.fillText(testChar, 0, 0);\n            emojiSupportedCache = ctx!.getImageData(offset, offset, 1, 1).data[0] !== 0;\n        } else {\n            emojiSupportedCache = false;\n        }\n    } else {\n        emojiSupportedCache = true;\n    }\n\n    return emojiSupportedCache;\n}\n\nconst emojiOptions = {\n    className: \"fallBackEmoji\",\n    size: \"72x72\",\n};\n\n/**\n * Returns either native emoji or fallback image\n *\n * @param stringOrNode - A DOM Node or string to convert.\n */\nexport function convertToSafeEmojiCharacters(stringOrNode: string | Node) {\n    if (isEmojiSupported()) {\n        return stringOrNode;\n    }\n    return twemoji.parse(stringOrNode, emojiOptions);\n}\n\n// A weakmap so we can store multiple load callbacks per script.\nconst loadEventCallbacks: WeakMap<Node, Array<(event) => void>> = new WeakMap();\nconst rejectionCache: Map<string, Error> = new Map();\n\n/**\n * Dynamically load a javascript file.\n */\nexport function ensureScript(scriptUrl: string) {\n    return new Promise((resolve, reject) => {\n        const existingScript: HTMLScriptElement | null = document.querySelector(`script[src='${scriptUrl}']`);\n        if (rejectionCache.has(scriptUrl)) {\n            reject(rejectionCache.get(scriptUrl));\n        }\n        if (existingScript) {\n            if (loadEventCallbacks.has(existingScript)) {\n                // Add another resolveCallback into the weakmap.\n                const callbacks = loadEventCallbacks.get(existingScript);\n                callbacks && callbacks.push(resolve);\n            } else {\n                // Script is already loaded. Resolve immediately.\n                resolve();\n            }\n        } else {\n            // The script doesn't exist. Lets create it.\n            const head = document.getElementsByTagName(\"head\")[0];\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = scriptUrl;\n            script.onerror = (event: ErrorEvent) => {\n                const error = new Error(\"Failed to load a required embed script\");\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            };\n\n            const timeout = setTimeout(() => {\n                const error = new Error(`Loading of the script ${scriptUrl} has timed out.`);\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            }, 10000);\n\n            loadEventCallbacks.set(script, [resolve]);\n\n            script.onload = event => {\n                clearTimeout(timeout);\n                const callbacks = loadEventCallbacks.get(script);\n                callbacks && callbacks.forEach(callback => callback(event));\n                loadEventCallbacks.delete(script);\n            };\n\n            head.appendChild(script);\n        }\n    });\n}\n\ninterface ITabbableOptions {\n    root: Element;\n    excludedElements: Element[];\n    excludedRoots: Element[];\n    reverse: boolean;\n    fromElement: Element;\n    allowLooping: boolean;\n}\n\n/**\n * Get the next tabbable item within a given tabindex.\n *\n * WARNING: Performance can be poor if you pass many excluded roots and do not\n * sufficiently narrow the tree your are looking in.\n *\n * @param options\n * @property root - The root element to look in.\n * @property excludedElements - Elements to ignore.\n * @property excludedRoots - These element's children will be ignored.\n * @property reverse - True to get the previous element instead.\n * @property fromElement - The currently focused element.\n * @property allowLooping - Whether or not the focus should loop around from beginning <-> end.\n */\nexport function getNextTabbableElement(options?: Partial<ITabbableOptions>): HTMLElement | null {\n    const defaultTabbableOptions: ITabbableOptions = {\n        root: document.documentElement,\n        excludedElements: [],\n        excludedRoots: [],\n        reverse: false,\n        fromElement: document.activeElement,\n        allowLooping: true,\n    };\n\n    // Merge the passed options and the defaults.\n    const finalOptions = {\n        ...defaultTabbableOptions,\n        ...options,\n    } as ITabbableOptions;\n\n    if (!(finalOptions.fromElement instanceof HTMLElement)) {\n        logError(\"Unable to tab to next element, `fromElement` given is not valid: \", finalOptions.fromElement);\n        return null;\n    }\n\n    const tabbables = tabbable(finalOptions.root).filter((tabbableElement: Element) => {\n        // We want to excempt items that are the active item or a parent of the active item\n        // because otherwise we would not be able to tab away from them.\n        const elementIsActiveOrChildOfActive =\n            finalOptions.fromElement === tabbableElement || tabbableElement.contains(finalOptions.fromElement);\n\n        if (!elementIsActiveOrChildOfActive) {\n            if (finalOptions.excludedElements.includes(tabbableElement)) {\n                return false;\n            }\n            for (const excludedRoot of finalOptions.excludedRoots) {\n                if (excludedRoot !== tabbableElement && excludedRoot.contains(tabbableElement)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    });\n\n    const currentTabIndex = tabbables.indexOf(finalOptions.fromElement);\n\n    if (currentTabIndex < 0) {\n        return null;\n    }\n\n    let targetIndex = finalOptions.reverse ? currentTabIndex - 1 : currentTabIndex + 1;\n\n    if (finalOptions.allowLooping) {\n        // Loop over the beginning and ends\n        if (targetIndex < 0) {\n            targetIndex = tabbables.length - 1;\n        } else if (targetIndex >= tabbables.length) {\n            targetIndex = 0;\n        }\n    }\n\n    return tabbables[targetIndex] || null;\n}\n\nfunction checkDomTreeWasClicked(rootNode: Element | null, clickedElement: Element) {\n    return rootNode && clickedElement && (rootNode.contains(clickedElement as Element) || rootNode === clickedElement);\n}\n\n/**\n * Determine if the currently focused element is somewhere inside of (or the same as)\n * a given Element.\n *\n * @param rootNode - The root node to look in.\n */\nfunction checkDomTreeHasFocus(rootNode: Element | null, event: FocusEvent, callback: (hasFocus: boolean) => void) {\n    setTimeout(() => {\n        const possibleTargets = [\n            // NEEDS TO COME FIRST, because safari will populate relatedTarget on focusin, and its not what we're looking for.\n            document.activeElement, // IE11, Safari.\n            event.relatedTarget as Element, // Chrome (The actual standard)\n            (event as any).explicitOriginalTarget, // Firefox\n        ];\n\n        let activeElement = null;\n        for (const target of possibleTargets) {\n            if (target && target !== document.body) {\n                activeElement = target;\n                break;\n            }\n        }\n\n        if (activeElement !== null) {\n            const hasFocus =\n                rootNode && activeElement && (activeElement === rootNode || rootNode.contains(activeElement));\n\n            // We will only invalidate based on something actually getting focus.\n            callback(!!hasFocus);\n        }\n    }, 0);\n}\n\n/**\n * Register a callback for focusin and focusin out events. The main improvement here over registering\n * the listeners yourself is that the events fire for the whole tree as 1 item instead of as\n * individual notes.\n *\n * This is particularly useful when you want to track focus leaving or enterring a component\n * without caring about the individual contents inside.\n *\n * @param rootNode - The root dom node to watch on.\n * @param callback - A callback for when the tree focuses and blurs.\n */\nexport function watchFocusInDomTree(rootNode: Element, callback: (hasFocus: boolean) => void) {\n    rootNode.addEventListener(\n        \"focusout\",\n        (event: FocusEvent) => {\n            checkDomTreeHasFocus(rootNode, event, hasFocus => {\n                !hasFocus && callback(false);\n            });\n        },\n        true,\n    );\n\n    rootNode.addEventListener(\n        \"focusin\",\n        (event: FocusEvent) => {\n            checkDomTreeHasFocus(rootNode, event, hasFocus => {\n                hasFocus && callback(true);\n            });\n        },\n        true,\n    );\n\n    document.addEventListener(\"click\", event => {\n        const triggeringElement = event.target as Element;\n        const wasClicked = checkDomTreeWasClicked(rootNode, triggeringElement);\n        if (!wasClicked) {\n            callback(false);\n        }\n    });\n}\n\n/**\n * Sticky header handling\n */\nfunction handleStickyHeaderState(element, data) {\n    const goingDown = data.lastScrollPos < data.currentScrollPos;\n    const isAtTopOfPage = data.currentScrollPos === 0;\n    const elementHeight = element.offsetHeight;\n    const isPastHeader =\n        element.style.position !== \"fixed\" && element.offsetTop + elementHeight <= data.currentScrollPos;\n    const elementTop = element.style.top !== \"\" ? parseInt(element.style.top, 10) : false;\n\n    element.classList.toggle(\"isScrollingDown\", goingDown);\n    element.classList.toggle(\"isScrollingUp\", !goingDown);\n    element.classList.toggle(\"isAtTop\", isAtTopOfPage);\n\n    if (goingDown) {\n        element.style.position = \"\";\n        if (isPastHeader) {\n            element.style.top = `${data.currentScrollPos - elementHeight}px`;\n        } else {\n            if (!elementTop) {\n                element.style.top = `${data.currentScrollPos}px`;\n            }\n        }\n    } else {\n        // going UP\n        if (data.currentScrollPos <= elementTop) {\n            element.style.top = \"\";\n            element.style.position = \"fixed\";\n        }\n    }\n}\n\n/**\n * Vanilla's default way to handle sticky headers\n */\nexport function stickyHeader() {\n    const header = document.querySelector(\".stickyHeader\");\n    if (header !== null) {\n        let currentScrollPos = Math.max(window.scrollY, 0);\n        let lastScrollPos = -1;\n\n        handleStickyHeaderState(header, {\n            currentScrollPos,\n            lastScrollPos,\n        });\n\n        window.addEventListener(\"scroll\", e => {\n            debounce(\n                () => {\n                    window.requestAnimationFrame(data => {\n                        lastScrollPos = currentScrollPos;\n                        currentScrollPos = Math.max(window.scrollY, 0);\n                        handleStickyHeaderState(header, {\n                            currentScrollPos,\n                            lastScrollPos,\n                        });\n                    });\n                },\n                100,\n                {\n                    leading: true,\n                },\n            )();\n        });\n    } else {\n        utility.log(\"No sticky header found\");\n    }\n}\n\n/**\n * Handler for an file being dragged and dropped.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getDraggedImage(event: DragEvent): File | undefined {\n    if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length) {\n        event.preventDefault();\n        const files = Array.from(event.dataTransfer.files);\n\n        // Currently only 1 file is supported.\n        const mainFile = files[0];\n        return mainFile;\n    }\n}\n\n/**\n * Handler for an file being pasted.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getPastedImage(event: ClipboardEvent): File | undefined | null {\n    if (event.clipboardData && event.clipboardData.items && event.clipboardData.items.length) {\n        const files = Array.from(event.clipboardData.items)\n            .map((item: any) => (item.getAsFile ? item.getAsFile() : null))\n            .filter(Boolean);\n\n        if (files.length > 0) {\n            event.preventDefault();\n            // Currently only 1 file is supported.\n            const mainFile = files[0];\n            return mainFile;\n        }\n    }\n}\n\n/**\n * Calculate the height of element with simulated margin collapse.\n *\n * This is ideal for getting the calculate height of a fixed number of items. (not the entire parent).\n *\n * It considers:\n * - Element height\n * - Padding\n * - Borders\n * - Margins\n * - Margin collapsing.\n *\n * @param element - The element to measure\n * @param previousBottomMargin - The bottom margin of the previous element. You can use the returned bottom margin from this function to get this.\n */\nexport function getElementHeight(\n    element: Element,\n    previousBottomMargin: number = 0,\n): {\n    height: number;\n    bottomMargin: number;\n} {\n    const height = element.getBoundingClientRect().height;\n    const { marginTop, marginBottom } = window.getComputedStyle(element);\n\n    let topHeight = marginTop ? parseInt(marginTop, 10) : 0;\n    // Simulate a margin-collapsed height.\n    topHeight = Math.max(topHeight - previousBottomMargin, 0);\n\n    const bottomHeight = marginBottom ? parseInt(marginBottom, 10) : 0;\n    const finalHeight = height + topHeight + bottomHeight;\n\n    return {\n        height: finalHeight,\n        bottomMargin: bottomHeight,\n    };\n}\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IEmbedData, IEmbedElements, registerEmbedRenderer } from \"@dashboard/embeds\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent, onReady } from \"@dashboard/application\";\nimport { IScrapeData } from \"@dashboard/@types/api\";\n\nexport function initGettyEmbeds() {\n    registerEmbedRenderer(\"getty\", renderGetty);\n    onReady(convertGettyEmbeds);\n    onContent(convertGettyEmbeds);\n}\n\n/**\n * Render a single getty embed.\n */\nexport async function renderGetty(elements: IEmbedElements, data: IScrapeData) {\n    const contentElement = elements.content;\n    const url = data.attributes.post;\n    const newLink = document.createElement(\"a\");\n    newLink.classList.add(\"gie-single\");\n    newLink.setAttribute(\"href\", \"http://www.gettyimages.ca/detail/\" + url);\n    newLink.setAttribute(\"id\", data.attributes.id);\n    contentElement.style.width = `${data.width}px`;\n    contentElement.appendChild(newLink);\n    setImmediate(() => {\n        void loadGettyImages(data);\n    });\n}\n\n/**\n * Renders posted getty embeds.\n */\nexport async function convertGettyEmbeds() {\n    const gettyPosts = document.querySelectorAll(\".js-gettyEmbed\");\n    if (gettyPosts.length > 0) {\n        for (const post of gettyPosts) {\n            const url = post.getAttribute(\"href\") || \"\";\n            const id = post.getAttribute(\"id\");\n            const sig = post.getAttribute(\"data-sig\");\n            const height = Number(post.getAttribute(\"data-height\")) || 1;\n            const width = Number(post.getAttribute(\"data-width\")) || 1;\n            const items = post.getAttribute(\"data-items\");\n            const capt = post.getAttribute(\"data-capt\");\n            const tld = post.getAttribute(\"data-tld\");\n            const i360 = post.getAttribute(\"data-is360\");\n            const data: IEmbedData = {\n                type: \"getty\",\n                url,\n                height,\n                width,\n                attributes: { id, sig, items, capt, tld, i360 },\n            };\n            await loadGettyImages(data);\n            post.classList.remove(\"js-gettyEmbed\");\n        }\n    }\n}\n\n/**\n * Loads getty embeds into a global object and fire getty's widget.js.\n * @param data\n * @returns {Promise<void>}\n */\nasync function loadGettyImages(data) {\n    const fallbackCallback = c => {\n        (window.gie.q = window.gie.q || []).push(c);\n    };\n    // This is part of Getty's embed code, we need to ensure embeds are loaded and sent to their widget.js script.\n    window.gie = window.gie || fallbackCallback;\n\n    window.gie(() => {\n        window.gie.widgets.load({\n            id: data.attributes.id,\n            sig: data.attributes.sig,\n            w: data.width + \"px\",\n            h: data.height + \"px\",\n            items: data.attributes.items,\n            caption: data.attributes.isCaptioned,\n            tld: data.attributes.tld,\n            is360: data.attributes.is360,\n        });\n    });\n\n    /// DO NOT IGNORE\n    /// This will turn totally sideways if window.gie is not populated before the script is initially loaded.\n    await ensureScript(\"//embed-cdn.gettyimages.com/widgets.js\");\n}\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var location = global.location || {};\n/*jslint indent: 2, browser: true, bitwise: true, plusplus: true */\nvar twemoji = (function (\n  /*! Copyright Twitter Inc. and other contributors. Licensed under MIT *//*\n    https://github.com/twitter/twemoji/blob/gh-pages/LICENSE\n  */\n\n  // WARNING:   this file is generated automatically via\n  //            `node twemoji-generator.js`\n  //            please update its `createTwemoji` function\n  //            at the bottom of the same file instead.\n\n) {\n  'use strict';\n\n  /*jshint maxparams:4 */\n\n  var\n    // the exported module object\n    twemoji = {\n\n\n    /////////////////////////\n    //      properties     //\n    /////////////////////////\n\n      // default assets url, by default will be Twitter Inc. CDN\n      base: 'https://twemoji.maxcdn.com/2/',\n\n      // default assets file extensions, by default '.png'\n      ext: '.png',\n\n      // default assets/folder size, by default \"72x72\"\n      // available via Twitter CDN: 72\n      size: '72x72',\n\n      // default class name, by default 'emoji'\n      className: 'emoji',\n\n      // basic utilities / helpers to convert code points\n      // to JavaScript surrogates and vice versa\n      convert: {\n\n        /**\n         * Given an HEX codepoint, returns UTF16 surrogate pairs.\n         *\n         * @param   string  generic codepoint, i.e. '1F4A9'\n         * @return  string  codepoint transformed into utf16 surrogates pair,\n         *          i.e. \\uD83D\\uDCA9\n         *\n         * @example\n         *  twemoji.convert.fromCodePoint('1f1e8');\n         *  // \"\\ud83c\\udde8\"\n         *\n         *  '1f1e8-1f1f3'.split('-').map(twemoji.convert.fromCodePoint).join('')\n         *  // \"\\ud83c\\udde8\\ud83c\\uddf3\"\n         */\n        fromCodePoint: fromCodePoint,\n\n        /**\n         * Given UTF16 surrogate pairs, returns the equivalent HEX codepoint.\n         *\n         * @param   string  generic utf16 surrogates pair, i.e. \\uD83D\\uDCA9\n         * @param   string  optional separator for double code points, default='-'\n         * @return  string  utf16 transformed into codepoint, i.e. '1F4A9'\n         *\n         * @example\n         *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3');\n         *  // \"1f1e8-1f1f3\"\n         *\n         *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3', '~');\n         *  // \"1f1e8~1f1f3\"\n         */\n        toCodePoint: toCodePoint\n      },\n\n\n    /////////////////////////\n    //       methods       //\n    /////////////////////////\n\n      /**\n       * User first: used to remove missing images\n       * preserving the original text intent when\n       * a fallback for network problems is desired.\n       * Automatically added to Image nodes via DOM\n       * It could be recycled for string operations via:\n       *  $('img.emoji').on('error', twemoji.onerror)\n       */\n      onerror: function onerror() {\n        if (this.parentNode) {\n          this.parentNode.replaceChild(createText(this.alt, false), this);\n        }\n      },\n\n      /**\n       * Main method/logic to generate either <img> tags or HTMLImage nodes.\n       *  \"emojify\" a generic text or DOM Element.\n       *\n       * @overloads\n       *\n       * String replacement for `innerHTML` or server side operations\n       *  twemoji.parse(string);\n       *  twemoji.parse(string, Function);\n       *  twemoji.parse(string, Object);\n       *\n       * HTMLElement tree parsing for safer operations over existing DOM\n       *  twemoji.parse(HTMLElement);\n       *  twemoji.parse(HTMLElement, Function);\n       *  twemoji.parse(HTMLElement, Object);\n       *\n       * @param   string|HTMLElement  the source to parse and enrich with emoji.\n       *\n       *          string              replace emoji matches with <img> tags.\n       *                              Mainly used to inject emoji via `innerHTML`\n       *                              It does **not** parse the string or validate it,\n       *                              it simply replaces found emoji with a tag.\n       *                              NOTE: be sure this won't affect security.\n       *\n       *          HTMLElement         walk through the DOM tree and find emoji\n       *                              that are inside **text node only** (nodeType === 3)\n       *                              Mainly used to put emoji in already generated DOM\n       *                              without compromising surrounding nodes and\n       *                              **avoiding** the usage of `innerHTML`.\n       *                              NOTE: Using DOM elements instead of strings should\n       *                              improve security without compromising too much\n       *                              performance compared with a less safe `innerHTML`.\n       *\n       * @param   Function|Object  [optional]\n       *                              either the callback that will be invoked or an object\n       *                              with all properties to use per each found emoji.\n       *\n       *          Function            if specified, this will be invoked per each emoji\n       *                              that has been found through the RegExp except\n       *                              those follwed by the invariant \\uFE0E (\"as text\").\n       *                              Once invoked, parameters will be:\n       *\n       *                                iconId:string     the lower case HEX code point\n       *                                                  i.e. \"1f4a9\"\n       *\n       *                                options:Object    all info for this parsing operation\n       *\n       *                                variant:char      the optional \\uFE0F (\"as image\")\n       *                                                  variant, in case this info\n       *                                                  is anyhow meaningful.\n       *                                                  By default this is ignored.\n       *\n       *                              If such callback will return a falsy value instead\n       *                              of a valid `src` to use for the image, nothing will\n       *                              actually change for that specific emoji.\n       *\n       *\n       *          Object              if specified, an object containing the following properties\n       *\n       *            callback   Function  the callback to invoke per each found emoji.\n       *            base       string    the base url, by default twemoji.base\n       *            ext        string    the image extension, by default twemoji.ext\n       *            size       string    the assets size, by default twemoji.size\n       *\n       * @example\n       *\n       *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\");\n       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"/> emoji!\n       *\n       *\n       *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\", function(iconId, options) {\n       *    return '/assets/' + iconId + '.gif';\n       *  });\n       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"/> emoji!\n       *\n       *\n       * twemoji.parse(\"I \\u2764\\uFE0F emoji!\", {\n       *   size: 72,\n       *   callback: function(iconId, options) {\n       *     return '/assets/' + options.size + '/' + iconId + options.ext;\n       *   }\n       * });\n       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/72x72/2764.png\"/> emoji!\n       *\n       */\n      parse: parse,\n\n      /**\n       * Given a string, invokes the callback argument\n       *  per each emoji found in such string.\n       * This is the most raw version used by\n       *  the .parse(string) method itself.\n       *\n       * @param   string    generic string to parse\n       * @param   Function  a generic callback that will be\n       *                    invoked to replace the content.\n       *                    This calback wil receive standard\n       *                    String.prototype.replace(str, callback)\n       *                    arguments such:\n       *  callback(\n       *    rawText,  // the emoji match\n       *  );\n       *\n       *                    and others commonly received via replace.\n       */\n      replace: replace,\n\n      /**\n       * Simplify string tests against emoji.\n       *\n       * @param   string  some text that might contain emoji\n       * @return  boolean true if any emoji was found, false otherwise.\n       *\n       * @example\n       *\n       *  if (twemoji.test(someContent)) {\n       *    console.log(\"emoji All The Things!\");\n       *  }\n       */\n      test: test\n    },\n\n    // used to escape HTML special chars in attributes\n    escaper = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      \"'\": '&#39;',\n      '\"': '&quot;'\n    },\n\n    // RegExp based on emoji's official Unicode standards\n    // http://www.unicode.org/Public/UNIDATA/EmojiSources.txt\n    re = /\\ud83d[\\udc68-\\udc69](?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f|\\u2696\\ufe0f|\\u2708\\ufe0f|\\ud83c[\\udf3e\\udf73\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75]|\\u26f9)(?:\\ufe0f|\\ud83c[\\udffb-\\udfff])\\u200d[\\u2640\\u2642]\\ufe0f|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd35\\udd37-\\udd39\\udd3d\\udd3e\\uddd6-\\udddd])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f\\u200d\\ud83c\\udf08|\\ud83c\\udff4\\u200d\\u2620\\ufe0f|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f|\\ud83e\\uddde\\u200d\\u2640\\ufe0f|\\ud83e\\uddde\\u200d\\u2642\\ufe0f|\\ud83e\\udddf\\u200d\\u2640\\ufe0f|\\ud83e\\udddf\\u200d\\u2642\\ufe0f|(?:\\u002a)\\ufe0f?\\u20e3|(?:\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca-\\udfcc]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd74\\udd75\\udd7a\\udd90\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd18-\\udd1c\\udd1e\\udd1f\\udd26\\udd30-\\udd39\\udd3d\\udd3e\\uddd1-\\udddd]|[\\u261d\\u26f7\\u26f9\\u270a-\\u270d])(?:\\ud83c[\\udffb-\\udfff]|)|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc65\\udb40\\udc6e\\udb40\\udc67\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc73\\udb40\\udc63\\udb40\\udc74\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc77\\udb40\\udc6c\\udb40\\udc73\\udb40\\udc7f|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\u0023\\u20e3|\\u0030\\u20e3|\\u0031\\u20e3|\\u0032\\u20e3|\\u0033\\u20e3|\\u0034\\u20e3|\\u0035\\u20e3|\\u0036\\u20e3|\\u0037\\u20e3|\\u0038\\u20e3|\\u0039\\u20e3|\\ud800\\udc00|\\ud83c[\\udc04\\udccf\\udd70\\udd71\\udd7e\\udd7f\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude02\\ude1a\\ude2f\\ude32-\\ude3a\\ude50\\ude51\\udf00-\\udf21\\udf24-\\udf84\\udf86-\\udf93\\udf96\\udf97\\udf99-\\udf9b\\udf9e-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcd-\\udff0\\udff3-\\udff5\\udff7-\\udfff]|\\ud83d[\\udc00-\\udc41\\udc44\\udc45\\udc51-\\udc65\\udc6a-\\udc6d\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udca9\\udcab-\\udcfd\\udcff-\\udd3d\\udd49-\\udd4e\\udd50-\\udd67\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda4\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\udecb\\udecd-\\uded2\\udee0-\\udee5\\udee9\\udeeb\\udeec\\udef0\\udef3-\\udef8]|\\ud83e[\\udd10-\\udd17\\udd1d\\udd20-\\udd25\\udd27-\\udd2f\\udd3a\\udd3c\\udd40-\\udd45\\udd47-\\udd4c\\udd50-\\udd6b\\udd80-\\udd97\\uddc0\\uddd0\\uddde-\\udde6]|[\\u00a9\\u00ae\\u203c\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23e9-\\u23f3\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638\\u263a\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26ce\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2705\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274c\\u274e\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27a1\\u27b0\\u27bf\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299\\ue50a]|(?:\\u2639)(?:\\ufe0f|(?!\\ufe0e))/g,\n\n    // avoid runtime RegExp creation for not so smart,\n    // not JIT based, and old browsers / engines\n    UFE0Fg = /\\uFE0F/g,\n\n    // avoid using a string literal like '\\u200D' here because minifiers expand it inline\n    U200D = String.fromCharCode(0x200D),\n\n    // used to find HTML special chars in attributes\n    rescaper = /[&<>'\"]/g,\n\n    // nodes with type 1 which should **not** be parsed\n    shouldntBeParsed = /^(?:iframe|noframes|noscript|script|select|style|textarea)$/,\n\n    // just a private shortcut\n    fromCharCode = String.fromCharCode;\n\n  return twemoji;\n\n\n  /////////////////////////\n  //  private functions  //\n  //     declaration     //\n  /////////////////////////\n\n  /**\n   * Shortcut to create text nodes\n   * @param   string  text used to create DOM text node\n   * @return  Node  a DOM node with that text\n   */\n  function createText(text, clean) {\n    return document.createTextNode(clean ? text.replace(UFE0Fg, '') : text);\n  }\n\n  /**\n   * Utility function to escape html attribute text\n   * @param   string  text use in HTML attribute\n   * @return  string  text encoded to use in HTML attribute\n   */\n  function escapeHTML(s) {\n    return s.replace(rescaper, replacer);\n  }\n\n  /**\n   * Default callback used to generate emoji src\n   *  based on Twitter CDN\n   * @param   string    the emoji codepoint string\n   * @param   string    the default size to use, i.e. \"36x36\"\n   * @return  string    the image source to use\n   */\n  function defaultImageSrcGenerator(icon, options) {\n    return ''.concat(options.base, options.size, '/', icon, options.ext);\n  }\n\n  /**\n   * Given a generic DOM nodeType 1, walk through all children\n   * and store every nodeType 3 (#text) found in the tree.\n   * @param   Element a DOM Element with probably some text in it\n   * @param   Array the list of previously discovered text nodes\n   * @return  Array same list with new discovered nodes, if any\n   */\n  function grabAllTextNodes(node, allText) {\n    var\n      childNodes = node.childNodes,\n      length = childNodes.length,\n      subnode,\n      nodeType;\n    while (length--) {\n      subnode = childNodes[length];\n      nodeType = subnode.nodeType;\n      // parse emoji only in text nodes\n      if (nodeType === 3) {\n        // collect them to process emoji later\n        allText.push(subnode);\n      }\n      // ignore all nodes that are not type 1, that are svg, or that\n      // should not be parsed as script, style, and others\n      else if (nodeType === 1 && !('ownerSVGElement' in subnode) &&\n          !shouldntBeParsed.test(subnode.nodeName.toLowerCase())) {\n        grabAllTextNodes(subnode, allText);\n      }\n    }\n    return allText;\n  }\n\n  /**\n   * Used to both remove the possible variant\n   *  and to convert utf16 into code points.\n   *  If there is a zero-width-joiner (U+200D), leave the variants in.\n   * @param   string    the raw text of the emoji match\n   * @return  string    the code point\n   */\n  function grabTheRightIcon(rawText) {\n    // if variant is present as \\uFE0F\n    return toCodePoint(rawText.indexOf(U200D) < 0 ?\n      rawText.replace(UFE0Fg, '') :\n      rawText\n    );\n  }\n\n  /**\n   * DOM version of the same logic / parser:\n   *  emojify all found sub-text nodes placing images node instead.\n   * @param   Element   generic DOM node with some text in some child node\n   * @param   Object    options  containing info about how to parse\n    *\n    *            .callback   Function  the callback to invoke per each found emoji.\n    *            .base       string    the base url, by default twemoji.base\n    *            .ext        string    the image extension, by default twemoji.ext\n    *            .size       string    the assets size, by default twemoji.size\n    *\n   * @return  Element same generic node with emoji in place, if any.\n   */\n  function parseNode(node, options) {\n    var\n      allText = grabAllTextNodes(node, []),\n      length = allText.length,\n      attrib,\n      attrname,\n      modified,\n      fragment,\n      subnode,\n      text,\n      match,\n      i,\n      index,\n      img,\n      rawText,\n      iconId,\n      src;\n    while (length--) {\n      modified = false;\n      fragment = document.createDocumentFragment();\n      subnode = allText[length];\n      text = subnode.nodeValue;\n      i = 0;\n      while ((match = re.exec(text))) {\n        index = match.index;\n        if (index !== i) {\n          fragment.appendChild(\n            createText(text.slice(i, index), true)\n          );\n        }\n        rawText = match[0];\n        iconId = grabTheRightIcon(rawText);\n        i = index + rawText.length;\n        src = options.callback(iconId, options);\n        if (src) {\n          img = new Image();\n          img.onerror = options.onerror;\n          img.setAttribute('draggable', 'false');\n          attrib = options.attributes(rawText, iconId);\n          for (attrname in attrib) {\n            if (\n              attrib.hasOwnProperty(attrname) &&\n              // don't allow any handlers to be set + don't allow overrides\n              attrname.indexOf('on') !== 0 &&\n              !img.hasAttribute(attrname)\n            ) {\n              img.setAttribute(attrname, attrib[attrname]);\n            }\n          }\n          img.className = options.className;\n          img.alt = rawText;\n          img.src = src;\n          modified = true;\n          fragment.appendChild(img);\n        }\n        if (!img) fragment.appendChild(createText(rawText, false));\n        img = null;\n      }\n      // is there actually anything to replace in here ?\n      if (modified) {\n        // any text left to be added ?\n        if (i < text.length) {\n          fragment.appendChild(\n            createText(text.slice(i), true)\n          );\n        }\n        // replace the text node only, leave intact\n        // anything else surrounding such text\n        subnode.parentNode.replaceChild(fragment, subnode);\n      }\n    }\n    return node;\n  }\n\n  /**\n   * String/HTML version of the same logic / parser:\n   *  emojify a generic text placing images tags instead of surrogates pair.\n   * @param   string    generic string with possibly some emoji in it\n   * @param   Object    options  containing info about how to parse\n   *\n   *            .callback   Function  the callback to invoke per each found emoji.\n   *            .base       string    the base url, by default twemoji.base\n   *            .ext        string    the image extension, by default twemoji.ext\n   *            .size       string    the assets size, by default twemoji.size\n   *\n   * @return  the string with <img tags> replacing all found and parsed emoji\n   */\n  function parseString(str, options) {\n    return replace(str, function (rawText) {\n      var\n        ret = rawText,\n        iconId = grabTheRightIcon(rawText),\n        src = options.callback(iconId, options),\n        attrib,\n        attrname;\n      if (src) {\n        // recycle the match string replacing the emoji\n        // with its image counter part\n        ret = '<img '.concat(\n          'class=\"', options.className, '\" ',\n          'draggable=\"false\" ',\n          // needs to preserve user original intent\n          // when variants should be copied and pasted too\n          'alt=\"',\n          rawText,\n          '\"',\n          ' src=\"',\n          src,\n          '\"'\n        );\n        attrib = options.attributes(rawText, iconId);\n        for (attrname in attrib) {\n          if (\n            attrib.hasOwnProperty(attrname) &&\n            // don't allow any handlers to be set + don't allow overrides\n            attrname.indexOf('on') !== 0 &&\n            ret.indexOf(' ' + attrname + '=') === -1\n          ) {\n            ret = ret.concat(' ', attrname, '=\"', escapeHTML(attrib[attrname]), '\"');\n          }\n        }\n        ret = ret.concat('/>');\n      }\n      return ret;\n    });\n  }\n\n  /**\n   * Function used to actually replace HTML special chars\n   * @param   string  HTML special char\n   * @return  string  encoded HTML special char\n   */\n  function replacer(m) {\n    return escaper[m];\n  }\n\n  /**\n   * Default options.attribute callback\n   * @return  null\n   */\n  function returnNull() {\n    return null;\n  }\n\n  /**\n   * Given a generic value, creates its squared counterpart if it's a number.\n   *  As example, number 36 will return '36x36'.\n   * @param   any     a generic value.\n   * @return  any     a string representing asset size, i.e. \"36x36\"\n   *                  only in case the value was a number.\n   *                  Returns initial value otherwise.\n   */\n  function toSizeSquaredAsset(value) {\n    return typeof value === 'number' ?\n      value + 'x' + value :\n      value;\n  }\n\n\n  /////////////////////////\n  //  exported functions //\n  //     declaration     //\n  /////////////////////////\n\n  function fromCodePoint(codepoint) {\n    var code = typeof codepoint === 'string' ?\n          parseInt(codepoint, 16) : codepoint;\n    if (code < 0x10000) {\n      return fromCharCode(code);\n    }\n    code -= 0x10000;\n    return fromCharCode(\n      0xD800 + (code >> 10),\n      0xDC00 + (code & 0x3FF)\n    );\n  }\n\n  function parse(what, how) {\n    if (!how || typeof how === 'function') {\n      how = {callback: how};\n    }\n    // if first argument is string, inject html <img> tags\n    // otherwise use the DOM tree and parse text nodes only\n    return (typeof what === 'string' ? parseString : parseNode)(what, {\n      callback:   how.callback || defaultImageSrcGenerator,\n      attributes: typeof how.attributes === 'function' ? how.attributes : returnNull,\n      base:       typeof how.base === 'string' ? how.base : twemoji.base,\n      ext:        how.ext || twemoji.ext,\n      size:       how.folder || toSizeSquaredAsset(how.size || twemoji.size),\n      className:  how.className || twemoji.className,\n      onerror:    how.onerror || twemoji.onerror\n    });\n  }\n\n  function replace(text, callback) {\n    return String(text).replace(re, callback);\n  }\n\n  function test(text) {\n    // IE6 needs a reset before too\n    re.lastIndex = 0;\n    var result = re.test(text);\n    re.lastIndex = 0;\n    return result;\n  }\n\n  function toCodePoint(unicodeSurrogates, sep) {\n    var\n      r = [],\n      c = 0,\n      p = 0,\n      i = 0;\n    while (i < unicodeSurrogates.length) {\n      c = unicodeSurrogates.charCodeAt(i++);\n      if (p) {\n        r.push((0x10000 + ((p - 0xD800) << 10) + (c - 0xDC00)).toString(16));\n        p = 0;\n      } else if (0xD800 <= c && c <= 0xDBFF) {\n        p = c;\n      } else {\n        r.push(c.toString(16));\n      }\n    }\n    return r.join(sep || '-');\n  }\n\n}());\nif (!location.protocol) {\n  twemoji.base = twemoji.base.replace(/^http:/, \"\");\n}\nmodule.exports = twemoji;","module.exports = function(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var basicTabbables = [];\n  var orderedTabbables = [];\n\n  // A node is \"available\" if\n  // - it's computed style\n  var isUnavailable = createIsUnavailable(elementDocument);\n\n  var candidateSelectors = [\n    'input',\n    'select',\n    'a[href]',\n    'textarea',\n    'button',\n    '[tabindex]',\n  ];\n\n  var candidates = el.querySelectorAll(candidateSelectors.join(','));\n\n  if (options.includeContainer) {\n    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n    if (\n      candidateSelectors.some(function(candidateSelector) {\n        return matches.call(el, candidateSelector);\n      })\n    ) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var candidate, candidateIndexAttr, candidateIndex;\n  for (var i = 0, l = candidates.length; i < l; i++) {\n    candidate = candidates[i];\n    candidateIndexAttr = parseInt(candidate.getAttribute('tabindex'), 10)\n    candidateIndex = isNaN(candidateIndexAttr) ? candidate.tabIndex : candidateIndexAttr;\n\n    if (\n      candidateIndex < 0\n      || (candidate.tagName === 'INPUT' && candidate.type === 'hidden')\n      || candidate.disabled\n      || isUnavailable(candidate, elementDocument)\n    ) {\n      continue;\n    }\n\n    if (candidateIndex === 0) {\n      basicTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        index: i,\n        tabIndex: candidateIndex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(function(a, b) {\n      return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;\n    })\n    .map(function(a) {\n      return a.node\n    });\n\n  Array.prototype.push.apply(tabbableNodes, basicTabbables);\n\n  return tabbableNodes;\n}\n\nfunction createIsUnavailable(elementDocument) {\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed\n  var isOffCache = [];\n\n  // \"off\" means `display: none;`, as opposed to \"hidden\",\n  // which means `visibility: hidden;`. getComputedStyle\n  // accurately reflects visiblity in context but not\n  // \"off\" state, so we need to recursively check parents.\n\n  function isOff(node, nodeComputedStyle) {\n    if (node === elementDocument.documentElement) return false;\n\n    // Find the cached node (Array.prototype.find not available in IE9)\n    for (var i = 0, length = isOffCache.length; i < length; i++) {\n      if (isOffCache[i][0] === node) return isOffCache[i][1];\n    }\n\n    nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = isOff(node.parentNode);\n    }\n\n    isOffCache.push([node, result]);\n\n    return result;\n  }\n\n  return function isUnavailable(node) {\n    if (node === elementDocument.documentElement) return false;\n\n    var computedStyle = elementDocument.defaultView.getComputedStyle(node);\n\n    if (isOff(node, computedStyle)) return true;\n\n    return computedStyle.visibility === 'hidden';\n  }\n}\n","var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","(function(window) {\n    var re = {\n        not_string: /[^s]/,\n        number: /[diefg]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijosuxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[\\+\\-]/\n    }\n\n    function sprintf() {\n        var key = arguments[0], cache = sprintf.cache\n        if (!(cache[key] && cache.hasOwnProperty(key))) {\n            cache[key] = sprintf.parse(key)\n        }\n        return sprintf.format.call(null, cache[key], arguments)\n    }\n\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = \"\", arg, output = [], i, k, match, pad, pad_character, pad_length, is_positive = true, sign = \"\"\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i])\n            if (node_type === \"string\") {\n                output[output.length] = parse_tree[i]\n            }\n            else if (node_type === \"array\") {\n                match = parse_tree[i] // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw new Error(sprintf(\"[sprintf] property '%s' does not exist\", match[2][k]))\n                        }\n                        arg = arg[match[2][k]]\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (get_type(arg) == \"function\") {\n                    arg = arg()\n                }\n\n                if (re.not_string.test(match[8]) && re.not_json.test(match[8]) && (get_type(arg) != \"number\" && isNaN(arg))) {\n                    throw new TypeError(sprintf(\"[sprintf] expecting number but found %s\", get_type(arg)))\n                }\n\n                if (re.number.test(match[8])) {\n                    is_positive = arg >= 0\n                }\n\n                switch (match[8]) {\n                    case \"b\":\n                        arg = arg.toString(2)\n                    break\n                    case \"c\":\n                        arg = String.fromCharCode(arg)\n                    break\n                    case \"d\":\n                    case \"i\":\n                        arg = parseInt(arg, 10)\n                    break\n                    case \"j\":\n                        arg = JSON.stringify(arg, null, match[6] ? parseInt(match[6]) : 0)\n                    break\n                    case \"e\":\n                        arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential()\n                    break\n                    case \"f\":\n                        arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg)\n                    break\n                    case \"g\":\n                        arg = match[7] ? parseFloat(arg).toPrecision(match[7]) : parseFloat(arg)\n                    break\n                    case \"o\":\n                        arg = arg.toString(8)\n                    break\n                    case \"s\":\n                        arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg)\n                    break\n                    case \"u\":\n                        arg = arg >>> 0\n                    break\n                    case \"x\":\n                        arg = arg.toString(16)\n                    break\n                    case \"X\":\n                        arg = arg.toString(16).toUpperCase()\n                    break\n                }\n                if (re.json.test(match[8])) {\n                    output[output.length] = arg\n                }\n                else {\n                    if (re.number.test(match[8]) && (!is_positive || match[3])) {\n                        sign = is_positive ? \"+\" : \"-\"\n                        arg = arg.toString().replace(re.sign, \"\")\n                    }\n                    else {\n                        sign = \"\"\n                    }\n                    pad_character = match[4] ? match[4] === \"0\" ? \"0\" : match[4].charAt(1) : \" \"\n                    pad_length = match[6] - (sign + arg).length\n                    pad = match[6] ? (pad_length > 0 ? str_repeat(pad_character, pad_length) : \"\") : \"\"\n                    output[output.length] = match[5] ? sign + arg + pad : (pad_character === \"0\" ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output.join(\"\")\n    }\n\n    sprintf.cache = {}\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree[parse_tree.length] = match[0]\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree[parse_tree.length] = \"%\"\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list[field_list.length] = field_match[1]\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== \"\") {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list[field_list.length] = field_match[1]\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list[field_list.length] = field_match[1]\n                            }\n                            else {\n                                throw new SyntaxError(\"[sprintf] failed to parse named argument key\")\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError(\"[sprintf] failed to parse named argument key\")\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error(\"[sprintf] mixing positional and named placeholders is not (yet) supported\")\n                }\n                parse_tree[parse_tree.length] = match\n            }\n            else {\n                throw new SyntaxError(\"[sprintf] unexpected placeholder\")\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return parse_tree\n    }\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = (argv || []).slice(0)\n        _argv.splice(0, 0, fmt)\n        return sprintf.apply(null, _argv)\n    }\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase()\n    }\n\n    function str_repeat(input, multiplier) {\n        return Array(multiplier + 1).join(input)\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    if (typeof exports !== \"undefined\") {\n        exports.sprintf = sprintf\n        exports.vsprintf = vsprintf\n    }\n    else {\n        window.sprintf = sprintf\n        window.vsprintf = vsprintf\n\n        if (typeof define === \"function\" && define.amd) {\n            define(function() {\n                return {\n                    sprintf: sprintf,\n                    vsprintf: vsprintf\n                }\n            })\n        }\n    }\n})(typeof window === \"undefined\" ? this : window);\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport className from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nexport interface IBreadcrumbProps {\n    className?: string;\n    lastElement: boolean;\n    url: string;\n    name: string;\n}\n\nexport default class Breadcrumb extends React.Component<IBreadcrumbProps> {\n    public render() {\n        let ariaCurrent;\n        if (this.props.lastElement) {\n            ariaCurrent = `page`;\n        }\n\n        return (\n            <Link\n                to={this.props.url}\n                title={this.props.name}\n                aria-current={ariaCurrent}\n                className={className(\"breadcrumb-link\", this.props.className)}\n                itemScope\n                itemType=\"http://schema.org/Thing\"\n                itemProp=\"item\"\n            >\n                <span className=\"breadcrumb-label\" itemProp=\"name\">\n                    {this.props.name}\n                </span>\n            </Link>\n        );\n    }\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport className from \"classnames\";\nimport { t } from \"@dashboard/application\";\nimport Breadcrumb from \"@knowledge/components/Breadcrumb\";\n\nexport interface ICrumb {\n    name: string;\n    url: string;\n}\n\nexport interface IBreadcrumbsProps {\n    children: ICrumb[];\n    className?: string;\n}\n\nexport default class Breadcrumbs extends React.Component<IBreadcrumbsProps> {\n    public render() {\n        if (this.props.children.length > 1) {\n            const crumbCount = this.props.children.length - 1;\n            const crumbs = this.props.children.map((crumb, index) => {\n                const lastElement = index === crumbCount;\n                const crumbSeparator = `›`;\n                return (\n                    <React.Fragment key={`breadcrumb-${index}`}>\n                        <Breadcrumb lastElement={lastElement} name={crumb.name} url={crumb.url} />\n                        {!lastElement && (\n                            <li className=\"breadcrumb-item breadcrumbs-separator\">\n                                <span className=\"breadcrumbs-separatorIcon\">{crumbSeparator}</span>\n                            </li>\n                        )}\n                    </React.Fragment>\n                );\n            });\n            return (\n                <nav aria-label={t(\"Breadcrumb\")} className={className(\"breadcrumbs\", this.props.className)}>\n                    <ol className=\"breadcrumbs-list\">{crumbs}</ol>\n                </nav>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { t } from \"@dashboard/application\";\nimport classNames from \"classnames\";\n\nconst currentColorFill = {\n    fill: \"currentColor\",\n};\n\nexport function leftChevron(classes?: string) {\n    const title = `<`;\n    return (\n        <svg\n            className={classNames(\"icon\", \"icon-chevronLeft\", classes)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n        >\n            <title>{title}</title>\n            <path\n                d=\"M14.9,7.7l-4.4,4.4,4.4,4.4a.5.5,0,0,1,0,.6l-.6.6a.5.5,0,0,1-.6,0L8.5,12.5a.5.5,0,0,1,0-.6l5.2-5.2a.5.5,0,0,1,.6,0s.676.543.7.7A.325.325,0,0,1,14.9,7.7Z\"\n                style={currentColorFill}\n            />\n        </svg>\n    );\n}\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { t } from \"@dashboard/application\";\nimport { leftChevron } from \"@knowledge/components/Icons\";\n\ninterface IBackLink {\n    url?: string;\n    title?: string;\n    className?: string;\n}\n\nexport default class BackLink extends React.Component<IBackLink> {\n    public static defaultProps = {\n        title: t(\"Back\"),\n    };\n    public render() {\n        if (this.props.url) {\n            return (\n                <div className={classNames(\"backLink\", this.props.className)}>\n                    <a\n                        href={this.props.url}\n                        aria-label={this.props.title}\n                        title={this.props.title}\n                        className=\"backLink-link\"\n                    >\n                        {leftChevron(\"backLink-icon\")}\n                    </a>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\n\ninterface IHeading {\n    title: string;\n    depth?: 1 | 2 | 3 | 4 | 5 | 6;\n    className?: string;\n}\n\nexport default class PageTitle extends React.Component<IHeading> {\n    public render() {\n        const Tag = `h${this.props.depth}`;\n        return (\n            <Tag\n                className={classNames(\n                    \"heading\",\n                    `heading-${this.props.depth}`,\n                    { pageTitle: this.props.depth === 1 },\n                    this.props.className,\n                )}\n            >\n                {this.props.title}\n            </Tag>\n        );\n    }\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport BackLink from \"@knowledge/components/BackLink\";\nimport Heading from \"@knowledge/components/Heading\";\n\ninterface IPageHeading {\n    title: string;\n    backUrl?: string; // back link\n    className?: string;\n    actions?: JSX.Element; // possible \"actions\" like a dropdown menu or other\n}\n\nexport default class PageHeading extends React.Component<IPageHeading> {\n    public render() {\n        return (\n            <div className={classNames(\"pageHeading\", this.props.className)}>\n                <div className=\"pageHeading-main\">\n                    <BackLink url={this.props.backUrl} className=\"pageHeading-backLink\" />\n                    {/* Will not render if no url is passed */}\n                    <Heading title={this.props.title} depth={1} />\n                </div>\n                {this.props.actions && <div className=\"pageHeading-actions\">{this.props.actions}</div>}\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { IEmbedProps } from \"@dashboard/embeds\";\n\n/**\n * A base embed react component class.\n * @see {registerEmbedComponent}\n */\nexport default abstract class BaseEmbed<P extends IEmbedProps = IEmbedProps, S = {}> extends React.Component<P, S> {\n    public componentDidMount() {\n        this.props.onRenderComplete();\n    }\n\n    public abstract render();\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initCodePenEmbeds() {\n    registerEmbedComponent(\"codepen\", CodePenEmbed);\n}\n\nexport class CodePenEmbed extends BaseEmbed {\n    public render() {\n        const { attributes, height } = this.props.data;\n        const { id, src, style } = attributes;\n\n        return <iframe id={id} src={src} height={height || 300} style={style} scrolling=\"no\" />;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initGiphyEmbeds() {\n    registerEmbedComponent(\"giphy\", GiphyEmbed);\n}\n\nexport class GiphyEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes, width, height } = data;\n        const { postID } = attributes;\n        const paddingBottom = ((height || 1) / (width || 1)) * 100 + \"%\";\n        const ratioStyle: React.CSSProperties = {\n            maxWidth: width ? width + \"px\" : \"100%\",\n            paddingBottom,\n        };\n\n        if (!postID) {\n            throw new Error(\"Giphy embed fail, the post could not be found\");\n        }\n        const src = `https://giphy.com/embed/${postID}`;\n\n        return (\n            <div className=\"embedExternal-ratio\" style={ratioStyle}>\n                <iframe src={src} className=\"giphy-embed embedGiphy-iframe\" />\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\nimport { sanitizeUrl } from \"@dashboard/utility\";\n\nexport function initImageEmbeds() {\n    registerEmbedComponent(\"image\", ImageEmbed);\n}\n\nexport class ImageEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { url, name } = data;\n        const sanitizedUrl = sanitizeUrl(url);\n\n        // Yes we actually want a target blank here (even if we don't want it on normal links).\n        return (\n            <a className=\"embedImage-link\" href={sanitizedUrl || \"\"} rel=\"nofollow noopener\" target=\"_blank\">\n                <img className=\"embedImage-img\" src={url || \"\"} alt={name || \"\"} />\n            </a>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initImgurEmbeds() {\n    registerEmbedComponent(\"imgur\", ImgurEmbed);\n    onContent(convertImgurEmbeds);\n}\n\nexport class ImgurEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes } = data;\n        const { postID, isAlbum } = attributes;\n\n        const dataID = isAlbum ? `a/${postID}` : postID;\n        const url = `//imgur.com/${postID}`;\n\n        return <blockquote className=\"imgur-embed-pub\" data-id={dataID} />;\n    }\n\n    public componentDidMount() {\n        void convertImgurEmbeds().then(this.props.onRenderComplete);\n    }\n\n    public componentDidUpdate() {\n        void convertImgurEmbeds().then(this.props.onRenderComplete);\n    }\n}\n\n/**\n * Renders posted imgur embeds.\n */\nexport async function convertImgurEmbeds() {\n    const images = Array.from(document.querySelectorAll(\".imgur-embed-pub\"));\n    if (images.length > 0) {\n        await ensureScript(\"//s.imgur.com/min/embed.js\");\n\n        if (!window.imgurEmbed) {\n            throw new Error(\"The Imgur post failed to load\");\n        }\n\n        if (window.imgurEmbed.createIframe) {\n            const imagesLength = images.length;\n            for (let i = 0; i < imagesLength; i++) {\n                window.imgurEmbed.createIframe();\n            }\n        } else {\n            window.imgurEmbed.tasks = images.length;\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initInstagramEmbeds() {\n    registerEmbedComponent(\"instagram\", InstagramEmbed);\n    onContent(convertInstagramEmbeds);\n}\n\nexport class InstagramEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes, url } = data;\n        const { permaLink, versionNumber, isCaptioned } = attributes;\n        if (!data.attributes.permaLink) {\n            throw new Error(\"Attempted to embed a Instagram post failed link is invalid\");\n        }\n\n        return (\n            <blockquote\n                className=\"instagram-media\"\n                data-instgrmPermalink={permaLink}\n                data-instgrmVersion={versionNumber}\n                data-instgrmCaptioned={isCaptioned}\n            >\n                <a href={url}>{url}</a>\n            </blockquote>\n        );\n    }\n\n    public componentDidMount() {\n        void convertInstagramEmbeds().then(this.props.onRenderComplete);\n    }\n\n    public componentDidUpdate() {\n        void convertInstagramEmbeds().then(this.props.onRenderComplete);\n    }\n}\n\n/**\n * Renders posted instagram embeds.\n */\nexport async function convertInstagramEmbeds() {\n    const instagramEmbeds = document.querySelectorAll(\".instagram-media\");\n    if (instagramEmbeds.length > 0) {\n        await ensureScript(\"//platform.instagram.com/en_US/embeds.js\");\n\n        if (!window.instgrm) {\n            throw new Error(\"The Instagram post failed to load\");\n        }\n\n        window.instgrm.Embeds.process();\n    }\n}\n","/**\n  shave - Shave is a javascript plugin that truncates multi-line text within a html element based on set max height\n  @version v2.3.0\n  @link https://github.com/dollarshaveclub/shave#readme\n  @author Jeff Wainwright <yowainwright@gmail.com> (jeffry.in)\n  @license MIT\n**/\nfunction shave(target, maxHeight) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!maxHeight) throw Error('maxHeight is required');\n  var els = typeof target === 'string' ? document.querySelectorAll(target) : target;\n  if (!els) return;\n  var character = opts.character || '…';\n  var classname = opts.classname || 'js-shave';\n  var spaces = typeof opts.spaces === 'boolean' ? opts.spaces : true;\n  var charHtml = \"<span class=\\\"js-shave-char\\\">\".concat(character, \"</span>\");\n  if (!('length' in els)) els = [els];\n\n  for (var i = 0; i < els.length; i += 1) {\n    var el = els[i];\n    var styles = el.style;\n    var span = el.querySelector(\".\".concat(classname));\n    var textProp = el.textContent === undefined ? 'innerText' : 'textContent'; // If element text has already been shaved\n\n    if (span) {\n      // Remove the ellipsis to recapture the original text\n      el.removeChild(el.querySelector('.js-shave-char'));\n      el[textProp] = el[textProp]; // eslint-disable-line\n      // nuke span, recombine text\n    }\n\n    var fullText = el[textProp];\n    var words = spaces ? fullText.split(' ') : fullText; // If 0 or 1 words, we're done\n\n    if (words.length < 2) continue; // Temporarily remove any CSS height for text height calculation\n\n    var heightStyle = styles.height;\n    styles.height = 'auto';\n    var maxHeightStyle = styles.maxHeight;\n    styles.maxHeight = 'none'; // If already short enough, we're done\n\n    if (el.offsetHeight <= maxHeight) {\n      styles.height = heightStyle;\n      styles.maxHeight = maxHeightStyle;\n      continue;\n    } // Binary search for number of words which can fit in allotted height\n\n\n    var max = words.length - 1;\n    var min = 0;\n    var pivot = void 0;\n\n    while (min < max) {\n      pivot = min + max + 1 >> 1; // eslint-disable-line no-bitwise\n\n      el[textProp] = spaces ? words.slice(0, pivot).join(' ') : words.slice(0, pivot);\n      el.insertAdjacentHTML('beforeend', charHtml);\n      if (el.offsetHeight > maxHeight) max = spaces ? pivot - 1 : pivot - 2;else min = pivot;\n    }\n\n    el[textProp] = spaces ? words.slice(0, max).join(' ') : words.slice(0, max);\n    el.insertAdjacentHTML('beforeend', charHtml);\n    var diff = spaces ? \" \".concat(words.slice(max).join(' ')) : words.slice(max);\n    el.insertAdjacentHTML('beforeend', \"<span class=\\\"\".concat(classname, \"\\\" style=\\\"display:none;\\\">\").concat(diff, \"</span>\"));\n    styles.height = heightStyle;\n    styles.maxHeight = maxHeightStyle;\n  }\n}\n\nexport default shave;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { sanitizeUrl } from \"@dashboard/utility\";\nimport { getData, setData } from \"@dashboard/dom\";\nimport debounce from \"lodash/debounce\";\nimport shave from \"shave\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initLinkEmbeds() {\n    registerEmbedComponent(\"link\", LinkEmbed);\n    truncateEmbedLinks();\n\n    // Retruncate links when the window resizes.\n    window.addEventListener(\"resize\", () => debounce(truncateEmbedLinks, 200)());\n}\n\nexport class LinkEmbed extends BaseEmbed {\n    public render() {\n        const { name, attributes, url, photoUrl, body } = this.props.data;\n        const title = name ? <h3 className=\"embedText-title embedLink-title\">{name}</h3> : null;\n\n        const source = <span className=\"embedLink-source meta\">{url}</span>;\n\n        let linkImage: JSX.Element | null = null;\n        if (photoUrl) {\n            linkImage = <img src={photoUrl} className=\"embedLink-image\" aria-hidden=\"true\" />;\n        }\n        const dateTime =\n            attributes.timestamp && attributes.humanTime ? (\n                <time className=\"embedLink-dateTime meta\" dateTime={attributes.timestamp}>\n                    {attributes.humanTime}\n                </time>\n            ) : null;\n\n        const sanitizedUrl = sanitizeUrl(url);\n        return (\n            <a className=\"embedLink-link\" href={sanitizedUrl} rel=\"noreferrer\">\n                <article className=\"embedText-body embedLink-body\">\n                    {linkImage}\n                    <div className=\"embedText-main embedLink-main\">\n                        <div className=\"embedText-header embedLink-header\">\n                            {title}\n                            {dateTime}\n                            {source}\n                        </div>\n                        <div className=\"embedLink-excerpt\">{body}</div>\n                    </div>\n                </article>\n            </a>\n        );\n    }\n}\n\n/**\n * Truncate embed link excerpts in a container\n *\n * @param container - Element containing embeds to truncate\n */\nexport function truncateEmbedLinks(container = document.body) {\n    const embeds = container.querySelectorAll(\".embedLink-excerpt\");\n    embeds.forEach(el => {\n        let untruncatedText = getData(el, \"untruncatedText\");\n\n        if (!untruncatedText) {\n            untruncatedText = el.innerHTML;\n            setData(el, \"untruncatedText\", untruncatedText);\n        } else {\n            el.innerHTML = untruncatedText;\n        }\n        truncateTextBasedOnMaxHeight(el);\n    });\n}\n\n/**\n * Truncate element text based on max-height\n *\n * @param excerpt - The excerpt to truncate.\n */\nfunction truncateTextBasedOnMaxHeight(excerpt: Element) {\n    const maxHeight = parseInt(getComputedStyle(excerpt)[\"max-height\"], 10);\n    if (maxHeight && maxHeight > 0) {\n        shave(excerpt, maxHeight);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initSoundcloudEmbeds() {\n    registerEmbedComponent(\"soundcloud\", SoundcloudEmbed);\n}\n\nexport class SoundcloudEmbed extends BaseEmbed {\n    public render() {\n        const { attributes } = this.props.data;\n        const { postID, visual, showArtwork, embedUrl } = attributes;\n\n        // Ensure this is a track.\n        if (postID == null) {\n            throw new Error(\"Soundcloud embed fail, the track could not be found\");\n        }\n\n        const url = embedUrl + postID + \"&visual=\" + (visual || \"false\") + \"&show_artwork=\" + (showArtwork || \"false\");\n\n        return <iframe width=\"100%\" scrolling=\"no\" frameBorder=\"no\" src={url} />;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { IEmbedData, IEmbedElements, registerEmbedRenderer } from \"@dashboard/embeds\";\nimport { IScrapeData } from \"@dashboard/@types/api\";\n\nexport function initTwitterEmbeds() {\n    registerEmbedRenderer(\"twitter\", renderTweet);\n    onContent(convertTwitterEmbeds);\n    void convertTwitterEmbeds().then();\n}\n\n/**\n * Render a single twitter embed.\n */\nexport async function renderTweet(elements: IEmbedElements, data: IScrapeData) {\n    const contentElement = elements.content;\n    // Ensure the twitter library is loaded.\n    await ensureScript(\"//platform.twitter.com/widgets.js\");\n\n    if (!window.twttr) {\n        throw new Error(\"The Twitter widget failed to load.\");\n    }\n\n    // Ensure we have a status id to look up.\n    if (data.attributes.statusID == null) {\n        throw new Error(\"Attempted to embed a tweet but the statusID could not be found\");\n    }\n\n    // Check that we haven't already started to load this embed (In the case multiple onContents are fired off).\n    if (\n        !contentElement.classList.contains(\"js-twitterCardLoaded\") &&\n        !contentElement.classList.contains(\"js-twitterCardPreload\")\n    ) {\n        contentElement.classList.add(\"js-twitterCardPreload\");\n\n        // Render the embed.\n        const options = { conversation: \"none\" };\n        await window.twttr.widgets.createTweet(data.attributes.statusID, contentElement, options);\n        // Remove a url if there is one around.\n        const url = contentElement.querySelector(\".tweet-url\");\n        if (url) {\n            url.remove();\n        }\n\n        // Fade it in.\n        contentElement.classList.add(\"js-twitterCardLoaded\");\n    }\n}\n\n/**\n * Convert all of the twitter embeds in the page. This is for transforming twitter embeds that were\n * server rendered.\n *\n * @see library/Vanilla/Embeds/EmbedManager.php\n */\nexport async function convertTwitterEmbeds() {\n    const tweets = Array.from(document.querySelectorAll(\".js-twitterCard\"));\n    if (tweets.length > 0) {\n        await ensureScript(\"//platform.twitter.com/widgets.js\");\n        if (window.twttr) {\n            const promises = tweets.map(contentElement => {\n                // Get embed data out of the data attributes.\n                const statusID = contentElement.getAttribute(\"data-tweetid\");\n                const url = contentElement.getAttribute(\"data-tweeturl\") || \"\";\n\n                const renderData: IEmbedData = {\n                    type: \"twitter\",\n                    url,\n                    attributes: { statusID },\n                };\n\n                return renderTweet({ content: contentElement as HTMLElement, root: null as any }, renderData);\n            });\n\n            // Render all the pages twitter embeds at the same time.\n            await Promise.all(promises);\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { IEmbedProps, registerEmbedComponent } from \"@dashboard/embeds\";\nimport { simplifyFraction } from \"@dashboard/utility\";\nimport { t } from \"@dashboard/application\";\nimport { delegateEvent } from \"@dashboard/dom\";\nimport ReactDOM from \"react-dom\";\n\nexport function initVideoEmbeds() {\n    registerEmbedComponent(\"youtube\", VideoEmbed);\n    registerEmbedComponent(\"vimeo\", VideoEmbed);\n    registerEmbedComponent(\"twitch\", VideoEmbed);\n    registerEmbedComponent(\"wistia\", VideoEmbed);\n    delegateEvent(\"click\", \".js-playVideo\", handlePlayVideo);\n}\n\ninterface IState {\n    isPlaying: boolean;\n}\n\nexport class VideoEmbed extends BaseEmbed<IEmbedProps, IState> {\n    public constructor(props) {\n        super(props);\n        this.state = {\n            isPlaying: false,\n        };\n    }\n    public render() {\n        const { name, height, width, attributes, photoUrl } = this.props.data;\n        const { embedUrl } = attributes;\n\n        const ratioClass = this.ratioClass;\n        const style: React.CSSProperties = ratioClass\n            ? {}\n            : {\n                  paddingTop: ((height || 3) / (width || 4)) * 100 + \"%\",\n              };\n\n        const thumbnail = (\n            <div className={`embedVideo-ratio ${ratioClass}`} style={style}>\n                <button\n                    type=\"button\"\n                    data-url={embedUrl}\n                    aria-label={name || undefined}\n                    className=\"embedVideo-playButton iconButton\"\n                >\n                    <img\n                        onClick={this.clickHandler}\n                        src={photoUrl || undefined}\n                        role=\"presentation\"\n                        className=\"embedVideo-thumbnail\"\n                    />\n                    <span className=\"embedVideo-scrim\" />\n                    <PlayIcon />\n                </button>\n            </div>\n        );\n\n        return this.state.isPlaying ? <VideoIframe url={embedUrl} /> : thumbnail;\n    }\n\n    private clickHandler = () => {\n        this.setState({ isPlaying: true });\n    };\n\n    private get ratioClass(): string | undefined {\n        const { height, width } = this.props.data;\n        const ratio = simplifyFraction(height || 3, width || 4);\n        switch (ratio.shorthand) {\n            case \"21:9\":\n                return \"is21by9\";\n            case \"16:9\":\n                return \"is16by9\";\n            case \"4:3\":\n                return \"is4by3\";\n            case \"1:1\":\n                return \"is1by1\";\n        }\n    }\n}\n\nfunction VideoIframe(props: { url: string }) {\n    return (\n        <iframe\n            frameBorder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            className=\"embedVideo-iframe\"\n            src={props.url}\n            allowFullScreen={true}\n        />\n    );\n}\n\nfunction PlayIcon() {\n    const style: React.CSSProperties = { fill: \"currentColor\", strokeWidth: 0.3 };\n\n    return (\n        <svg className=\"embedVideo-playIcon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-1 -1 24 24\">\n            <title>{t(\"Play Video\")}</title>\n            <path\n                className=\"embedVideo-playIconPath embedVideo-playIconPath-circle\"\n                style={style}\n                d=\"M11,0A11,11,0,1,0,22,11,11,11,0,0,0,11,0Zm0,20.308A9.308,9.308,0,1,1,20.308,11,9.308,9.308,0,0,1,11,20.308Z\"\n            />\n            <polygon\n                className=\"embedVideo-playIconPath embedVideo-playIconPath-triangle\"\n                style={style}\n                points=\"8.609 6.696 8.609 15.304 16.261 11 8.609 6.696\"\n            />\n        </svg>\n    );\n}\n\n/**\n * Handle a click on a video.\n */\nfunction handlePlayVideo() {\n    // Inside of delegate event `this` is the current target of the event.\n    const playButton: HTMLElement = this;\n    const container = playButton.closest(\".embedVideo-ratio\");\n    if (container) {\n        const url = playButton.dataset.url as string;\n\n        ReactDOM.render(<VideoIframe url={url} />, container);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { delegateEvent } from \"@dashboard/dom\";\n\nexport function initSpoilers() {\n    // Setup\n    delegateEvent(\"click\", \".js-toggleSpoiler\", handleToggleSpoiler);\n}\n\n/**\n * Toggle a spoiler open and closed.\n */\nfunction handleToggleSpoiler() {\n    const toggleButton: HTMLElement = this;\n\n    const spoilerContainer = toggleButton.closest(\".spoiler\");\n    if (spoilerContainer) {\n        spoilerContainer.classList.toggle(\"isShowingSpoiler\");\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { getElementHeight } from \"@dashboard/dom\";\n\ninterface IProps {\n    id: string;\n    isCollapsed: boolean;\n    preferredMaxHeight: number; // The actual max height could exceed this, but once we pass it stop adding elements.\n    setNeedsCollapser?: (needsCollapser: boolean) => void;\n    dangerouslySetInnerHTML: {\n        __html: string;\n    };\n}\n\ninterface IState {\n    maxHeight: number | string;\n}\n\ninterface IHeightInfo {}\n\n/**\n * A class for dynamic collapsable user content.\n */\nexport default class CollapsableUserContent extends React.PureComponent<IProps, IState> {\n    public state = {\n        maxHeight: \"100%\",\n    };\n    private selfRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n    public render() {\n        const style: React.CSSProperties = { overflow: \"hidden\", maxHeight: this.state.maxHeight };\n\n        return (\n            <div\n                id={this.props.id}\n                className=\"collapsableContent userContent\"\n                style={style}\n                ref={this.selfRef}\n                dangerouslySetInnerHTML={this.props.dangerouslySetInnerHTML}\n            />\n        );\n    }\n\n    /**\n     * Do the initial height calculation and recalcuate if the window dimensions change.\n     */\n    public componentDidMount() {\n        this.calcMaxHeight();\n        window.addEventListener(\"resize\", () =>\n            debounce(() => {\n                this.calcMaxHeight();\n            }, 200)(),\n        );\n    }\n\n    /**\n     * If certain primary props change we need to recalculate the content height.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (\n            prevProps.dangerouslySetInnerHTML.__html !== this.props.dangerouslySetInnerHTML.__html ||\n            prevProps.isCollapsed !== this.props.isCollapsed\n        ) {\n            this.calcMaxHeight();\n        }\n    }\n\n    /**\n     * Calculate the exact pixel max height of the content around the threshold of preferredMaxHeight.\n     */\n    private getHeightInfo(): {\n        height: number | null;\n        needsCollapser: boolean;\n    } {\n        const self = this.selfRef.current;\n\n        if (self === null) {\n            return {\n                height: null,\n                needsCollapser: false,\n            };\n        }\n\n        if (self.childElementCount <= 1) {\n            return {\n                height: null,\n                needsCollapser: false,\n            };\n        }\n\n        let finalMaxHeight = 0;\n        let lastBottomMargin = 0;\n        for (const child of Array.from(self.children)) {\n            if (finalMaxHeight > this.props.preferredMaxHeight) {\n                return {\n                    height: finalMaxHeight,\n                    needsCollapser: true,\n                };\n            }\n\n            const { height, bottomMargin } = getElementHeight(child, lastBottomMargin);\n            if (finalMaxHeight > 0 && height > this.props.preferredMaxHeight) {\n                return {\n                    height: finalMaxHeight,\n                    needsCollapser: true,\n                };\n            }\n            lastBottomMargin = bottomMargin;\n\n            finalMaxHeight += height;\n        }\n\n        return {\n            height: finalMaxHeight,\n            needsCollapser: finalMaxHeight > this.props.preferredMaxHeight,\n        };\n    }\n\n    /**\n     * Calculate the CSS max height that we want to apply to the container div.\n     */\n    private calcMaxHeight() {\n        const { height, needsCollapser } = this.getHeightInfo();\n        if (needsCollapser && this.props.isCollapsed) {\n            this.setState({ maxHeight: height! });\n        } else {\n            this.setState({ maxHeight: this.selfRef.current!.scrollHeight });\n        }\n\n        this.props.setNeedsCollapser && this.props.setNeedsCollapser(needsCollapser);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { registerEmbedComponent, IEmbedProps, IEmbedData, IQuoteEmbedData } from \"@dashboard/embeds\";\nimport { onContent, t, formatUrl, makeProfileUrl } from \"@dashboard/application\";\nimport CollapsableUserContent from \"@dashboard/app/user-content/CollapsableContent\";\nimport uniqueId from \"lodash/uniqueId\";\nimport classnames from \"classnames\";\nimport api from \"@dashboard/apiv2\";\n\nexport function initQuoteEmbeds() {\n    registerEmbedComponent(\"quote\", QuoteEmbed as any);\n    onContent(mountQuoteEmbeds);\n}\n\n/**\n * Mount all of the existing quote embeds in the page.\n *\n * Data (including server rendered HTML content should be coming down in JSON encoded attribute data-json).\n */\nexport function mountQuoteEmbeds() {\n    const embeds = document.querySelectorAll(\".js-quoteEmbed\");\n    for (const embed of embeds) {\n        const data = embed.getAttribute(\"data-json\");\n        if (data) {\n            const quoteData = JSON.parse(data) as IEmbedData;\n            const onRenderComplete = () => {\n                embed.removeAttribute(\"data-json\");\n                embed.classList.remove(\"embedResponsive-initialLink\");\n            };\n            ReactDOM.render(\n                <QuoteEmbed data={quoteData} inEditor={false} onRenderComplete={onRenderComplete} />,\n                embed,\n            );\n        }\n    }\n}\n\ninterface IState {\n    isCollapsed: boolean;\n    needsCollapseButton: boolean;\n    renderedBody: string;\n}\n\nfunction ChevronUpIcon() {\n    return (\n        <svg className=\"icon embedQuote-chevronUp\" viewBox=\"0 0 20 20\">\n            <title>{t(\"▲\")}</title>\n            <path\n                fill=\"currentColor\"\n                stroke-linecap=\"square\"\n                fill-rule=\"evenodd\"\n                d=\"M6.79521339,4.1285572 L6.13258979,4.7726082 C6.04408814,4.85847112 6,4.95730046 6,5.0690962 C6,5.18057569 6.04408814,5.27940502 6.13258979,5.36526795 L11.3416605,10.4284924 L6.13275248,15.4915587 C6.04425083,15.5774216 6.00016269,15.6762509 6.00016269,15.7878885 C6.00016269,15.8995261 6.04425083,15.9983555 6.13275248,16.0842184 L6.79537608,16.7282694 C6.88371504,16.8142905 6.98539433,16.8571429 7.10025126,16.8571429 C7.21510819,16.8571429 7.31678748,16.8141323 7.40512644,16.7282694 L13.5818586,10.7248222 C13.6701976,10.6389593 13.7142857,10.54013 13.7142857,10.4284924 C13.7142857,10.3168547 13.6701976,10.2181835 13.5818586,10.1323206 L7.40512644,4.1285572 C7.31678748,4.04269427 7.21510819,4 7.10025126,4 C6.98539433,4 6.88371504,4.04269427 6.79521339,4.1285572 L6.79521339,4.1285572 Z\"\n                transform=\"rotate(-90 9.857 10.429)\"\n            />\n        </svg>\n    );\n}\n\nfunction ChevronDownIcon() {\n    return (\n        <svg className=\"icon embedQuote-chevronDown\" viewBox=\"0 0 20 20\">\n            <title>{t(\"▼\")}</title>\n            <path\n                fill=\"currentColor\"\n                stroke-linecap=\"square\"\n                fill-rule=\"evenodd\"\n                d=\"M6.79521339,4.1285572 L6.13258979,4.7726082 C6.04408814,4.85847112 6,4.95730046 6,5.0690962 C6,5.18057569 6.04408814,5.27940502 6.13258979,5.36526795 L11.3416605,10.4284924 L6.13275248,15.4915587 C6.04425083,15.5774216 6.00016269,15.6762509 6.00016269,15.7878885 C6.00016269,15.8995261 6.04425083,15.9983555 6.13275248,16.0842184 L6.79537608,16.7282694 C6.88371504,16.8142905 6.98539433,16.8571429 7.10025126,16.8571429 C7.21510819,16.8571429 7.31678748,16.8141323 7.40512644,16.7282694 L13.5818586,10.7248222 C13.6701976,10.6389593 13.7142857,10.54013 13.7142857,10.4284924 C13.7142857,10.3168547 13.6701976,10.2181835 13.5818586,10.1323206 L7.40512644,4.1285572 C7.31678748,4.04269427 7.21510819,4 7.10025126,4 C6.98539433,4 6.88371504,4.04269427 6.79521339,4.1285572 L6.79521339,4.1285572 Z\"\n                transform=\"rotate(90 9.857 10.429)\"\n            />\n        </svg>\n    );\n}\n\n/**\n * An embed class for quoted user content on the same site.\n *\n * This is not an editable quote. Instead it an expandable/collapsable snapshot of the quoted/embedded comment/discussion.\n *\n * This can either recieve the post format and body (when created directly in the editor) or be given the fully rendered content (when mounting on top of existing server rendered DOM stuff).\n */\nexport class QuoteEmbed extends React.Component<IEmbedProps<IEmbedData>, IState> {\n    public state: IState = {\n        isCollapsed: true,\n        renderedBody: \"\",\n        needsCollapseButton: false,\n    };\n\n    public render() {\n        const { body, insertUser } = this.quoteData;\n        const id = uniqueId(\"collapsableContent-\");\n\n        const name = (this.quoteData as any).name;\n\n        const title = name ? (\n            <h2 className=\"embedText-title embedQuote-title\">\n                <a href={this.quoteData.url} className=\"embedText-titleLink\">\n                    {name}\n                </a>\n            </h2>\n        ) : null;\n\n        const bodyClasses = classnames(\"embedText-body\", \"embedQuote-body\", { isCollapsed: this.state.isCollapsed });\n        const userUrl = makeProfileUrl(insertUser.name);\n\n        return (\n            <blockquote className={bodyClasses}>\n                <div className=\"embedText-header embedQuote-header\">\n                    {title}\n                    <a href={userUrl} className=\"embedQuote-userLink\">\n                        <span className=\"embedQuote-userPhotoWrap\">\n                            <img\n                                src={insertUser.photoUrl}\n                                alt={insertUser.name}\n                                className=\"embedQuote-userPhoto\"\n                                tabIndex={-1}\n                            />\n                        </span>\n                        <span className=\"embedQuote-userName\">{insertUser.name}</span>\n                    </a>\n                    <a href={this.quoteData.url} className=\"embedQuote-metaLink\">\n                        <time\n                            className=\"embedText-dateTime embedQuote-dateTime meta\"\n                            dateTime={this.dateTime}\n                            title={this.titleTime}\n                        >\n                            {this.humanTime}\n                        </time>\n                    </a>\n\n                    {this.state.needsCollapseButton && (\n                        <button\n                            type=\"button\"\n                            className=\"embedQuote-collapseButton\"\n                            aria-label={t(\"Toggle Quote\")}\n                            onClick={this.toggleCollapseState}\n                            aria-pressed={this.state.isCollapsed}\n                        >\n                            {this.state.isCollapsed ? <ChevronDownIcon /> : <ChevronUpIcon />}\n                        </button>\n                    )}\n                </div>\n                <div className=\"embedText-main embedQuote-main\">\n                    <div className=\"embedQuote-excerpt\">\n                        <CollapsableUserContent\n                            setNeedsCollapser={this.setNeedsCollapser}\n                            isCollapsed={this.state.isCollapsed}\n                            id={id}\n                            preferredMaxHeight={100}\n                            dangerouslySetInnerHTML={{ __html: body ? body : this.state.renderedBody }}\n                        />\n                    </div>\n                </div>\n            </blockquote>\n        );\n    }\n\n    /**\n     * When the component mounts we need to ensure we have rendered post content.\n     *\n     * Either we were passed the content, or we need to make an API call to render it.\n     */\n    public componentDidMount() {\n        if (this.quoteData.body) {\n            this.props.onRenderComplete();\n        } else {\n            const body =\n                this.quoteData.format === \"Rich\" ? JSON.stringify(this.quoteData.bodyRaw) : this.quoteData.bodyRaw;\n            void api\n                .post(\"/rich/quote\", {\n                    body,\n                    format: this.quoteData.format,\n                })\n                .then(response => {\n                    this.setState({ renderedBody: response.data.quote }, this.props.onRenderComplete);\n                });\n        }\n    }\n\n    /**\n     * Callback for the collapser to determine if we need to show the collapse toggle or not.\n     */\n    private setNeedsCollapser = needsCollapser => {\n        this.setState({ needsCollapseButton: needsCollapser });\n    };\n\n    /**\n     * Toggle the state of whether or not we are collapsed.\n     */\n    private toggleCollapseState = (event: React.ChangeEvent<any>) => {\n        event.preventDefault();\n        this.setState({ isCollapsed: !this.state.isCollapsed });\n    };\n\n    /**\n     * Get the quote embed data out of the scrape data.\n     */\n    private get quoteData(): IQuoteEmbedData {\n        return this.props.data.attributes as IQuoteEmbedData;\n    }\n\n    /**\n     * Get the timestamp to display.\n     */\n    private get dateTime(): string {\n        return this.quoteData.dateUpdated || this.quoteData.dateInserted;\n    }\n\n    /**\n     * Get the title of the time tag (long extended date)\n     */\n    private get titleTime(): string {\n        const date = new Date(this.dateTime);\n        return date.toLocaleString(undefined, {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n            weekday: \"long\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n        });\n    }\n\n    /**\n     * Get a shorter human readable time for the time tag.\n     */\n    private get humanTime(): string {\n        const date = new Date(this.dateTime);\n        return date.toLocaleString(undefined, { year: \"numeric\", month: \"short\", day: \"numeric\" });\n    }\n}\n","/**\n * Wire together the different parts of the application.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { initCodePenEmbeds } from \"@dashboard/app/user-content/embeds/codepen\";\nimport { initGettyEmbeds, convertGettyEmbeds } from \"@dashboard/app/user-content/embeds/getty\";\nimport { initGiphyEmbeds } from \"@dashboard/app/user-content/embeds/giphy\";\nimport { initImageEmbeds } from \"@dashboard/app/user-content/embeds/image\";\nimport { initImgurEmbeds, convertImgurEmbeds } from \"@dashboard/app/user-content/embeds/imgur\";\nimport { initInstagramEmbeds, convertInstagramEmbeds } from \"@dashboard/app/user-content/embeds/instagram\";\nimport { initLinkEmbeds } from \"@dashboard/app/user-content/embeds/link\";\nimport { initSoundcloudEmbeds } from \"@dashboard/app/user-content/embeds/soundcloud\";\nimport { initTwitterEmbeds, convertTwitterEmbeds } from \"@dashboard/app/user-content/embeds/twitter\";\nimport { initVideoEmbeds } from \"@dashboard/app/user-content/embeds/video\";\nimport { initEmojiSupport } from \"@dashboard/app/user-content/emoji\";\nimport { initSpoilers } from \"@dashboard/app/user-content/spoilers\";\nimport { initQuoteEmbeds, mountQuoteEmbeds } from \"@dashboard/app/user-content/embeds/quote\";\n\nexport function initAllUserContent() {\n    // User content\n    initEmojiSupport();\n    initSpoilers();\n    initCodePenEmbeds();\n    initGettyEmbeds();\n    initGiphyEmbeds();\n    initImageEmbeds();\n    initImgurEmbeds();\n    initInstagramEmbeds();\n    initLinkEmbeds();\n    initSoundcloudEmbeds();\n    initTwitterEmbeds();\n    initVideoEmbeds();\n    initQuoteEmbeds();\n}\n\n/**\n * Runs method for all embeds that need to be rendered everytime content changes.\n * This is ideal for something like react's `componentDidMount`.\n */\nexport function convertAllUserContent() {\n    void convertGettyEmbeds();\n    void convertImgurEmbeds();\n    void convertInstagramEmbeds();\n    void convertTwitterEmbeds();\n    void mountQuoteEmbeds();\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { onReady, onContent } from \"@dashboard/application\";\nimport { convertToSafeEmojiCharacters } from \"@dashboard/dom\";\n\nexport function initEmojiSupport() {\n    // Emoji\n    onReady(() => convertToSafeEmojiCharacters(document.body));\n    onContent(() => convertToSafeEmojiCharacters(document.body));\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport className from \"classnames\";\nimport { initAllUserContent } from \"@dashboard/app/user-content\";\n\ninterface IUserContent {\n    className?: string;\n    content: string;\n}\n\nexport default class UserContent extends React.Component<IUserContent> {\n    public render() {\n        return (\n            <div\n                className={className(\"userContent\", this.props.className)}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n            />\n        );\n    }\n\n    public componentDidMount() {\n        initAllUserContent();\n    }\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport className from \"classnames\";\n\nexport interface IContainer {\n    className?: string;\n    children?: JSX.Element;\n    tag?: string;\n}\n\nexport default class Container extends React.Component<IContainer> {\n    public static defaultProps = {\n        tag: \"div\",\n    };\n\n    public render() {\n        if (this.props.children) {\n            const Tag = `${this.props.tag}`;\n            return <Tag className={className(\"container\", this.props.className)}>{this.props.children}</Tag>;\n        } else {\n            return null;\n        }\n    }\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\n\nexport default class CompoundComponent<Props = {}, State = {}> extends React.Component<Props, State> {\n    protected childIsOfType = (child: React.ReactNode, component: React.ComponentType): boolean => {\n        const type = [component.displayName, component.name];\n\n        // @ts-ignore\n        const childType = child && child.type && (child.type.displayName || child.type.name);\n        return type.includes(childType);\n    };\n}\n","/**\n * @author Stéphane (slafleche) LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport { Devices } from \"@knowledge/components/DeviceChecker\";\nimport className from \"classnames\";\nimport classNames from \"classnames\";\nimport CompoundComponent from \"@knowledge/layouts/CompoundComponent\";\n\ninterface IPanelLayoutProps {\n    device: Devices;\n    children: React.ReactNode;\n    className?: string;\n    toggleMobileMenu?: (isOpen: boolean) => void;\n}\n\n/**\n * A responsive configurable Panel Layout.\n *\n * This works by declaring certain sections and having the layout place them for you.\n * See the example for usage. Just provide the sections you want to work with and the layout\n * will attempt to place them all in the best possible way.\n *\n * @layout Desktop\n * |            | Breadcrumbs  |             |\n * | LeftTop    | MiddleTop    | RightTop    |\n * | LeftBottom | MiddleBottom | RightBottom |\n *\n * @layout Tablet\n * |            | Breadcrumbs\n * | LeftTop    | RightTop\n * | LeftBottom | MiddleTop\n * |            | MiddelBottom\n * |            | RightBottom\n *\n * @layout Mobile\n *\n * HamburgerMenu / Panel - LeftBottom\n *\n * | Breadcrumbs  |\n * | LeftTop      |\n * | RightTop     |\n * | MiddleTop    |\n * | MiddleBottom |\n * | RightBottom  |\n *\n *\n * @example\n *  <PanelLayout>\n *      <PanelLayout.BreadCrumbs>\n *          <p>Put any component here</p>\n *      </PanelLayout.BreadCrumbs>\n *      <PanelLayout.LeftTop>\n *          <p>Put any component here</p>\n *      </PanelLayout.LeftTop>\n *      <PanelLayout.LeftBottom>\n *          <p>Put any component here</p>\n *      </PanelLayout.LeftBottom>\n *      <PanelLayout.MiddleBottom>\n *          <p>Put any component here</p>\n *      </PanelLayout.MiddleBottom>\n * </PanelLayout>\n */\nexport default class PanelLayout extends CompoundComponent<IPanelLayoutProps> {\n    public static LeftTop = LeftTop;\n    public static LeftBottom = LeftBottom;\n    public static MiddleTop = MiddleTop;\n    public static MiddleBottom = MiddleBottom;\n    public static RightTop = RightTop;\n    public static RightBottom = RightBottom;\n    public static Breadcrumbs = Breadcrumbs;\n\n    public static defaultProps = {\n        isMain: false,\n    };\n\n    public render() {\n        const { device } = this.props;\n        const children = this.getParsedChildren();\n\n        // Calculate some rendering variables.\n        const isMobile = device === Devices.MOBILE;\n        const isDesktop = device === Devices.DESKTOP;\n        const shouldRenderLeftPanel: boolean = !isMobile && !!(children.leftTop || children.leftBottom);\n        const shouldRenderRightPanel: boolean = isDesktop && !!(children.rightTop || children.rightBottom);\n        const renderMobilePanel: boolean = isMobile && !!children.leftBottom;\n\n        // Determine the classes we want to display.\n        const panelClasses = className(\n            \"panelLayout\",\n            { noLeftPanel: !shouldRenderLeftPanel },\n            { noRightPanel: !shouldRenderLeftPanel },\n            this.props.className,\n        );\n\n        const crumbClasses = className(\n            \"panelLayout-top\",\n            { noLeftPanel: !shouldRenderLeftPanel },\n            this.props.className,\n        );\n\n        return (\n            <div className={panelClasses}>\n                {children.breadcrumbs && (\n                    <div className={crumbClasses}>\n                        <div className=\"panelLayout-container\">\n                            {shouldRenderLeftPanel && (\n                                <Panel className=\"panelLayout-left\">\n                                    <PanelArea className=\"panelArea-breadcrumbsSpacer\" />\n                                </Panel>\n                            )}\n                            <Panel\n                                className={className(\"panelLayout-breadcrumbs\", {\n                                    hasAdjacentPanel: shouldRenderLeftPanel,\n                                })}\n                            >\n                                <PanelArea className=\"panelArea-breadcrumbs\">{children.breadcrumbs}</PanelArea>\n                            </Panel>\n                        </div>\n                    </div>\n                )}\n\n                <div className=\"panelLayout-main\">\n                    <div className=\"panelLayout-container\">\n                        {shouldRenderLeftPanel && (\n                            <Panel className=\"panelLayout-left\">\n                                <PanelArea className=\"panelArea-leftTop\">{children.leftTop}</PanelArea>\n                                <PanelArea className=\"panelArea-leftBottom\">{children.leftBottom}</PanelArea>\n                            </Panel>\n                        )}\n\n                        <div className={classNames(\"panelLayout-content\", { hasAdjacentPanel: shouldRenderLeftPanel })}>\n                            <main\n                                className={classNames(\"panelLayout-middle\", {\n                                    hasAdjacentPanel: shouldRenderRightPanel,\n                                })}\n                            >\n                                <PanelArea className=\"panelAndNav-middleTop\">{children.middleTop}</PanelArea>\n                                {isMobile && (\n                                    <PanelArea className=\"panelAndNav-mobileMiddle\">{children.leftTop}</PanelArea>\n                                )}\n                                {!isDesktop && (\n                                    <PanelArea className=\"panelAndNav-tabletMiddle\">{children.rightTop}</PanelArea>\n                                )}\n                                <PanelArea className=\"panelAndNav-middleBottom\">{children.middleBottom}</PanelArea>\n                                {!isDesktop && (\n                                    <PanelArea className=\"panelAndNav-tabletBottom\">{children.rightBottom}</PanelArea>\n                                )}\n                            </main>\n                            {shouldRenderRightPanel && (\n                                <Panel className=\"panelLayout-right\">\n                                    <PanelArea className=\"panelArea-rightTop\">{children.rightTop}</PanelArea>\n                                    <PanelArea className=\"panelArea-rightBottom\">{children.rightBottom}</PanelArea>\n                                </Panel>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Parse out a specific subset of children. This is fast enough,\n     * but should not be called more than once per render.\n     */\n    private getParsedChildren() {\n        let leftTop: React.ReactNode = null;\n        let leftBottom: React.ReactNode = null;\n        let middleTop: React.ReactNode = null;\n        let middleBottom: React.ReactNode = null;\n        let rightTop: React.ReactNode = null;\n        let rightBottom: React.ReactNode = null;\n        let breadcrumbs: React.ReactNode = null;\n\n        React.Children.forEach(this.props.children, child => {\n            switch (true) {\n                case this.childIsOfType(child, PanelLayout.LeftTop):\n                    leftTop = child;\n                    break;\n                case this.childIsOfType(child, PanelLayout.LeftBottom):\n                    leftBottom = child;\n                    break;\n                case this.childIsOfType(child, PanelLayout.MiddleTop):\n                    middleTop = child;\n                    break;\n                case this.childIsOfType(child, PanelLayout.MiddleBottom):\n                    middleBottom = child;\n                    break;\n                case this.childIsOfType(child, PanelLayout.RightTop):\n                    rightTop = child;\n                    break;\n                case this.childIsOfType(child, PanelLayout.RightBottom):\n                    rightBottom = child;\n                    break;\n                case this.childIsOfType(child, PanelLayout.Breadcrumbs):\n                    breadcrumbs = child;\n                    break;\n            }\n        });\n\n        return {\n            leftTop,\n            leftBottom,\n            middleTop,\n            middleBottom,\n            rightTop,\n            rightBottom,\n            breadcrumbs,\n        };\n    }\n}\n\n// Simple container components.\ninterface IContainerProps {\n    className?: string;\n    children?: React.ReactNode;\n}\n\nexport function Panel(props: IContainerProps) {\n    return <div className={className(\"panelLayout-panel\", props.className)}>{props.children}</div>;\n}\n\nexport function PanelArea(props: IContainerProps) {\n    return <div className={className(\"panelArea\", props.className)}>{props.children}</div>;\n}\n\nexport function PanelWidget(props: IContainerProps) {\n    return <div className={className(\"panelWidget\", props.className)}>{props.children}</div>;\n}\n\n// The components that make up the Layout itself.\ninterface IPanelItemProps {\n    children?: React.ReactNode;\n}\n\nexport function LeftTop(props: IPanelItemProps) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n}\n\nexport function LeftBottom(props: IPanelItemProps) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n}\n\nexport function MiddleTop(props: IPanelItemProps) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n}\n\nexport function MiddleBottom(props: IPanelItemProps) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n}\n\nexport function RightTop(props: IPanelItemProps) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n}\n\nexport function RightBottom(props: IPanelItemProps) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n}\n\nexport function Breadcrumbs(props: IPanelItemProps) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { getMeta } from \"@dashboard/application\";\n\n/**\n * A component for displaying and setting the document title.\n *\n * This component can render a default title or a custom title depending on the usage.\n *\n * @example <caption>Render the title in the default h1</caption>\n * <DocumentTitle title=\"Page Title\" />\n *\n * @example <caption>Render a custom title</caption>\n * <DocumentTitle title=\"Title Bar Title >\n *     <h1>Page Title</h1>\n * </DocumentTitle>\n */\nexport default class DocumentTitle extends React.Component<IProps> {\n    public componentDidMount() {\n        document.title = this.getHeadTitle(this.props);\n    }\n\n    public componentWillUpdate(nextProps: IProps) {\n        document.title = this.getHeadTitle(nextProps);\n    }\n\n    public render() {\n        if (this.props.children) {\n            return this.props.children;\n        } else {\n            return <h1>{this.props.title}</h1>;\n        }\n    }\n\n    /**\n     * Calculate the status bar title from the props.\n     *\n     * @param props - The props used to calculate the title.\n     * @returns Returns the title as a string.\n     */\n    private getHeadTitle(props: IProps): string {\n        const siteTitle: string = getMeta(\"ui.siteName\", \"\");\n        const parts: string[] = [];\n\n        if (props.title && props.title.length > 0) {\n            parts.push(props.title);\n        }\n        if (siteTitle.length > 0 && siteTitle !== props.title) {\n            parts.push(siteTitle);\n        }\n\n        return parts.join(\" - \");\n    }\n}\n\ninterface IProps {\n    title: string;\n    children?: React.ReactNode;\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { sprintf } from \"sprintf-js\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\n\nexport default class NotFoundPage extends React.PureComponent<IProps> {\n    public static defaultProps = {\n        type: \"Page\",\n    };\n\n    public render() {\n        return (\n            <div className=\"Center SplashInfo\">\n                <DocumentTitle title={this.title} />\n                <div>{this.message}</div>\n            </div>\n        );\n    }\n\n    private get title() {\n        return this.props.title || sprintf(t(\"%s Not Found\"), t(this.props.type));\n    }\n\n    private get message() {\n        return (\n            this.props.message ||\n            sprintf(t(\"The %s you were looking for could not be found.\"), t(this.props.type.toLowerCase()))\n        );\n    }\n}\n\ninterface IProps {\n    type: string;\n    title?: string;\n    message?: string;\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { match } from \"react-router\";\nimport { t } from \"@dashboard/application\";\nimport { connect } from \"react-redux\";\nimport { IStoreState, IArticlePageState } from \"@knowledge/@types/state\";\nimport Breadcrumbs, { ICrumb } from \"@knowledge/components/Breadcrumbs\";\nimport PageHeading from \"@knowledge/components/PageHeading\";\nimport UserContent from \"@knowledge/components/UserContent\";\nimport { IDeviceProps } from \"@knowledge/components/DeviceChecker\";\nimport { withDevice } from \"@knowledge/contexts/DeviceContext\";\nimport Container from \"@knowledge/layouts/components/Container\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\nimport PanelLayout, { PanelWidget } from \"@knowledge/layouts/PanelLayout\";\nimport { thunks, nonApiActions } from \"@knowledge/pages/article/articlePageActions\";\nimport NotFoundPage from \"@dashboard/components/NotFoundPage\";\n\ninterface IProps extends IDeviceProps {\n    match: match<{\n        slug: string;\n    }>;\n    articlePageState: IArticlePageState;\n    getArticle: typeof thunks.getArticle;\n    clearPageState: typeof nonApiActions.clearArticlePageState;\n}\n\ninterface IState {\n    menuOpen: boolean;\n}\n\nexport class ArticlePage extends React.Component<IProps, IState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuOpen: false,\n        };\n    }\n\n    public render() {\n        const { articlePageState } = this.props;\n        const id = this.parseIDFromSlug();\n\n        if (id === null || (articlePageState.status === LoadStatus.ERROR && articlePageState.error.status === 404)) {\n            return <NotFoundPage />;\n        }\n\n        if (articlePageState.status !== LoadStatus.SUCCESS) {\n            return null;\n        }\n\n        const { article } = articlePageState.data;\n\n        return (\n            <React.Fragment>\n                <Container>\n                    <PanelLayout device={this.props.device} toggleMobileMenu={this.toggleMobileMenu}>\n                        <PanelLayout.Breadcrumbs>\n                            <Breadcrumbs>{this.dummyBreadcrumbData}</Breadcrumbs>\n                        </PanelLayout.Breadcrumbs>\n                        <PanelLayout.LeftTop>\n                            <PanelWidget>\n                                <PageHeading title={t(\"Actions\")} />\n                            </PanelWidget>\n                        </PanelLayout.LeftTop>\n                        <PanelLayout.LeftBottom>\n                            <PanelWidget>\n                                <PageHeading title={t(\"Navigation\")} />\n                            </PanelWidget>\n                        </PanelLayout.LeftBottom>\n                        <PanelLayout.MiddleTop>\n                            <PanelWidget>\n                                <PageHeading title={article.name} />\n                            </PanelWidget>\n                        </PanelLayout.MiddleTop>\n                        <PanelLayout.MiddleBottom>\n                            <PanelWidget>\n                                <UserContent content={article.bodyRendered} />\n                            </PanelWidget>\n                        </PanelLayout.MiddleBottom>\n                        <PanelLayout.RightTop>\n                            <PanelWidget>\n                                <PageHeading title={t(\"Table of Contents\")} />\n                            </PanelWidget>\n                        </PanelLayout.RightTop>\n                        <PanelLayout.RightBottom>\n                            <PanelWidget>\n                                <PageHeading title={t(\"Related Articles\")} />\n                            </PanelWidget>\n                        </PanelLayout.RightBottom>\n                    </PanelLayout>\n                </Container>\n            </React.Fragment>\n        );\n    }\n\n    public componentDidMount() {\n        const { articlePageState, getArticle } = this.props;\n        if (articlePageState.status !== LoadStatus.PENDING) {\n            return;\n        }\n\n        const id = this.parseIDFromSlug();\n        if (id === null) {\n            return;\n        }\n\n        getArticle({ id });\n    }\n\n    public componentWillUnmount() {\n        this.props.clearPageState();\n    }\n\n    private parseIDFromSlug(): string | null {\n        const slug = this.props.match.params.slug;\n        const idRegex = /.+-(\\d+)/;\n        const id = idRegex.exec(slug);\n        if (id && id[0]) {\n            return id[1];\n        } else {\n            return null;\n        }\n    }\n\n    private get dummyBreadcrumbData(): ICrumb[] {\n        return [\n            {\n                name: \"Home\",\n                url: \"/kb\",\n            },\n            {\n                name: \"two\",\n                url: \"#\",\n            },\n            {\n                name: \"three\",\n                url: \"#\",\n            },\n            {\n                name: \"four\",\n                url: \"#\",\n            },\n            {\n                name: \"five\",\n                url: \"#\",\n            },\n            {\n                name: \"six\",\n                url: \"#\",\n            },\n        ];\n    }\n\n    private toggleMobileMenu = (menuOpen: boolean = !this.state.menuOpen) => {\n        this.setState({\n            menuOpen,\n        });\n    };\n}\n\nfunction mapStateToProps(state: IStoreState) {\n    return {\n        articlePageState: state.knowledge.articlePage,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getArticle: options => dispatch(thunks.getArticle(options)),\n        clearPageState: () => dispatch(nonApiActions.clearArticlePageState()),\n    };\n}\n\nconst withRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\n\nexport default withRedux(withDevice(ArticlePage));\n"],"sourceRoot":""}