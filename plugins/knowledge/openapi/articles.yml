openapi: 3.0.0
info:
paths:
  /articles:
    get:
      parameters:
      - description: >
          <p>Expand associated records using one or more valid field names. A
          value of "all" will expand all expandable fields.</p>
        in: query
        name: expand
        schema:
          items:
            enum:
            - excerpt
            - all
            type: string
          type: array
        style: form
      - in: query
        name: knowledgeCategoryID
        required: true
        schema:
          minimum: 1
          type: integer
      - in: query
        name: limit
        required: true
        schema:
          type: integer
          default: 30
          maximum: 100
          minimum: 1
      - description: |
          Sort method for results.
        in: query
        name: order
        schema:
          type: string
          default: dateInserted
          enum:
          - dateInserted
          - dateUpdated
          - sort
      - description: >
          <p>Page number. See <a rel="nofollow"
          href="https://docs.vanillaforums.com/apiv2/#pagination">Pagination</a>.</p>
        in: query
        name: page
        schema:
          type: integer
          default: 1
          maximum: 100
          minimum: 1
      responses:
        '200':
          content:
            'application/json':
              schema:
                items:
                  $ref: '#/components/schemas/ArticleSimple'
                type: array
          description: Success
      tags:
      - Articles
      summary: List published articles in a given knowledge category.
    post:
      responses:
        '201':
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Article'
          description: Success
      tags:
      - Articles
      requestBody:
        $ref: '#/components/requestBodies/ArticlePost'
      summary: Create a new article.
  /articles/drafts:
    get:
      parameters:
      - description: |
          <p>Unique ID article associated with a draft.</p>
        in: query
        name: articleID
        schema:
          type: integer
        x-filter:
          field: recordID
      - description: |
          <p>Unique ID of the user who created the article draft.</p>
        in: query
        name: insertUserID
        schema:
          type: integer
        x-filter:
          field: insertUserID
      responses:
        '200':
          content:
            'application/json':
              schema:
                items:
                  properties:
                    attributes:
                      description: >-
                        A free-form object containing all custom data for this
                        draft.
                      type: object
                    body:
                      description: Content of article
                      type: string
                    dateInserted:
                      description: When the draft was created.
                      format: date-time
                      type: string
                    dateUpdated:
                      description: When the draft was last updated
                      format: date-time
                      type: string
                    draftID:
                      description: The unique ID of the draft.
                      type: integer
                    excerpt:
                      description: Excerpt of article
                      type: string
                    format:
                      type: string
                      default: rich
                      description: 'Body content format: rich, text, html.'
                      enum:
                      - rich
                      - html
                      - text
                      - markdown
                    insertUserID:
                      description: Unique ID of the user who originally created the draft.
                      type: integer
                    parentRecordID:
                      description: The unique ID of the intended parent to this record.
                      nullable: true
                      type: integer
                    recordID:
                      description: >-
                        Unique ID of an existing record to associate with this
                        draft.
                      nullable: true
                      type: integer
                    recordType:
                      description: The type of record associated with this draft.
                      type: string
                    updateUserID:
                      description: Unique ID of the last user to update the draft.
                      type: integer
                  required:
                  - draftID
                  - recordType
                  - recordID
                  - parentRecordID
                  - attributes
                  - insertUserID
                  - dateInserted
                  - updateUserID
                  - dateUpdated
                  - body
                  - format
                  - excerpt
                  type: object
                type: array
          description: Success
      tags:
      - Articles
      summary: List article drafts.
    post:
      responses:
        '201':
          content:
            'application/json':
              schema:
                properties:
                  attributes:
                    description: >-
                      A free-form object containing all custom data for this
                      draft.
                    type: object
                  body:
                    description: Content of article
                    type: string
                  dateInserted:
                    description: When the draft was created.
                    format: date-time
                    type: string
                  dateUpdated:
                    description: When the draft was last updated
                    format: date-time
                    type: string
                  draftID:
                    description: The unique ID of the draft.
                    type: integer
                  excerpt:
                    description: Excerpt of article
                    type: string
                  format:
                    type: string
                    default: rich
                    description: 'Body content format: rich, text, html.'
                    enum:
                    - rich
                    - html
                    - text
                    - markdown
                  insertUserID:
                    description: Unique ID of the user who originally created the draft.
                    type: integer
                  parentRecordID:
                    description: The unique ID of the intended parent to this record.
                    nullable: true
                    type: integer
                  recordID:
                    description: >-
                      Unique ID of an existing record to associate with this
                      draft.
                    nullable: true
                    type: integer
                  recordType:
                    description: The type of record associated with this draft.
                    type: string
                  updateUserID:
                    description: Unique ID of the last user to update the draft.
                    type: integer
                required:
                - draftID
                - recordType
                - recordID
                - parentRecordID
                - attributes
                - insertUserID
                - dateInserted
                - updateUserID
                - dateUpdated
                - body
                - format
                - excerpt
                type: object
          description: Success
      tags:
      - Articles
      requestBody:
        $ref: '#/components/requestBodies/Body'
      summary: Create a new article draft.
  '/articles/drafts/{draftID}':
    delete:
      parameters:
      - description: |
          <p>Target article draft ID.</p>
        in: path
        name: draftID
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Success
      tags:
      - Articles
      summary: Delete an article draft.
    get:
      parameters:
      - description: |
          <p>Target article draft ID.</p>
        in: path
        name: draftID
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json':
              schema:
                properties:
                  attributes:
                    description: >-
                      A free-form object containing all custom data for this
                      draft.
                    type: object
                  body:
                    description: Content of article
                    type: string
                  dateInserted:
                    description: When the draft was created.
                    format: date-time
                    type: string
                  dateUpdated:
                    description: When the draft was last updated
                    format: date-time
                    type: string
                  draftID:
                    description: The unique ID of the draft.
                    type: integer
                  excerpt:
                    description: Excerpt of article
                    type: string
                  format:
                    type: string
                    default: rich
                    description: 'Body content format: rich, text, html.'
                    enum:
                    - rich
                    - html
                    - text
                    - markdown
                  insertUserID:
                    description: Unique ID of the user who originally created the draft.
                    type: integer
                  parentRecordID:
                    description: The unique ID of the intended parent to this record.
                    nullable: true
                    type: integer
                  recordID:
                    description: >-
                      Unique ID of an existing record to associate with this
                      draft.
                    nullable: true
                    type: integer
                  recordType:
                    description: The type of record associated with this draft.
                    type: string
                  updateUserID:
                    description: Unique ID of the last user to update the draft.
                    type: integer
                required:
                - draftID
                - recordType
                - recordID
                - parentRecordID
                - attributes
                - insertUserID
                - dateInserted
                - updateUserID
                - dateUpdated
                - body
                - format
                - excerpt
                type: object
          description: Success
      tags:
      - Articles
      summary: Get a single article draft.
    patch:
      parameters:
      - description: Target article draft ID.
        in: path
        name: draftID
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json':
              schema:
                properties:
                  attributes:
                    description: >-
                      A free-form object containing all custom data for this
                      draft.
                    type: object
                  body:
                    description: Content of article
                    type: string
                  dateInserted:
                    description: When the draft was created.
                    format: date-time
                    type: string
                  dateUpdated:
                    description: When the draft was last updated
                    format: date-time
                    type: string
                  draftID:
                    description: The unique ID of the draft.
                    type: integer
                  excerpt:
                    description: Excerpt of article
                    type: string
                  format:
                    type: string
                    default: rich
                    description: 'Body content format: rich, text, html.'
                    enum:
                    - rich
                    - html
                    - text
                    - markdown
                  insertUserID:
                    description: Unique ID of the user who originally created the draft.
                    type: integer
                  parentRecordID:
                    description: The unique ID of the intended parent to this record.
                    nullable: true
                    type: integer
                  recordID:
                    description: >-
                      Unique ID of an existing record to associate with this
                      draft.
                    nullable: true
                    type: integer
                  recordType:
                    description: The type of record associated with this draft.
                    type: string
                  updateUserID:
                    description: Unique ID of the last user to update the draft.
                    type: integer
                required:
                - draftID
                - recordType
                - recordID
                - parentRecordID
                - attributes
                - insertUserID
                - dateInserted
                - updateUserID
                - dateUpdated
                - body
                - format
                - excerpt
                type: object
          description: Success
      tags:
      - Articles
      requestBody:
        content:
          application/json:
            schema:
              properties:
                attributes:
                  description: >-
                    A free-form object containing all custom data for this
                    draft.
                  type: object
                body:
                  description: Content of article
                  type: string
                format:
                  type: string
                  default: rich
                  description: 'Body content format: rich, text, html.'
                  enum:
                  - rich
                  - html
                  - text
                  - markdown
                parentRecordID:
                  description: The unique ID of the intended parent to this record.
                  nullable: true
                  type: integer
                recordID:
                  description: >-
                    Unique ID of an existing record to associate with this
                    draft.
                  nullable: true
                  type: integer
              required:
              - attributes
              - body
              - format
              type: object
        required: true
      summary: Update an article draft.
  '/articles/{id}':
    get:
      parameters:
      - description: |
          <p>The article ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Article'
          description: Success
      tags:
      - Articles
      summary: Get an article.
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Article'
          description: Success
      tags:
      - Articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlePost'
        required: true
      summary: Update an existing article.
  '/articles/{id}/edit':
    get:
      parameters:
      - description: |
          <p>The article ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json':
              schema:
                properties:
                  articleID:
                    description: Unique article ID.
                    type: integer
                  body:
                    description: Body contents.
                    minLength: 0
                    nullable: true
                    type: string
                  format:
                    description: Format of the raw body content.
                    enum:
                    - text
                    - textex
                    - markdown
                    - wysiwyg
                    - html
                    - bbcode
                    - rich
                    minLength: 1
                    nullable: true
                    type: string
                  knowledgeCategoryID:
                    description: Category the article belongs in.
                    nullable: true
                    type: integer
                  locale:
                    description: Locale the article was written in.
                    minLength: 1
                    nullable: true
                    type: string
                  name:
                    description: Title of the article.
                    minLength: 0
                    nullable: true
                    type: string
                  sort:
                    description: Manual sort order of the article.
                    nullable: true
                    type: integer
                required:
                - articleID
                - knowledgeCategoryID
                - sort
                - name
                - body
                - format
                - locale
                type: object
          description: Success
      tags:
      - Articles
      summary: Get an article for editing.
  '/articles/{id}/revisions':
    get:
      parameters:
      - description: |
          <p>The article ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json':
              schema:
                items:
                  properties:
                    articleID:
                      description: Associated article ID.
                      type: integer
                    articleRevisionID:
                      description: Unique article revision ID.
                      type: integer
                    dateInserted:
                      description: When the article was created.
                      format: date-time
                      type: string
                    insertUser:
                      $ref: '#/components/schemas/UserFragment'
                    locale:
                      description: Locale the article was written in.
                      minLength: 1
                      nullable: true
                      type: string
                    name:
                      description: Title of the article.
                      minLength: 0
                      nullable: true
                      type: string
                    status:
                      description: ''
                      enum:
                      - published
                      minLength: 1
                      nullable: true
                      type: string
                  required:
                  - articleRevisionID
                  - articleID
                  - status
                  - name
                  - locale
                  - insertUser
                  - dateInserted
                  type: object
                type: array
          description: Success
      tags:
      - Articles
      summary: Get revisions from a specific article.
  '/articles/{id}/status':
    patch:
      parameters:
      - description: The article ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Article'
          description: Success
      tags:
      - Articles
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: Article status.
                  enum:
                  - undeleted
                  - deleted
                  - published
                  minLength: 1
                  type: string
              required:
              - status
              type: object
        required: true
      summary: Set the status of an article.
components:
  requestBodies:
    ArticlePost:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArticlePost'
      required: true
    Body:
      content:
        application/json:
          schema:
            properties:
              attributes:
                description: A free-form object containing all custom data for this draft.
                type: object
              body:
                description: Content of article
                type: string
              format:
                type: string
                default: rich
                description: 'Body content format: rich, text, html.'
                enum:
                - rich
                - html
                - text
                - markdown
              parentRecordID:
                description: The unique ID of the intended parent to this record.
                nullable: true
                type: integer
              recordID:
                description: Unique ID of an existing record to associate with this draft.
                nullable: true
                type: integer
            required:
            - attributes
            - body
            - format
            type: object
      required: true
  schemas:
    Article:
      properties:
        articleID:
          description: Unique article ID.
          type: integer
        body:
          description: Body contents.
          minLength: 0
          nullable: true
          type: string
        dateInserted:
          description: When the article was created.
          format: date-time
          type: string
        dateUpdated:
          description: When the article was last updated.
          format: date-time
          type: string
        excerpt:
          description: Plain-text excerpt of the current article body.
          nullable: true
          type: string
        insertUser:
          $ref: '#/components/schemas/UserFragment'
        insertUserID:
          description: Unique ID of the user who originally created the article.
          type: integer
        knowledgeCategoryID:
          description: Category the article belongs in.
          nullable: true
          type: integer
        locale:
          description: Locale the article was written in.
          minLength: 1
          nullable: true
          type: string
        name:
          description: Title of the article.
          minLength: 0
          nullable: true
          type: string
        outline:
          items:
            properties:
              level:
                description: Heading level
                type: integer
              ref:
                description: 'Heading blot reference id. Ex: #title'
                minLength: 1
                type: string
              text:
                description: Heading text line
                minLength: 1
                type: string
            required:
            - ref
            - level
            - text
            type: object
          type: array
        score:
          description: Score of the article.
          type: integer
        seoDescription:
          description: SEO-optimized description of the article content.
          minLength: 1
          nullable: true
          type: string
        seoName:
          description: SEO-optimized name for the article.
          minLength: 1
          nullable: true
          type: string
        slug:
          description: URL slug
          minLength: 1
          nullable: true
          type: string
        sort:
          description: Manual sort order of the article.
          nullable: true
          type: integer
        status:
          description: ''
          enum:
          - undeleted
          - deleted
          - published
          minLength: 1
          nullable: true
          type: string
        updateUser:
          $ref: '#/components/schemas/UserFragment'
        updateUserID:
          description: Unique ID of the last user to update the article.
          type: integer
        url:
          description: Full URL to the article.
          minLength: 1
          type: string
        views:
          description: How many times the article has been viewed.
          type: integer
      required:
      - articleID
      - knowledgeCategoryID
      - name
      - body
      - outline
      - excerpt
      - seoName
      - seoDescription
      - slug
      - sort
      - score
      - views
      - url
      - insertUserID
      - dateInserted
      - updateUserID
      - dateUpdated
      - status
      - locale
      type: object
    ArticlePost:
      properties:
        body:
          description: Body contents.
          minLength: 0
          nullable: true
          type: string
        draftID:
          description: Unique ID of a draft to remove upon updating an article.
          type: integer
        format:
          description: Format of the raw body content.
          enum:
          - text
          - textex
          - markdown
          - wysiwyg
          - html
          - bbcode
          - rich
          minLength: 1
          nullable: true
          type: string
        knowledgeCategoryID:
          description: Category the article belongs in.
          nullable: true
          type: integer
        locale:
          description: Locale the article was written in.
          minLength: 1
          nullable: true
          type: string
        name:
          description: Title of the article.
          minLength: 0
          nullable: true
          type: string
        sort:
          description: Manual sort order of the article.
          nullable: true
          type: integer
      required:
      - knowledgeCategoryID
      type: object
    ArticleSimple:
      type: object
      properties:
        articleID:
          description: Unique article ID.
          type: integer
        dateInserted:
          description: When the article was created.
          format: date-time
          type: string
        dateUpdated:
          description: When the article was last updated.
          format: date-time
          type: string
        excerpt:
          description: Plain-text excerpt of the current article body.
          nullable: true
          type: string
        insertUser:
          $ref: '#/components/schemas/UserFragment'
        insertUserID:
          description: Unique ID of the user who originally created the article.
          type: integer
        knowledgeCategoryID:
          description: Category the article belongs in.
          nullable: true
          type: integer
        name:
          description: Title of the article.
          minLength: 0
          nullable: true
          type: string
        score:
          description: Score of the article.
          type: integer
        seoDescription:
          description: SEO-optimized description of the article content.
          minLength: 1
          nullable: true
          type: string
        seoName:
          description: SEO-optimized name for the article.
          minLength: 1
          nullable: true
          type: string
        slug:
          description: URL slug
          minLength: 1
          nullable: true
          type: string
        sort:
          description: Manual sort order of the article.
          nullable: true
          type: integer
        status:
          description: ''
          enum:
          - undeleted
          - deleted
          - published
          minLength: 1
          nullable: true
          type: string
        updateUser:
          $ref: '#/components/schemas/UserFragment'
        updateUserID:
          description: Unique ID of the last user to update the article.
          type: integer
        url:
          description: Full URL to the article.
          minLength: 1
          type: string
        views:
          description: How many times the article has been viewed.
          type: integer
      required:
      - articleID
      - knowledgeCategoryID
      - name
      - seoName
      - seoDescription
      - slug
      - sort
      - score
      - views
      - url
      - insertUserID
      - dateInserted
      - updateUserID
      - dateUpdated
      - status