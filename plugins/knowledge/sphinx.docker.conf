source vanilla_dev_KnowledgeArticle {
    type = mysql
    sql_host = database
    sql_user = root
    sql_pass =
    sql_db = vanilla_dev
    sql_query_range = SELECT MIN(articleRevisionID),(select MaxID from GDN_SphinxCounter where CounterID = 5) FROM GDN_articleRevision
    sql_range_step = 10000
    sql_query_pre = set names utf8
    sql_query_pre = replace into GDN_SphinxCounter select 5, max(articleRevisionID) from GDN_articleRevision
    sql_query = SELECT \
            ar.articleRevisionID * 10 + 5, \
            ar.articleRevisionID, \
            a.articleID as DiscussionID, \
            0 as CategoryID, \
            a.knowledgeCategoryID, \
            a.insertUserID, \
            a.updateUserID, \
            5 as dtype, \
            0 as IP, \
            5 as score, \
            unix_timestamp(a.DateInserted) as DateInserted, \
            unix_timestamp(a.dateUpdated) as dateUpdated, \
            ar.name, \
            ar.bodyRendered as body, \
            FIND_IN_SET(a.status, 'published,deleted,undeleted') as status \
        FROM GDN_articleRevision ar \
        INNER JOIN GDN_article a \
        ON a.articleID = ar.articleID \
        INNER JOIN GDN_knowledgeCategory c \
        ON a.knowledgeCategoryID = c.knowledgeCategoryID \
        INNER JOIN GDN_knowledgeBase kb \
        ON c.knowledgeBaseID = kb.knowledgeBaseID \
             AND kb.status = "published" \
        WHERE ar.status = "published" \
             AND a.status = "published" \
             AND ar.articleRevisionID >= $start AND \
                 ar.articleRevisionID <= $end
    sql_attr_bigint = discussionID
    sql_attr_uint = categoryID
    sql_attr_uint = knowledgeCategoryID
    sql_attr_uint = insertUserID
    sql_attr_uint = updateUserID
    sql_attr_uint = dtype
    sql_attr_uint = ip
    sql_attr_float = score
    sql_attr_timestamp = dateUpdated
    sql_attr_uint = status
    sql_attr_timestamp = DateInserted
}


source vanilla_dev_KnowledgeArticle_Delta: vanilla_dev_KnowledgeArticle {
    sql_query_range = SELECT (select MaxID from GDN_SphinxCounter where CounterID = 5), MAX(articleRevisionID) FROM GDN_articleRevision
    sql_query_pre = set names utf8
    sql_query = SELECT \
                ar.articleRevisionID * 10 + 5, \
                ar.articleRevisionID, \
                a.articleID as DiscussionID, \
                0 as CategoryID, \
                a.knowledgeCategoryID, \
                a.insertUserID, \
                a.updateUserID, \
                5 as dtype, \
                0 as IP, \
                5 as score, \
                unix_timestamp(a.DateInserted) as DateInserted, \
                unix_timestamp(a.dateUpdated) as dateUpdated, \
                ar.name, \
                ar.bodyRendered as body, \
                FIND_IN_SET(a.status, 'published,deleted,undeleted') as status \
            FROM GDN_articleRevision ar \
            INNER JOIN GDN_article a \
            ON a.articleID = ar.articleID \
            INNER JOIN GDN_knowledgeCategory c \
            ON a.knowledgeCategoryID = c.knowledgeCategoryID \
            INNER JOIN GDN_knowledgeBase kb \
            ON c.knowledgeBaseID = kb.knowledgeBaseID \
                 AND kb.status = "published" \
            WHERE ar.status = "published" \
                 AND a.status = "published" \
                 AND $start <= $end
    sql_query_killlist = \
                        SELECT (ar.articleRevisionID * 10 + 5) FROM GDN_articleRevision ar \
                        INNER JOIN GDN_article a \
                        ON a.articleID = ar.articleID \
                           AND a.status = "deleted" \
                           AND a.dateUpdated > ar.dateInserted \
                        UNION \
                        SELECT (ar.articleRevisionID * 10 + 5) \
                        FROM GDN_article a \
                        INNER JOIN GDN_articleRevision ar \
                        ON a.articleID = ar.articleID \
                          AND ar.status IS NULL \
                          AND a.dateUpdated > ar.dateInserted \
                        UNION \
                        SELECT (ar.articleRevisionID * 10 + 5) \
                        FROM GDN_knowledgeBase kb \
                        INNER JOIN GDN_knowledgeCategory c \
                        ON c.knowledgeBaseID = kb.knowledgeBaseID \
                        INNER JOIN GDN_article a \
                        ON a.knowledgeCategoryID = c.knowledgeCategoryID \
                        INNER JOIN GDN_articleRevision ar \
                        ON a.articleID = ar.articleID \
                        WHERE kb.status = "deleted"
}

index vanilla_dev_KnowledgeArticle {
    source = vanilla_dev_KnowledgeArticle
    path = /usr/local/etc/sphinx/data/KnowledgeArticle
    morphology = stem_en
    stopwords = /usr/local/etc/sphinx/data/stops.txt
    html_strip = 1
    min_infix_len = 3
    infix_fields = name
    expand_keywords = 1
}

index vanilla_dev_KnowledgeArticle_Delta: vanilla_dev_KnowledgeArticle {
    source = vanilla_dev_KnowledgeArticle_Delta
    path = /usr/local/etc/sphinx/data/KnowledgeArticle_Delta
}

source vanilla_dev_KnowledgeArticleDeleted {
    type = mysql
    sql_host = database
    sql_user = root
    sql_pass =
    sql_db = vanilla_dev
    sql_query_range = SELECT MIN(articleRevisionID),(select MaxID from GDN_SphinxCounter where CounterID = 6) FROM GDN_articleRevision
    sql_range_step = 10000
    sql_query_pre = set names utf8
    sql_query_pre = replace into GDN_SphinxCounter select 6, max(articleRevisionID) from GDN_articleRevision
    sql_query = SELECT \
            ar.articleRevisionID * 10 + 6, \
            ar.articleRevisionID, \
            a.articleID as DiscussionID, \
            0 as CategoryID, \
            a.knowledgeCategoryID, \
            a.insertUserID, \
            a.updateUserID, \
            6 as dtype, \
            0 as IP, \
            5 as score, \
            unix_timestamp(a.DateInserted) as DateInserted, \
            unix_timestamp(a.dateUpdated) as dateUpdated, \
            ar.name, \
            ar.bodyRendered as body, \
            FIND_IN_SET(a.status, 'published,deleted,undeleted') as status \
        FROM GDN_articleRevision ar \
        INNER JOIN GDN_article a \
        ON a.articleID = ar.articleID \
        INNER JOIN GDN_knowledgeCategory c \
        ON a.knowledgeCategoryID = c.knowledgeCategoryID \
        INNER JOIN GDN_knowledgeBase kb \
        ON c.knowledgeBaseID = kb.knowledgeBaseID \
             AND kb.status = "published" \
        WHERE ar.status = "published" \
             AND a.status = "deleted" \
             AND ar.articleRevisionID >= $start AND \
                 ar.articleRevisionID <= $end
    sql_attr_bigint = discussionID
    sql_attr_uint = categoryID
    sql_attr_uint = knowledgeCategoryID
    sql_attr_uint = insertUserID
    sql_attr_uint = updateUserID
    sql_attr_uint = dtype
    sql_attr_uint = ip
    sql_attr_float = score
    sql_attr_timestamp = dateUpdated
    sql_attr_uint = status
    sql_attr_timestamp = DateInserted
}

source vanilla_dev_KnowledgeArticleDeleted_Delta: vanilla_dev_KnowledgeArticleDeleted {
    sql_query_range = SELECT 1, MAX(articleRevisionID) FROM GDN_articleRevision
    sql_query_pre = set names utf8
    sql_query = SELECT \
                ar.articleRevisionID * 10 + 6, \
                ar.articleRevisionID, \
                a.articleID as DiscussionID, \
                0 as CategoryID, \
                a.knowledgeCategoryID, \
                a.insertUserID, \
                a.updateUserID, \
                6 as dtype, \
                0 as IP, \
                5 as score, \
                unix_timestamp(a.DateInserted) as DateInserted, \
                unix_timestamp(a.dateUpdated) as dateUpdated, \
                ar.name, \
                ar.bodyRendered as body, \
                FIND_IN_SET(a.status, 'published,deleted,undeleted') as status \
            FROM GDN_articleRevision ar \
            INNER JOIN GDN_article a \
            ON a.articleID = ar.articleID \
            INNER JOIN GDN_knowledgeCategory c \
            ON a.knowledgeCategoryID = c.knowledgeCategoryID \
            INNER JOIN GDN_knowledgeBase kb \
            ON c.knowledgeBaseID = kb.knowledgeBaseID \
                 AND kb.status = "published" \
            WHERE ar.status = "published" \
                 AND a.status = "deleted" \
                 AND  $start <= $end
    sql_query_killlist = \
                        SELECT (ar.articleRevisionID * 10 + 6) FROM GDN_articleRevision ar \
                        INNER JOIN GDN_article a \
                        ON a.articleID = ar.articleID \
                           AND a.status = "published" \
                           AND a.dateUpdated > ar.dateInserted \
                        UNION \
                        SELECT (ar.articleRevisionID * 10 + 6) \
                        FROM GDN_knowledgeBase kb \
                        INNER JOIN GDN_knowledgeCategory c \
                        ON c.knowledgeBaseID = kb.knowledgeBaseID \
                        INNER JOIN GDN_article a \
                        ON a.knowledgeCategoryID = c.knowledgeCategoryID \
                        INNER JOIN GDN_articleRevision ar \
                        ON a.articleID = ar.articleID \
                        WHERE kb.status = "deleted"
}

index vanilla_dev_KnowledgeArticleDeleted {
    source = vanilla_dev_KnowledgeArticleDeleted
    path = /usr/local/etc/sphinx/data/KnowledgeArticleDeleted
    morphology = stem_en
    stopwords = /usr/local/etc/sphinx/data/stops.txt
    html_strip = 1
    min_infix_len = 3
    infix_fields = name
    expand_keywords = 1
}

index vanilla_dev_KnowledgeArticleDeleted_Delta: vanilla_dev_KnowledgeArticleDeleted {
    source = vanilla_dev_KnowledgeArticleDeleted_Delta
    path = /usr/local/etc/sphinx/data/KnowledgeArticleDeleted_Delta
}