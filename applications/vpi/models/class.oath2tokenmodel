<?php if (!defined('APPLICATION')) exit();
/*
Copyright 2008, 2009 Vanilla Forums Inc.
This file is part of Garden.
Garden is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
Garden is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with Garden.  If not, see <http://www.gnu.org/licenses/>.
Contact Vanilla Forums Inc. at support [at] vanillaforums [dot] com
*/

class OAuth2TokenModel {
   public static function Expired($Timestamp, $ExpiresIn = FALSE) {
      if (is_array($Timestamp)) {
         $ExpiresIn = GetValue('ExpiresIn', $Timestamp, 0);
         $Timestamp = GetValue('Timestamp', $Timestamp, 0);
      }

      return FALSE;
   }

   public function Generate() {
      return RandomString(32, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');
   }

   public function GetID($Token) {
      return Gdn::SQL()->GetWhere('OAuth2Token', array('Token' => $Token))->FirstRow(DATASET_TYPE_ARRAY);
   }

   public function Issue($Type, $ExpiresIn = FALSE) {
      if ($ExpiresIn === FALSE)
         $ExpiresIn = C('VPI.OAuth.ExpiresIn', 0);
      
      $NewToken = $this->Generate();


      // Look for an existing token.
      $TokenRow = Gdn::SQL()->GetWhere('OAuth2TokenModel', array('UserID' => Gdn::Session()->UserID, 'TokenType' => $Type))->FirstRow(DATASET_TYPE_ARRAY);
      if ($TokenRow === FALSE) {
         Gdn::SQL()->Insert('OAuth2TokenModel', array(
            'Token' => $NewToken,
            'TokenType' => $Type,
            'UserID' => Gdn::Session()->UserID,
            'ExpiresIn' => $ExpiresIn));
      } else {
         Gdn::SQL()->Update('OAuth2TokenModel',
            array('Token' => $NewToken, 'ExpiresIn' => $ExpiresIn));
      }
      return $NewToken;
   }
}