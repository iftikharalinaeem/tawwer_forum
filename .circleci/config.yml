version: 2.1
orbs:
    core: vanilla/core@2
    codecov: codecov/codecov@1.0.5
aliases:
    - &symlink_addons
        run:
            name: Symlink addons
            command: |
                cd ~/workspace/repo
                ./cloud/scripts/symlink-addons
    - &restore_yarn_cache
        restore_cache:
            keys:
                # when lock file changes, use increasingly general patterns to restore cache
                - yarn-packages-v1-{{ .Branch }}-{{ checksum "~/workspace/repo/yarn.lock" }}
                - yarn-packages-v1-{{ .Branch }}-
                - yarn-packages-v1-
    - &run_yarn
        run:
            name: Install Yarn Packages
            command: |
                if [ -d ~/workspace/repo ]; then
                    cd ~/workspace/repo
                fi
                yarn install --pure-lockfile
    - &save_yarn_cache
        save_cache:
            paths:
                - ~/.cache/yarn
            key: yarn-packages-v1-{{ .Branch }}-{{ checksum "~/workspace/repo/yarn.lock" }}
    - &attach_workspace
        attach_workspace:
            at: ~/workspace
    - &prepare_coverage
        run:
            name: Prepare Coverage
            command: mkdir ~/phpunit
    - &upload_coverage
        run:
            name: Upload Coverage
            command: |
                cd ~/workspace/repo
                curl -s https://codecov.io/bash | bash -s -- \
                    -s "$HOME/workspace/repo" \
                    -y ".codecov.yml"\
                    -Z || echo 'Codecov upload failed'
    - &run_composer
        run:
            name: Install Composer Packages
            command: |
                cd ~/workspace/repo
                VANILLA_BUILD_DISABLE_AUTO_BUILD=true composer install --optimize-autoloader
    - &run_php_lint
        run:
            name: Linting PHP
            command: |
                cd ~/workspace/repo
                # Validate syntax in all the files
                .circleci/scripts/php-lint.sh ./applications
                .circleci/scripts/php-lint.sh ./conf
                .circleci/scripts/php-lint.sh ./library
                .circleci/scripts/php-lint.sh ./plugins
                .circleci/scripts/php-lint.sh ./themes

                # Run code sniffer on the diffed files.
                ./.circleci/scripts/diff-standards.sh $CUSTOM_TARGET_BRANCH
    - &db_sphinx_env
      MYSQL_HOST: 127.0.0.1
      MYSQL_DATABASE: vanilla_test
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    - &prepare_mysql
        run:
            name: Prepare MySQL
            command: |
                # Wait for MySQL to be fully booted.
                dockerize -wait tcp://localhost:3306 -timeout 15s

                # Create the SQL "circleci" user. Once we remove travis this should no longer be necessary.
                mysql -h 127.0.0.1 -u root -e \
                    "CREATE USER 'circleci'@'127.0.0.1'; GRANT ALL PRIVILEGES ON vanilla_test.* TO 'circleci'@'127.0.0.1' IDENTIFIED BY '';"
    - &prepare_hosts
        run:
            name: Prepare Hosts
            command: |
                # Localhost redirects
                echo 127.0.0.1 vanilla.test | sudo tee -a /etc/hosts
                cat /etc/hosts
executors:
    php72-sphinx:
        docker:
            - image: adamcharron/vanilla-php72-mysql
            - image: vanillaryan/sphinxsearch-vanilla-ci
              environment: *db_sphinx_env
            - image: mysql:5.7
              environment: *db_sphinx_env
    php73-sphinx:
        docker:
            - image: circleci/php:7.3.6-fpm-node
            - image: vanillaryan/sphinxsearch-vanilla-ci
              environment: *db_sphinx_env
            - image: mysql:5.7
              environment: *db_sphinx_env

jobs:
    frontend_setup:
        executor: core/node
        steps:
            - run:
                name: Versions
                command: |
                    node --version
                    yarn --version
            - core/checkout
            - *symlink_addons
            - run:
                # Makes workspace persisting much faster if not needed.
                name: Cleaning up git directory
                command: |
                    cd ~/workspace/repo
                    rm -rf .git
            - *restore_yarn_cache
            - *run_yarn
            - *save_yarn_cache
            - persist_to_workspace:
                root: ~/workspace
                paths:
                    - repo
                    - ci-scripts
    frontend_build:
        executor: core/node
        resource_class: large # 4 cores
        steps:
            - *attach_workspace
            - run:
                name: Build Frontend
                command: |
                    cd ~/workspace/repo
                    NODE_OPTIONS=--max_old_space_size=7000 PARALLEL_CORES=4 yarn build
    frontend_test:
        executor: core/node
        steps:
            - *attach_workspace
            - run:
                name: Build Frontend
                command: |
                    cd ~/workspace/repo
                    yarn test
    frontend_lint:
        executor: core/node
        resource_class: large
        steps:
            - *attach_workspace
            - run: |
                cd ~/workspace/repo
                # 4 cores
                yarn lint -w 4
                yarn prettier --check "**/src/scripts/**/*"
    frontend_typechecker:
        executor: core/node
        resource_class: large
        steps:
            - *attach_workspace
            - run: |
                cd ~/workspace/repo
                yarn check-types
    php_setup:
        executor: php72-sphinx
        steps:
            - run:
                name: Versions
                command: |
                    php --version
                    composer --version
            - core/checkout
            - *symlink_addons
            # We explcitly don't cache dependencies.
            # The cache validation & fetching seems to take longer than fetching from source.
            - *run_composer
            - persist_to_workspace:
                root: ~/workspace
                paths:
                    - repo
                    - ci-scripts
    php_72_lint:
        executor: php72-sphinx
        steps: &php_lint_steps
            - core/checkout
            - *symlink_addons
            - *run_composer
            - *run_php_lint
    php_72_tests:
        executor: php72-sphinx
        resource_class: medium
        parallelism: 20
        steps: &php_unit_library_test_steps
            - *attach_workspace
            - run:
                name: Test setup
                command: |
                    cd ~/workspace/repo
                    cp ./.circleci/scripts/templates/vanilla/conf/bootstrap.before.php ./conf/bootstrap.before.php
            - *prepare_mysql
            - *prepare_hosts
            - *prepare_coverage
            - run:
                name: PHP Tests
                command: |
                  cd ~/workspace/repo
                  filter=$(./.circleci/scripts/parallelPHPUnitFilter.sh ./**/tests/**/*Test.php)
                  echo $filter;

                  ./vendor/bin/phpunit \
                      -c phpunit.xml.dist \
                      --exclude-group=ignore \
                      --log-junit ~/phpunit/php-tests-junit.xml \
                      --coverage-clover=php-tests-coverage.xml \
                      --filter $filter
            - run:
                name: Adjust JUnit Paths
                command: $HOME/workspace/repo/.circleci/scripts/fixJUnitPaths.sh "$HOME/phpunit/php-tests-junit.xml"
            - *upload_coverage
            - store_test_results:
                path: ~/phpunit
    php_72_integration:
        executor: php72-sphinx
        resource_class: medium
        steps: &php_integration_test_steps
            - *attach_workspace
            - *prepare_mysql
            - *prepare_hosts
            - core/prepare_nginx
            - run:
                name: APIv0 Tests
                command: |
                    cd ~/workspace/repo
                    ./vendor/bin/phpunit \
                        -c phpunit.xml.dist \
                        --exclude-group=ignore \
                        --testsuite="APIv0" \
                        --coverage-clover=apiv0-coverage.xml
            - *upload_coverage
            - store_test_results:
                path: ~/phpunit
    php_73_lint:
        executor: php73-sphinx
        steps: *php_lint_steps
    php_73_library_tests:
        executor: php73-sphinx
        steps: *php_unit_library_test_steps
    php_73_integration:
        executor: php73-sphinx
        steps: *php_integration_test_steps
    dependency_audit:
        executor: php72-sphinx
        steps:
            - core/checkout
            - run: yarn audit
    chromatic_test:
        executor: core/node
        working_directory: ~/workspace/repo
        steps:
            - run:
                command: |
                    if [ -z "$CHROMATIC_APP_CODE" ]; then
                        echo "No Chromatic app code detected. Exiting."
                        circleci-agent step halt
                    else
                        echo "Chromatic app code detected. Proceeding..."
                    fi
                name: "Conditionally perform Chromatic test"
            - checkout
            - *symlink_addons
            - *restore_yarn_cache
            - *run_yarn
            - *save_yarn_cache
            - run:
                command: yarn chromatic test --exit-zero-on-changes --exit-once-uploaded
                name: Chromatic - accept all changes
    chromatic_run_accept_all:
        executor: core/node
        working_directory: ~/workspace/repo
        steps:
            - run:
                command: |
                    if [ -z "$CHROMATIC_APP_CODE" ]; then
                        echo "No Chromatic app code detected. Exiting."
                        circleci-agent step halt
                    else
                        echo "Chromatic app code detected. Proceeding..."
                    fi
                name: "Conditionally perform Chromatic test"
            - checkout
            - *symlink_addons
            - *restore_yarn_cache
            - *run_yarn
            - *save_yarn_cache
            - run:
                command: yarn chromatic test --auto-accept-changes
                name: Chromatic - accept all changes


workflows:
    version: 2
    commit:
        jobs:
            - chromatic_test:
                filters:
                    branches:
                        ignore: master
            - chromatic_run_accept_all:
                filters:
                    branches:
                        only: master
            # PHP 7.2 jobs are only nightly until we move upwards on infra.
            - php_setup
            - php_72_lint
            - php_72_integration:
                requires:
                    - php_setup
            - php_72_tests:
                requires:
                    - php_setup
            # JS and browsers
            - frontend_setup
            - frontend_lint:
                requires:
                    - frontend_setup
            - frontend_typechecker:
                requires:
                    - frontend_setup
            - frontend_build:
                requires:
                    - frontend_setup
            - frontend_test:
                requires:
                    - frontend_setup
    nightly:
        triggers:
            - schedule:
                cron: "0 0 * * *" # Once a day.
                filters:
                    branches:
                        only:
                            - master
        jobs:
            - dependency_audit
            # PHP and serverside
            - php_setup
            - php_72_lint
            - php_73_lint
            - php_72_integration:
                requires:
                    - php_setup
            - php_73_integration:
                requires:
                    - php_setup
            - php_72_tests:
                requires:
                    - php_setup
            ## JS & browsers
            - frontend_setup
            - frontend_lint:
                requires:
                    - frontend_setup
            - frontend_typechecker:
                requires:
                    - frontend_setup
            - frontend_build:
                requires:
                    - frontend_setup
            - frontend_test:
                requires:
                    - frontend_setup
